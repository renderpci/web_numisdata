"use strict";var mint={section_id:null,export_data_container:null,set_up:function(e){const t=this;t.export_data_container=e.export_data_container,t.section_id=e.section_id;const n=page.render_export_data_buttons();t.export_data_container.appendChild(n),t.export_data_container.classList.add("hide");const o=page.create_suggestions_button();return t.export_data_container.appendChild(o),t.section_id&&t.get_row_data({section_id:t.section_id}).then((function(e){console.log("--\x3e set_up get_row_data API response:",e.result);const n=e.result.find((e=>"mint"===e.id)),o=page.parse_mint_data(n.result[0]);t.draw_row({target:document.getElementById("row_detail"),ar_rows:[o]}),void 0!==n.result[0]&&o.georef_geojson&&t.draw_map({mint_map_data:o.georef_geojson,mint_popup_data:{section_id:o.section_id,title:o.name,description:o.public_info.trim()},types:o.relations_types});const a=e.result.find((e=>"mint_catalog"===e.id));if(a.result){const e=a.result.find((e=>"mints"===e.term_table));e&&e.section_id?t.get_types_data2({section_id:e.section_id}).then((function(n){console.log(n[0]);for(let e=0;e<n.length;e++)n[e].catalog_info=n[e].term_section_id;const o=t.draw_types2({ar_rows:n,mint_section_id:e.section_id});if(o){const e=document.getElementById("types");e.appendChild(o),page.activate_images_gallery(e)}})):(console.warn("Ignored invalid _mint_catalog:",e),console.warn("mint_catalog:",a))}event_manager.publish("data_request_done",{request_body:null,result:{mint:n.result,mint_catalog:a.result},export_data_parser:page.export_parse_mint_data}),t.export_data_container.classList.remove("hide")})),!0},get_row_data:function(e){const t=e.section_id,n=[];n.push({id:"mint",options:{dedalo_get:"records",table:"mints",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["section_id","lang","name","place_data","place","public_info","bibliography_data","map","uri","indexation","indexation_data","georef_geojson","relations_types","authorship_data","authorship_names","authorship_surnames","authorship_roles"],sql_filter:"section_id = "+parseInt(t),count:!1,resolve_portals_custom:{bibliography_data:"bibliographic_references"}}}),n.push({id:"mint_catalog",options:{dedalo_get:"records",table:"catalog",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["section_id","term","term_table"],count:!1,limit:0,sql_filter:"term_data='[\""+parseInt(t)+"\"]'"}});return data_manager.request({body:{dedalo_get:"combi",ar_calls:n}})},get_types_data2:function(e){const t=e.section_id;return new Promise((function(e){const n={dedalo_get:"records",table:"catalog",ar_fields:["*"],lang:page_globals.WEB_CURRENT_LANG_CODE,sql_filter:"section_id = "+parseInt(t),limit:0,group:null,count:!1,order:"norder ASC",resolve_portals_custom:{term_data:"types"},process_result:{fn:"process_result::add_parents_and_children_recursive",columns:[{name:"parents"}]}};data_manager.request({body:n}).then((function(t){console.log("get_types_data2 API response:",t);const n=t.result?page.parse_catalog_data(t.result):null;e(n)}))}))},draw_types2:function(e){const t=e.ar_rows,n=e.mint_section_id,o=new DocumentFragment,a=tstring.coin_production||"Coin production",s=common.create_dom_element({element_type:"div",class_name:"info_line separator",parent:o});common.create_dom_element({element_type:"label",class_name:"big_label",text_content:a,parent:s});const r=[];for(let e=0;e<t.length;e++){const a=t[e];if(a.section_id==n)continue;if(!(!!a.parents&&a.parents.find((e=>e==n)))){console.log("Excluded row:",a);continue}const s=mint_row.draw_type_item(a);s&&(r.push(s),o.appendChild(s))}for(let e=0;e<r.length;e++){const t=r[e];if(t.parent){const e=r.find((function(e){return e.section_id==t.parent}));e&&e.container&&e.container.appendChild(t)}else console.log("node without parent:",t)}return o},draw_row:function(e){const t=void 0!==e.ar_rows[0]?e.ar_rows[0]:null,n=e.target;if(!t)return console.warn("Warning! draw_row row_object no found in options"),null;for(self.row_object=t,!0===SHOW_DEBUG&&console.log("Mint row_object:",t);n.hasChildNodes();)n.removeChild(n.lastChild);const o=new DocumentFragment,a=common.create_dom_element({element_type:"div",class_name:"",parent:o});if(!0===dedalo_logged){common.create_dom_element({element_type:"a",class_name:"section_id go_to_dedalo",text_content:t.section_id,href:"/dedalo/lib/dedalo/main/?t=numisdata6&id="+t.section_id,parent:a}).setAttribute("target","_blank")}if(t.name&&t.name.length>0){const e=common.create_dom_element({element_type:"div",class_name:"line-tittle-wrap",parent:a});let n=t.name;if(common.create_dom_element({element_type:"div",class_name:"line-tittle golden-color",text_content:n,parent:e}),t.place&&t.place.length>0){const n="| "+t.place;common.create_dom_element({element_type:"div",class_name:"info_value",text_content:n,parent:e})}if(t.authorship_names&&t.authorship_names.length>0){const n=t.authorship_names.split("|"),o=t.authorship_surnames.split("|"),a=t.authorship_roles.split("|"),s=n.length;for(let t=0;t<s;t++){const s=n[t].trim().toUpperCase()+" "+o[t].trim().toUpperCase()+" | "+a[t].trim();common.create_dom_element({element_type:"div",class_name:"authorship",text_content:s,parent:e})}}}const s=common.create_dom_element({element_type:"div",class_name:"block-expandable",parent:a});let r=0;if(t.public_info&&t.public_info.length>0){const e=t.public_info;r+=e.length;common.create_dom_element({element_type:"div",class_name:"info_text_block",inner_html:e,parent:s})}if(r>220&&i(s,a),t.bibliography_data&&t.bibliography_data.length>0){const e=common.create_dom_element({element_type:"div",class_name:"info_line separator",parent:a});common.create_dom_element({element_type:"label",class_name:"big_label",text_content:tstring.bibliographic_references||"Bibliographic references",parent:e});const n=common.create_dom_element({element_type:"div",class_name:"info_text_block",parent:a});console.log("row_object.bibliography_data:",t.bibliography_data);const o=t.bibliography_data,s=o.length;for(let e=0;e<s;e++){const t=biblio_row_fields.render_row_bibliography(o[e]);common.create_dom_element({element_type:"div",class_name:"bibliographic_reference",parent:n}).appendChild(t)}i(n,a)}if(t.uri&&t.uri.length>0)for(let e=0;e<t.uri.length;e++){const n=t.uri[e],o=(n.label,'<a class="icon_link info_value" href="'+n.value+'" target="_blank"> '+n.label+"</a>");common.create_dom_element({element_type:"span",class_name:"",inner_html:o,parent:a})}return n.appendChild(o),n;function i(e,t){e.classList.add("contracted-block");const n=common.create_dom_element({element_type:"div",class_name:"text-block-separator",parent:t}),o=common.create_dom_element({element_type:"div",class_name:"separator-arrow",parent:n});n.addEventListener("click",(function(){e.classList.contains("contracted-block")?(e.classList.remove("contracted-block"),o.style.transform="rotate(-90deg)"):(e.classList.add("contracted-block"),o.style.transform="rotate(90deg)")}))}},draw_map:function(e){const t=this,n=e.mint_map_data,o=e.mint_popup_data,a=e.types;function s(e){return{section_id:e.section_id,title:e.name,description:""}}return t.get_findspot_hoards({types:a}).then((function(e){const a=document.getElementById("map_container");t.map=t.map||new map_factory,t.map.init({map_container:a,map_position:null,popup_builder:page.map_popup_builder,popup_options:page.maps_config.popup_options,source_maps:page.maps_config.source_maps,legend:page.render_map_legend});const r=t.map_data(n,o),i=e.result[0].result;if(i&&i.length>0)for(let e=0;e<i.length;e++){if(!i[e].georef_geojson)continue;const n=JSON.parse(i[e].georef_geojson),o=s(i[e]);o.type={},o.type="findspot";const a=t.map_data(n,o);r.push(a[0])}const _=e.result[1].result;if(_&&_.length>0)for(let e=0;e<_.length;e++){if(!_[e].georef_geojson)continue;const n=JSON.parse(_[e].georef_geojson),o=s(_[e]);o.type={},o.type="hoard";const a=t.map_data(n,o);r.push(a[0])}console.log("map_data_points:",r),t.map.parse_data_to_map(r,null).then((function(){a.classList.remove("hide_opacity")}))})),!0},get_findspot_hoards:function(e){const t=e.types;console.log("types:",t);const n=[];for(let e=t.length-1;e>=0;e--){const o=t[e];n.push("types like '%\""+o+"\"%'")}const o="("+n.join(" OR ")+")",a=[];a.push({id:"findspots",options:{dedalo_get:"records",table:"findspots",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["*"],count:!1,sql_filter:o}}),a.push({id:"hoards",options:{dedalo_get:"records",table:"hoards",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["*"],count:!1,sql_filter:o}});return data_manager.request({body:{dedalo_get:"combi",ar_calls:a}})},map_data:function(e,t){const n=function(){switch(t.type){case"findspot":return page.maps_config.markers.findspot;case"hoard":return page.maps_config.markers.hoard;default:return page.maps_config.markers.mint}}(),o=Array.isArray(e)?e:[e],a=[];for(let e=0;e<o.length;e++){const s={lat:null,lon:null,geojson:[o[e]],marker_icon:n,data:t};a.push(s)}return a}};