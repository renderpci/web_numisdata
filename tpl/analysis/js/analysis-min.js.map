{"version":3,"names":["DEFAULT_BAR_COLOR","chart_wrapper","div_wrapper","this","constructor","Error","download_chart_container","undefined","controls_container","chartjs_chart_wrapper","call","canvas","chart","histogram_wrapper","data","xlabel","_data","_density","_n_bins_default","Math","ceil","sqrt","length","_n_bins","_xlabel","_n_decimals","_max_bins_multiplier","_bar_color","bar_chart_wrapper","ylabel","Array","isArray","_check_array_valid","_parse_array","_check_object_valid","_parse_object","_ylabel","_bar_colors","labels","fill","d3_chart_wrapper","svg","boxvio_chart_wrapper","prototype","render","self","replaceChildren","common","create_dom_element","element_type","id","class_name","style","display","parent","format_select","width","format","get_supported_export_formats","value","text_content","toUpperCase","addEventListener","download_chart","filename","download_func_name","Object","setPrototypeOf","download_chart_as_png","tmpLink","href","toBase64Image","setAttribute","click","remove","download_chart_as_svg","_tweak_c2s","offsetWidth","height","offsetHeight","options","animation","reponsive","svgContext","C2S","Chart","config","_config","encodeURIComponent","getSerializedSvg","getContext","contextId","__canvas","getAttribute","name","type","listener","eventListenerOptions","get_density","set_density","density","bin_centers","plot_data","half_bin_width","data_min","data_max","_get_plotting_data","datasets","label","_get_density_string","scales","y","title","text","update","get_n_bins","set_n_bins","n_bins","x","min","max","ticks","stepSize","plugins","tooltip","callbacks","_get_tooltip_title_callback","get_bar_color","set_bar_color","bar_color","backgroundColor","bin_width","apply","map","index","entries","i","j","sum","reduce","partialSum","val","n_decimals","items","dataIndex","toFixed","_render_chart","_render_control_panel","chart_data","categoryPercentage","barPercentage","scales_options","offset","grid","callback","Number","font","size","plugins_options","legend","parsing","normalized","slider","density_checkbox","Boolean","checked","color_picker_container","window","iro","ColorPicker","color","layoutDirection","layout","component","ui","Wheel","Slider","sliderType","on","rgbaString","arr","ele","slice","filter","v","a","indexOf","values","obj","keys","get_bar_colors","set_bar_colors","bar_colors","isInteger","bar_select","String","color_picker","set","d3","select","append","attr","svg_data","node","outerHTML","svg_blob","Blob","url","URL","createObjectURL","revokeObjectURL","analysis","form","area_name","row","export_data_container","form_items_container","chart_wrapper_container","set_up","form_node","render_form","appendChild","fragment","DocumentFragment","form_factory","form_row","item_factory","tstring","mint","q_column","value_wrapper","eq","eq_in","eq_out","is_term","form_item","activate_autocomplete","table","submit_group","search","e","preventDefault","form_submit","reset","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","search_rows","limit","then","parsed_data","event_manager","publish","console","log","full_coins_reference_diameter_max","flat","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","process_result","Promise","resolve","group","sql_filter","parse_sql_filter","request_body","dedalo_get","join","count","data_manager","request","body","response","page","parse_catalog_data","result"],"sources":["charts/chart-wrapper.js","charts/chartjs/chartjs-chart-wrapper.js","charts/chartjs/histogram-wrapper.js","charts/chartjs/bar-chart-wrapper.js","charts/d3/d3-chart-wrapper.js","charts/d3/boxvio-chart-wrapper.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Default color for chart bars in rgba\n * @type {string}\n */\nexport const DEFAULT_BAR_COLOR = 'rgba(255,190,92,0.5)'\n\n\n/**\n * Chart wrapper class\n * \n * It clears the container div during render, so subclasses should work with the dom\n * after the render method of this superclass has been called\n * @class\n * @abstract\n * @param {Element} div_wrapper \n */\nexport function chart_wrapper(div_wrapper) {\n    if (this.constructor === chart_wrapper) {\n        throw new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n    }\n    /**\n     * Div element wrapping the chart itself and\n     * the controls\n     * @type {Element}\n     * @protected\n     */\n    this.div_wrapper = div_wrapper\n    /**\n     * Div container for chart download\n     * @type {Element}\n     * @protected\n     */\n    this.download_chart_container = undefined\n    /**\n     * Div container for user controls\n     * Used freely by each subclass\n     * @type {Element}\n     * @protected\n     */\n    this.controls_container = undefined\n}\n\n/**\n * Render the chart and controls\n * \n * Empties the div wrapper and resets properties\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n */\nchart_wrapper.prototype.render = function () {\n    // Save this chart_wrapper intance\n    /**\n     * This chart_wrapper intance\n     * @type {chart_wrapper}\n     */\n    const self = this\n    // Remove all children in the div_wrapper\n    this.div_wrapper.replaceChildren()\n    // Set controls container to undefined\n    this.controls_container = undefined\n    // Create the chart download section\n    this.download_chart_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'download_chart_container',\n        class_name: 'o-purple',\n        style: {\n            'display': 'flex',\n            'flex-direction': 'row',\n            'justify-content': 'center',\n        },\n        parent: this.div_wrapper,\n    })\n    const format_select = common.create_dom_element({\n        element_type: 'select',\n        id: 'chart_export_format',\n        style: {\n            'width': '80%',\n        },\n        parent: this.download_chart_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const format of this.get_supported_export_formats()) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: format,\n            text_content: format.toUpperCase(),\n            parent: format_select,\n        })\n    }\n    const chart_download_button = common.create_dom_element({\n        element_type: 'button',\n        text_content: 'Download',\n        style: {\n            'width': '20%',\n        },\n        parent: this.download_chart_container,\n    })\n    chart_download_button.addEventListener('click', () => {\n        self.download_chart(format_select.value)\n    })\n}\n\n/**\n * Download the chart as an image\n * \n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n    /**\n     * File name for the chart\n     * @type {string}\n     */\n    const filename = `${DEFAULT_CHART_NAME}.${format}`\n    /**\n     * Function name for downloading with the particular format\n     * @type {string}\n     */\n    const download_func_name = `download_chart_as_${format}`\n    if (this[download_func_name] === undefined) {\n        throw new Error(`${download_func_name} is not implemented!`)\n    }\n    this[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n * \n * Subclasses must return their own supported formats, e.g.,\n * `['png', 'jpg', 'eps']`\n * @function\n * @returns {string[]} the supported formats\n * @abstract\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n    throw new Error(`Abstract method 'chart_wrapper.download_chart' cannot be called`)\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper.js\";\n\n/**\n * Chart.js chart wrapper class\n * @class\n * @abstract\n * @param {Element} div_wrapper the div conatining the chart\n * @extends chart_wrapper\n */\nexport function chartjs_chart_wrapper(div_wrapper) {\n    if (this.constructor === chartjs_chart_wrapper) {\n        throw new Error(\"Abstract class 'chartjs_chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper.call(this, div_wrapper)\n    /**\n     * Canvas instance, will be created during\n     * render\n     * @type {HTMLCanvasElement}\n     * @protected\n     */\n    this.canvas = undefined\n    /**\n     * Chart instance (chart.js)\n     * @protected\n     */\n    this.chart = undefined\n}\n// Set prototype chain\nObject.setPrototypeOf(chartjs_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the chart (chartjs) and controls\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name chartjs_chart_wrapper#render\n * @function\n */\nchartjs_chart_wrapper.prototype.render = function () {\n    chart_wrapper.prototype.render.call(this)\n    // Create canvas\n    this.canvas = common.create_dom_element({\n        element_type: 'canvas',\n        id: 'result_graph',\n        class_name: 'o-blue',\n        parent: this.div_wrapper,\n    })\n    // Set chart instance to undefined\n    this.chart = undefined\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name chartjs_chart_wrapper#get_supported_export_formats\n */\nchartjs_chart_wrapper.prototype.get_supported_export_formats = function () {\n    return ['png']\n}\n\n/**\n * Download the chart as png\n * @param {string} filename the name of the file\n * @function\n * @name chartjs_chart_wrapper#_download_chart_as_png\n */\nchartjs_chart_wrapper.prototype.download_chart_as_png = function (filename) {\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    let tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: this.chart.toBase64Image(),\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n}\n\n/**\n * FIXME: this is not working...\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name chartjs_chart_wrapper#_download_chart_as_svg\n */\nchartjs_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n    // Tweak C2S library\n    this._tweak_c2s()\n    // Get original width and height\n    const width = this.canvas.offsetWidth\n    const height = this.canvas.offsetHeight\n    // TODO: Turn off responsiveness and animations\n    this.chart.options.animation = false\n    this.chart.options.reponsive = false\n    // Replicate chart in C2S space\n    const svgContext = C2S(width, height)\n    const svgChart = new Chart(svgContext, this.chart.config._config)\n    // Download\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    let tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: 'data:image/svg+xml;utf8,'\n            + encodeURIComponent(svgContext.getSerializedSvg()),\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n    // TODO: Turn on responsiveness and animations\n    this.chart.options.animation = true\n    this.chart.options.reponsive = true\n}\n\n/**\n * Some tweaks to the canvas2svg library are required for svg export to work\n * \n * Via: https://stackoverflow.com/questions/62249315/export-canvas-to-svg-file\n * @function\n * @private\n * @name chartjs_chart_wrapper#_tweak_c2s\n */\nchartjs_chart_wrapper.prototype._tweak_c2s = function () {\n    C2S.prototype.getContext = function (contextId) {\n        if (contextId === '2d' || contextId === '2D') {\n            return this;\n        }\n        return null;\n    }\n    C2S.prototype.style = function () {\n        return this.__canvas.style;\n    }\n    C2S.prototype.getAttribute = function (name) {\n        return this[name];\n    }\n    C2S.prototype.addEventListener = function (type, listener, eventListenerOptions) {\n        // nothing to do here, but we need this function :)\n    }\n}","\"use strict\";\n\nimport { chartjs_chart_wrapper } from \"./chartjs-chart-wrapper.js\";\nimport { COLOR_PICKER_WIDTH, DEFAULT_BAR_COLOR } from \"../chart-wrapper.js\";\n\n/**\n * Histogram wrapper\n * @param {Element}  div_wrapper the div to work in\n * @param {number[]} data the data\n * @param {string} xlabel the label for the x-axis\n * @class\n * @extends chartjs_chart_wrapper\n */\nexport function histogram_wrapper(div_wrapper, data, xlabel) {\n    /*\n     * <Function>.call is a method that executes the defined function,\n     * but with the \"this\" variable pointing to the first argument,\n     * and the rest of the arguments being arguments of the function\n     * that is being \"called\". This essentially performs all of\n     * chart_wrapper's constructor logic on histogram_wrapper's \"this\".\n     */\n    chartjs_chart_wrapper.call(this, div_wrapper)\n\n    /**\n     * Data values\n     * @type {number[]}\n     * @private\n     */\n    this._data = data\n    /**\n     * Whether to perform a density plot\n     * @type {boolean}\n     * @private\n     */\n    this._density = false\n    /**\n     * Default number of bins\n     * @type {number}\n     * @private\n     */\n    this._n_bins_default = Math.ceil(Math.sqrt(this._data.length))\n    /**\n     * Number of bins in the histogram\n     * \n     * Defined as the square root of the\n     * amount of datapoints, computed\n     * during render\n     * @type {number}\n     * @private\n     */\n    this._n_bins = undefined\n    /** Label for the xaxis\n     * @type {string}\n     * @private\n    */\n    this._xlabel = xlabel\n    /**\n     * Number of decimals to display\n     * @type {number}\n     * @private\n     */\n    this._n_decimals = 3\n    /**\n     * Maximum number of bins as mutiplier of default\n     * @type {number}\n     * @private\n     */\n    this._max_bins_multiplier = 3\n    /**\n     * Default color for the bars in rgba\n     * @type {string}\n     * @private\n     */\n    this._bar_color = DEFAULT_BAR_COLOR\n}\n// Set prototype chain\nObject.setPrototypeOf(histogram_wrapper.prototype, chartjs_chart_wrapper.prototype)\n\n/**\n * Check whether we are doing a density plot\n * @returns {boolean} `true` if density plot,\n * \t\t\t`false` otherwise\n * @name histogram_wrapper#get_density\n * @function\n */\nhistogram_wrapper.prototype.get_density = function () {\n    return this._density\n}\n\n/**\n * Change the density plot attribute\n * @param density {boolean} `true` if density, `false` otherwise\n * @function\n * @name histogram_wrapper#set_density\n */\nhistogram_wrapper.prototype.set_density = function (density) {\n    this._density = density\n    if (!this.chart) {\n        return\n    }\n    // Update chart\n    const [\n        bin_centers, plot_data, half_bin_width, data_min, data_max\n    ] = this._get_plotting_data()\n    this.chart.data.datasets[0].label = this._get_density_string()\n    this.chart.data.datasets[0].data = plot_data\n    this.chart.options.scales.y.title.text = this._get_density_string()\n    this.chart.update()\n}\n\n/**\n * Get a string representing the plot mode\n * @returns {string} `'Density'` if we are in density\n * \t\t\tmode, `'Frequency'` otherwise\n * @function\n * @private\n * @name histogram_wrapper#_get_density_string\n */\nhistogram_wrapper.prototype._get_density_string = function () {\n    return this._density ? 'Density' : 'Frequency'\n}\n\n/**\n * Get the amount of bins in the histogram\n * @returns {number} the amount of bins\n * @function\n * @name histogram_wrapper#get_n_bins\n */\nhistogram_wrapper.prototype.get_n_bins = function () {\n    return this._n_bins\n}\n\n/**\n * Set a new number of bins for the histogram\n * \n * Updates chart instance accordingly\n * @param {number} n_bins amount of bins\n * @function\n * @name histogram_wrapper#set_n_bins\n */\nhistogram_wrapper.prototype.set_n_bins = function (n_bins) {\n    this._n_bins = n_bins\n    if (!this.chart) {\n        return\n    }\n    // Update chart\n    const [\n        bin_centers, plot_data, half_bin_width, data_min, data_max\n    ] = this._get_plotting_data()\n    this.chart.data.datasets[0].data = plot_data\n    this.chart.options.scales.x.min = data_min\n    this.chart.options.scales.x.max = data_max\n    this.chart.options.scales.x.ticks.stepSize = 2 * half_bin_width\n    this.chart.options.plugins.tooltip.callbacks.title =\n        this._get_tooltip_title_callback(bin_centers, half_bin_width)\n    this.chart.update()\n}\n\n/**\n * Get the color of the bars in the histogram\n * @returns {string} the bar color as an rgba string\n * @function\n * @name histogram_wrapper#get_bar_color\n */\nhistogram_wrapper.prototype.get_bar_color = function () {\n    return this._bar_color\n}\n\n/**\n * Set a new color for the bars in the histogram\n * \n * Updates the chart instance accordingly\n * @param {string} bar_color the new bar color for the histogram\n * @function\n * @name histogram_wrapper#set_bar_color\n */\nhistogram_wrapper.prototype.set_bar_color = function (bar_color) {\n    this._bar_color = bar_color\n    if (!this.chart) {\n        return\n    }\n    this.chart.data.datasets[0].backgroundColor = this._bar_color\n    this.chart.update()\n}\n\n/**\n * Get data needed to generate the chart\n * TODO: there is no need to recompute bin_centers unless the number of bins\n* \t\t has changed\n* @function\n* @name histogram_wrapper#_get_plotting_data\n* @private\n* \n* @returns {[number[], {x: number, y: number}[], number, number, number]}\n* \t\t\tthe bin centers, {bin centers, count per bin}, half of the bin width,\n* \t\t\tthe minimum and maximum of input data\n */\nhistogram_wrapper.prototype._get_plotting_data = function () {\n    const data_max = Math.max(...this._data)\n    const data_min = Math.min(...this._data)\n    const bin_width = (data_max - data_min) / this._n_bins\n    const half_bin_width = 0.5 * bin_width\n    /**\n     * Center of each bin\n     * @type {number[]}\n     */\n    const bin_centers = Array.apply(null, Array(this._n_bins)).map(\n        (value, index) => data_min + (2 * index + 1) * half_bin_width\n    )\n    // We bin with right-open intervals\n    /**\n     * Count per bin\n     * @type {number[]}\n     */\n    let entries = Array.apply(null, Array(this._n_bins)).map(() => 0)\n    for (let i = 0; i < this._data.length; i++) {\n        // If value is max, add it to last bin\n        if (this._data[i] === data_max) {\n            entries[this._n_bins - 1]++\n            continue\n        }\n        // Proceed as usual\n        for (let j = 0; j < this._n_bins; j++) {\n            if (this._data[i] >= bin_centers[j] - half_bin_width\n                && this._data[i] < bin_centers[j] + half_bin_width) {\n                entries[j]++\n                break\n            }\n        }\n    }\n    // Normalize if density\n    if (this._density) {\n        const sum = entries.reduce((partialSum, val) => partialSum + val, 0)\n        for (let j = 0; j < this._n_bins; j++) {\n            entries[j] /= (sum * bin_width);\n        }\n    }\n    return [\n        bin_centers,\n        bin_centers.map((val, i) => ({ x: val, y: entries[i] })),\n        half_bin_width,\n        data_min,\n        data_max,\n    ]\n}\n\n/**\n * Get callback function for tooltip title\n * @param {number[]} bin_centers the bin centers\n * @param {number} half_bin_width half of the bin width\n * @returns the callback function\n * @function\n * @private\n * @name histogram_wrapper#_get_tooltip_title_callback\n */\nhistogram_wrapper.prototype._get_tooltip_title_callback = function (bin_centers, half_bin_width) {\n    // Cannot use `this` inside inner function!!!\n    const xlabel = this._xlabel\n    const n_decimals = this._n_decimals\n    /**\n     * Callback function for the tooltip title\n     * @param {TooltipItem[]} items the tooltip item contexts\n     * @returns {string} the title of the tooltip\n     * @function\n     * @name histogram_wrapper#_get_tooltip_title_callback~inner\n     */\n    const callback = function (items) {\n        if (!items.length) {\n            return ''\n        }\n        const item = items[0]\n        const index = item.dataIndex\n        const min = bin_centers[index] - half_bin_width\n        const max = bin_centers[index] + half_bin_width\n        return `${xlabel}: ${min.toFixed(n_decimals)} `\n            + `- ${max.toFixed(n_decimals)}`\n    }\n    return callback\n}\n\n/**\n * Render the chart and the control panel\n * @function\n * @name histogram_wrapper#render\n */\nhistogram_wrapper.prototype.render = function () {\n    // Call super render method\n    chartjs_chart_wrapper.prototype.render.call(this)\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name histogram_wrapper#_render_chart\n */\nhistogram_wrapper.prototype._render_chart = function () {\n    this._n_bins = this._n_bins_default\n    const [\n        bin_centers, plot_data, half_bin_width, data_min, data_max\n    ] = this._get_plotting_data()\n\n    // Split chart options\n    const chart_data = {\n        datasets: [{\n            label: this._get_density_string(),\n            data: plot_data,\n            categoryPercentage: 1,\n            barPercentage: 1,\n            backgroundColor: this._bar_color,\n        }],\n    }\n    const scales_options = {\n        x: {\n            type: 'linear',  // otherwise it goes to a category axis...\n            min: data_min,\n            max: data_max,\n            offset: false,\n            grid: {\n                offset: false,\n            },\n            ticks: {\n                stepSize: 2 * half_bin_width,\n                callback: (label, index, labels) => {\n                    return Number(label).toFixed(this._n_decimals)\n                }\n            },\n            title: {\n                display: true,\n                text: this._xlabel,\n                font: {\n                    size: 14\n                },\n            }\n        },\n        y: {\n            title: {\n                display: true,\n                text: this._get_density_string(),\n                font: {\n                    size: 14,\n                },\n            },\n        },\n    }\n    const plugins_options = {\n        legend: {\n            display: false,\n        },\n        tooltip: {\n            callbacks: {\n                title: this._get_tooltip_title_callback(bin_centers, half_bin_width),\n            },\n        },\n    }\n\n    // Render the graph\n    this.chart = new Chart(this.canvas, {\n        type: 'bar',\n        data: chart_data,\n        options: {\n            scales: scales_options,\n            plugins: plugins_options,\n            parsing: false,\n            normalized: true,\n        },\n    })\n}\n\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name histogram_wrapper#_render_control_panel\n */\nhistogram_wrapper.prototype._render_control_panel = function () {\n    // Save this histogram wrapper instance, because when we change scope\n    // we may still need to refer to it\n    /**\n     * This histogram_wrapper instance\n     * @type {histogram_wrapper}\n     */\n    const self = this\n    // Create controls container\n    this.controls_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'controls',\n        class_name: 'o-green',\n        parent: this.div_wrapper,\n    })\n    /**\n     * Slider for number of bins\n     * @type {Element}\n     */\n    const slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        value: this._n_bins_default,\n        parent: this.controls_container,\n    })\n    slider.setAttribute('min', 1)\n    slider.setAttribute('max', this._max_bins_multiplier * this._n_bins_default)\n    slider.addEventListener('input', () => {\n        this.set_n_bins(Number(slider.value))\n    })\n    /**\n     * Reset button for the slider\n     * @type {Element}\n     */\n    const slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    slider_reset.addEventListener('click', () => {\n        slider.value = this._n_bins_default\n        this.set_n_bins(Number(slider.value))\n    })\n    /**\n     * Checkbox for density plot\n     * @type {Element}\n     */\n    const density_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: 'density_checkbox',\n        parent: this.controls_container,\n    })\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const density_checkbox_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Density',\n        parent: this.controls_container,\n    })\n    density_checkbox_label.setAttribute('for', 'density_checkbox')\n    density_checkbox.addEventListener('change', () => {\n        this.set_density(Boolean(density_checkbox.checked))\n    })\n    /** iro.js color picker */\n    const color_picker_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'color_picker_container',\n        parent: this.controls_container\n    })\n    const color_picker = new window.iro.ColorPicker(color_picker_container, {\n        color: this._bar_color,\n        width: COLOR_PICKER_WIDTH,\n        layoutDirection: 'horizontal',\n        layout: [\n            {\n                component: window.iro.ui.Wheel,\n            },\n            {\n                component: window.iro.ui.Slider,\n            },\n            {\n                component: window.iro.ui.Slider,\n                options: {\n                    sliderType: 'alpha',\n                }\n            },\n        ],\n    })\n    color_picker.on('color:change', function (color) {\n        self.set_bar_color(color.rgbaString)\n    })\n}","\"use strict\";\n\nimport { chartjs_chart_wrapper } from \"./chartjs-chart-wrapper.js\";\nimport { DEFAULT_BAR_COLOR, COLOR_PICKER_WIDTH } from \"../chart-wrapper.js\";\n\n/**\n * Bar chart wrapper\n * @param {Element} div_wrapper the div to work in\n * @param {number[] | string[] | {[key: string | number]: number}} data\n * \t\t  input data. Either an array of occurences, which are parsed by\n * \t\t  the bar chart wrapper (e.g., `['bronze', 'bronze', 'iron']`), or\n * \t\t  an object with keys and counts (e.g. `{'bronze': 2, 'iron': 1}`)\n * @param {string} ylabel the label for the y-axis\n * @class\n * @extends chartjs_chart_wrapper\n */\nexport function bar_chart_wrapper(div_wrapper, data, ylabel) {\n    chartjs_chart_wrapper.call(this, div_wrapper)\n    /**\n     * Data for the bar chart\n     * @type {{labels: string[] | number[], values: number[]}}\n     * @private\n     */\n    this._data = undefined\n    if (Array.isArray(data)) {\n        this._check_array_valid(data)\n        this._data = this._parse_array(data)\n    } else {\n        this._check_object_valid(data)\n        this._data = this._parse_object(data)\n    }\n    /**\n     * Label for the y-axis\n     * @type {string}\n     * @private\n     */\n    this._ylabel = ylabel\n    /**\n     * Color for each bar\n     * @type {string[]}\n     * @private\n     */\n    this._bar_colors = Array(this._data.labels.length).fill(DEFAULT_BAR_COLOR)\n}\n// Set prototype chain\nObject.setPrototypeOf(bar_chart_wrapper.prototype, chartjs_chart_wrapper.prototype)\n\n/**\n * Check if the input data array is valid\n * \n * Throws error otherwise\n * @param {string[] | number[]} arr the array to check\n * @function\n * @private\n * @name bar_chart_wrapper#_check_array_valid\n */\nbar_chart_wrapper.prototype._check_array_valid = function (arr) {\n    if (!arr.length) {\n        throw new Error(\"Input array is empty!\")\n    }\n    /**\n     * Type of the first element of the array\n     * @type {string}\n     */\n    const type = typeof arr[0]\n    if (type !== 'number' && type !== 'string') {\n        throw new Error(\"Input array is not made of numbers or strings\")\n    }\n    for (const ele of arr.slice(1)) {\n        if (typeof ele !== type) {\n            throw new Error(\"Input array combines multiple types\")\n        }\n    }\n}\n\n/**\n * Parse the input data array\n * \n * @param {string[] | number[]} arr the input array\n * @returns {{labels: string[] | number[], values: number[]}}\n * \t\t\tthe parsed input data in internal format\n * @function\n * @private\n * @name bar_chart_wrapper#_parse_array\n */\nbar_chart_wrapper.prototype._parse_array = function (arr) {\n    /**\n     * Unique values of the input array\n     * @type {number[] | string[]}\n     */\n    const labels = arr.filter((v, i, a) => a.indexOf(v) === i)\n    /**\n     * Count for each unique value in the input array\n     * @type {number[]}\n     */\n    const values = labels.map((v) => arr.filter((ele) => ele === v).length)\n    /**\n     * Parsed data\n     * @type {{labels: string[] | number[], values: number[]}}\n     */\n    let parsed = {\n        labels: labels,\n        values: values,\n    }\n    return parsed\n}\n\n/**\n * Check if the input data object is valid\n * \n * Throws error otherwise\n * @param {{[key: string | number]: number}} obj the object to check\n * @function\n * @private\n * @name bar_chart_wrapper#_check_object_valid\n */\nbar_chart_wrapper.prototype._check_object_valid = function (obj) {\n    if (!obj) {\n        throw new Error(\"Input data object is null or undefined\")\n    }\n    /**\n     * Keys of the input data object\n     * @type {number[] | string[]}\n     */\n    const keys = Object.keys(obj)\n    if (!keys.length) {\n        throw new Error(\"Input data object is empty\")\n    }\n    /**\n     * Values of the input data object\n     * @type {number}\n     */\n    const values = Object.values(obj)\n    for (const val of values) {\n        if (typeof val !== 'number') {\n            throw new Error(\"A value in the input data object is not a number\")\n        }\n    }\n}\n\n/**\n * Parse the input data object\n * \n * @param {{[key: string | number]: number}} obj the input array\n * @returns {{labels: string[] | number[], values: number[]}}\n * \t\t\tthe parsed input data in internal format\n * @function\n * @private\n * @name bar_chart_wrapper#_parse_object\n */\nbar_chart_wrapper.prototype._parse_object = function (obj) {\n    return {\n        labels: Object.keys(obj),\n        values: Object.values(obj),\n    }\n}\n\n/**\n * Get the bar colors\n * @returns {string[]} the bar colors as rgba strings\n */\nbar_chart_wrapper.prototype.get_bar_colors = function () {\n    return this._bar_colors\n}\n\n/**\n * Set new bar colors\n * \n * Updates chart instance accordingly\n * @param {string[]} bar_colors the new bar colors as rgba strings\n */\nbar_chart_wrapper.prototype.set_bar_colors = function (bar_colors) {\n    this._bar_colors = bar_colors\n    this.chart.data.datasets[0].backgroundColor = bar_colors\n    this.chart.update()\n}\n\n/**\n * Set a color for a given bar\n * @param {number} index the index of the bar \n * @param {string} bar_color the new bar color as an rgba string\n */\nbar_chart_wrapper.prototype.set_bar_color = function (index, bar_color) {\n    if (typeof index !== 'number') {\n        throw new Error(\"Index is not a number\")\n    } else if (!Number.isInteger(index)) {\n        throw new Error(\"Index is not an integer\")\n    } else if (index < 0 || index >= this._data.labels.length) {\n        throw new Error(\"Index is out of bounds\")\n    }\n    this._bar_colors[index] = bar_color\n    this.chart.data.datasets[0].backgroundColor[index] = bar_color\n    this.chart.update()\n}\n\n/**\n * Render the chart and the control panel\n * @function\n * @name bar_chart_wrapper#render\n */\nbar_chart_wrapper.prototype.render = function () {\n    // Call super render method\n    chartjs_chart_wrapper.prototype.render.call(this)\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name bar_chart_wrapper#_render_chart\n */\nbar_chart_wrapper.prototype._render_chart = function () {\n    const chart_data = {\n        labels: this._data.labels,\n        datasets: [{\n            label: this._ylabel,\n            data: this._data.values,\n            backgroundColor: this._bar_colors,\n        }],\n    }\n    const scales_options = {\n        y: {\n            title: {\n                display: true,\n                text: this._ylabel,\n                font: {\n                    size: 14,\n                }\n            },\n        },\n    }\n    const plugins_options = {\n        legend: {\n            display: false,\n        },\n    }\n    // Render the graph\n    this.chart = new Chart(this.canvas, {\n        type: 'bar',\n        data: chart_data,\n        options: {\n            scales: scales_options,\n            plugins: plugins_options,\n            normalized: true,\n        },\n    })\n}\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name bar_chart_wrapper#_render_control_panel\n */\nbar_chart_wrapper.prototype._render_control_panel = function () {\n    /**\n     * This bar_chart_wrapper instance\n     * @type {bar_chart_wrapper}\n     */\n    const self = this\n    // Create controls container\n    this.controls_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'controls',\n        class_name: 'o-green',\n        parent: this.div_wrapper,\n    })\n    /**\n     * Select for bar choice\n     * @type {Element}\n     */\n    const bar_select = common.create_dom_element({\n        element_type: 'select',\n        id: 'bar_selection',\n        parent: this.controls_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const [index, label] of this._data.labels.entries()) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: String(index),  // 0 as a number becomes false as a boolean...\n            text_content: label,\n            parent: bar_select,\n        })\n    }\n    /** iro.js color picker */\n    const color_picker_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'color_picker_container',\n        parent: this.controls_container\n    })\n    const color_picker = new window.iro.ColorPicker(color_picker_container, {\n        color: this._bar_colors[0],\n        width: COLOR_PICKER_WIDTH,\n        layoutDirection: 'horizontal',\n        layout: [\n            {\n                component: window.iro.ui.Wheel,\n            },\n            {\n                component: window.iro.ui.Slider,\n            },\n            {\n                component: window.iro.ui.Slider,\n                options: {\n                    sliderType: 'alpha',\n                }\n            },\n        ],\n    })\n    // Bar select change event\n    bar_select.addEventListener('change', () => {\n        const index = Number(bar_select.value)\n        color_picker.color.set(self._bar_colors[index])\n    })\n    // Color change event\n    color_picker.on('color:change', function (color) {\n        const index = Number(bar_select.value)\n        self.set_bar_color(index, color.rgbaString)\n    })\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div, so that it spans all width\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * @param {Element} div_wrapper the div containing the chart\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper) {\n    if (this.constructor === d3_chart_wrapper) {\n        throw new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper.call(this, div_wrapper)\n    /**\n     * D3 selection object for the root `svg` tag\n     * @protected\n     */\n    this.svg = undefined\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the chart (d3) and controls\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name d3_chart_wrapper#render\n * @function\n */\nd3_chart_wrapper.prototype.render = function () {\n    chart_wrapper.prototype.render.call(this)\n\n    this.svg = d3.select(this.div_wrapper)\n        .append('svg')\n        .attr('version', '1.1') // When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n        .attr('xmlns', 'http://www.w3.org/2000/svg')\n        .attr('width', '100%')\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n    return ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n    const svg_data = this.svg.node().outerHTML\n    const svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n    const url = URL.createObjectURL(svg_blob)\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    let tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: url,\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n    URL.revokeObjectURL(url)\n}","\"use strict\";\n\nimport { d3_chart_wrapper } from \"./d3-chart-wrapper\";\n\n\n/**\n * Boxplot + violin chart wrapper\n * @param {Element}  div_wrapper the div to work in\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper) {\n    d3_chart_wrapper.call(this, div_wrapper)\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Render the chart and the control panel\n * @function\n * @name boxvio_chart_wrapper#render\n */\nboxvio_chart_wrapper.prototype.render = function () {\n    // Call super render method\n    d3_chart_wrapper.prototype.render.call(this)\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_chart\n */\nboxvio_chart_wrapper.prototype._render_chart = function () {\n\n    // Set viewBox of svg\n    this.svg.attr('viewBox', '0 0 100 50')\n\n    this.svg.append('rect')\n        .attr('width', 30)\n        .attr('height', 15)\n        .attr('x', 35)\n        .attr('y', 17.5)\n        .style('stroke', 'black')\n        .style('stroke-width', 1)\n        .style('fill', 'blue')\n\n}\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_control_panel\n */\nboxvio_chart_wrapper.prototype._render_control_panel = function () {\n\n}","/*global tstring, page_globals, Promise, data_manager, common */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"./charts/chart-wrapper.js\";\nimport { histogram_wrapper } from \"./charts/chartjs/histogram-wrapper.js\";\nimport { bar_chart_wrapper } from \"./charts/chartjs/bar-chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"./charts/d3/boxvio-chart-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t: null,\n\tform_items_container\t: null,\n\tchart_wrapper_container\t: null,\n\n\t/**\n\t * Chart wrapper instance\n\t * @type {chart_wrapper}\n\t */\n\tchart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.chart_wrapper_container\t= options.chart_wrapper_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\t\t\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\t\t\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\t// TODO: do stuff with the data\n\t\t\t\tconsole.log(parsed_data)\n\t\t\t\tconst diameters = parsed_data\n\t\t\t\t\t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t\t.flat()\n\t\t\t\t\t.filter((ele) => ele)\n\t\t\t\t// this.chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.chart_wrapper_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t\"Diameter\"\n\t\t\t\t// )\n\t\t\t\tthis.chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.chart_wrapper_container\n\t\t\t\t)\n\t\t\t\t// this.chart_wrapper = new bar_chart_wrapper(\n\t\t\t\t// \tthis.chart_wrapper_container,\n\t\t\t\t// \tcultures,\n\t\t\t\t// \t'Count'\n\t\t\t\t// )\n\t\t\t\tthis.chart_wrapper.render()\n\n\t\t\t})\n\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load json data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 30\n\t\t\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\n\t},\n\n}//end analysis\n\n"],"mappings":"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"}