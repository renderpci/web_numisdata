{"version":3,"names":["COLOR_PALETTE","chart_wrapper","div_wrapper","options","this","constructor","Error","_n_charts_created","id","_display_download","display_download","_download_chart_container","undefined","plot_container","_display_control_panel","display_control_panel","_controls_container","_controls_toggle","controls_content_container","d3_chart_wrapper","call","svg","toggle_visibility","element","attr","transition","linspace","start","stop","nsteps","delta","d3","range","map","i","prototype","id_string","render","replaceChildren","render_plot","render_control_panel","_render_download_panel","supported_formats","get_supported_export_formats","length","download_chart_container","common","create_dom_element","element_type","class_name","parent","format_select","format","value","text_content","toUpperCase","type","tstring","download","addEventListener","download_chart","self","control_panel","classList","toggle","filename","download_func_name","Object","setPrototypeOf","select","append","download_chart_as_svg","svg_data","node","outerHTML","svg_blob","Blob","url","URL","createObjectURL","tmpLink","href","setAttribute","click","remove","revokeObjectURL","CURVES","Basis","curveBasis","curveBasisClosed","curveBasisOpen","Bundle","curveBundle","curveBumpX","curveBumpY","Cardinal","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","Linear","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","Natural","curveNatural","Step","curveStep","curveStepAfter","curveStepBefore","compute_n_bins","array_equal","arrs","size","arr","slice","sqrt","values","Math","ceil","sturges","log2","rice","pow","doane","n","sigma","std","deviation","mean","sum","skew","abs","scott","max","min","freedman_diaconis","quartile3","quantile","quartile1","iqr","KEY_CHANGE_EVENT_NAME","KEY_CHANGE_EVENT","Event","KEY_CHANGE_LISTENER_CLASS_NAME","WHISKERS_CSS_CLASS","boxvio_chart_wrapper","data","key_titles","_tooltip_callback","tooltip_callback","_whiskers_quantiles","whiskers_quantiles","console","log","_overflow","overflow","sort_xaxis","key","_data","sort","a","b","join","localeCompare","ele","entries","metrics","_calc_metrics","outliers","filter","v","lower_fence","upper_fence","extent","_data_extent","flat","_key_strings","SPLITTER","_key_size","_key_titles","_colors","_","_ylabel","ylabel","yaxis_padding","_full_width","_get_next_key_component_values","_full_height","_chart","margin","top","right","bottom","left","width","height","yscale","scaleLinear","domain","clamp","yticks_division","yaxis","axisLeft","tickFormat","d","toFixed","ticks","violin_scale","initial","violin_bandwidth","box_scale","xscale","scaleBand","key2_start_x","_compute_key2_start_x","datum_start_x","_compute_datum_start_x","xaxis","axisBottom","split_key","split","xticklabel_angle","n_bins","initial_value","histogram","bin","thresholds","bins","supported_curves","violin_curve","_graphics","root_g","yaxwl_g","xaxis_g","yaxis_g","cdividers_g","violins_g","violins","boxes_g","tooltip_div","_controls","max_bins_multiplier","selected_index","median","_query_data","key_tpl","_get_key_templates","templates_wd","obj","JSON","parse","stringify","concat","Array","fill","templates","tmp_template","template","push","pkey","psize","values_wd","current_value","get_index_of_key","findIndex","positions","key_tpls","queried_data","x","key_string","current_x","current_key2","datum","key2","set_violin_scale","scale","selectAll","_render_violins","set_n_bins","chart","_render_violin","set_violin_curve","curve_name","set_box_scale","_render_boxes","style","on","e","stopPropagation","_hide_tooltip","_render_axis","_render_ygrid","_render_key2_dividers","_render_tooltip","g","xaxwl_g","apply_xticklabel_angle","text","angle","apply_ygrid_mode","mode","major_lines","major_opacity","minor_lines","minor_opacity","key2_dividers_g","dividers_g","color","index","divider_g","is_g_ready","bandwidth","max_count","x_num","area","x0","x1","y","curve","boxes","box_width","group_box","outlier","whiskers","classed","circle","tooltip_active","tooltip_hover","tooltip_element","new_node","existing_node","parentNode","insertBefore","nextSibling","tooltip_metrics","section_id","mint","type_number","metric_names","datapoints","metric_values","html","then","add","last_child","lastChild","contains","appendChild","upper_container","_render_grid_select","_render_xticklabel_angle_slider","_render_violin_curve_selector","_render_checkboxes","_render_scale_sliders","_render_key_selects","_render_n_bins_control","container","select_container","grid_select_id","grid","grid_select","none_f","major","major_minor","slider_container","xticklabel_angle_slider_id","xticklabel_angle_slider","Number","curve_select_id","curve_select","container_div","show","show_key2_div","show_key2_checkbox_id","show_key2_checkbox","checked","show_violins_div","show_violins_checkbox_id","show_violins_checkbox","show_boxes_div","show_boxes_checkbox_id","show_boxes_checkbox","show_whiskers_div","show_whiskers_checkbox_id","show_whiskers_checkbox","show_outliers_div","show_outliers_checkbox_id","show_outliers_checkbox","group","violin_container_div","violin_scale_slider_id","violin_width","violin_scale_slider","reset","box_container_div","box_scale_slider_id","box_scale_slider","key_selects","populate_key_select","key_select","select_id","j","ks","listeners","getElementsByClassName","dispatchEvent","violin_n_bins_slider_id","violin_resolution","violin_n_bins_slider","reset_all_violins","chartjs_chart_wrapper","canvas","histogram_wrapper","_density","_n_bins_default","_n_bins","_xlabel","xlabel","_n_decimals","_max_bins_multiplier","_bar_color","download_chart_as_png","toBase64Image","_tweak_c2s","offsetWidth","offsetHeight","animation","reponsive","svgContext","C2S","Chart","config","_config","encodeURIComponent","getSerializedSvg","getContext","contextId","__canvas","getAttribute","name","listener","eventListenerOptions","get_density","set_density","density","bin_centers","plot_data","half_bin_width","data_min","data_max","_get_plotting_data","datasets","label","_get_density_string","scales","title","update","get_n_bins","stepSize","plugins","tooltip","callbacks","_get_tooltip_title_callback","get_bar_color","set_bar_color","bar_color","backgroundColor","bin_width","apply","reduce","partialSum","val","n_decimals","items","dataIndex","chart_data","categoryPercentage","barPercentage","scales_options","offset","callback","labels","display","Boolean","font","plugins_options","legend","parsing","normalized","slider","density_checkbox_id","density_checkbox","controls_container","color_picker_container","window","iro","ColorPicker","layoutDirection","layout","component","ui","Wheel","Slider","sliderType","rgbaString","analysis","form","area_name","row","export_data_container","form_items_container","diameter_chart_container","weight_chart_container","diameter_chart_wrapper","weight_chart_wrapper","set_up","form_node","render_form","fragment","DocumentFragment","form_factory","form_row","item_factory","q_column","value_wrapper","eq","eq_in","eq_out","is_term","form_item","activate_autocomplete","table","q_table","number_key","group_op","material","denomination","culture","iconography_obverse","value_split","q_splittable","q_selected_eq","iconography_reverse","input_type","period","sql_filter","node_input","range_slider_value_in","querySelector","range_slider_value_out","get_catalog_range_years","range_data","$","target","step","slide","event","change","q","submit_group","search","preventDefault","form_submit","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","info_lines","document","querySelectorAll","info_lines_length","hasChildNodes","removeChild","result","getElementById","spinner","search_rows","limit","process_result","fn","columns","parsed_data","event_manager","publish","ref_type_number","p_mint","ref_type_material","ref_type_denomination","tmp_data","calculable","full_coins_reference_calculable","diameter_max","full_coins_reference_diameter_max","diameter_min","full_coins_reference_diameter_min","weight","full_coins_reference_weight","axis","full_coins_reference_axis","tmp_diameter_max","tmp_diameter_min","tmp_weight","tmp_axis","keys","weights","number","type_tooltip_callback","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","Promise","resolve","parse_sql_filter","request_body","dedalo_get","count","data_manager","request","body","response","page","parse_catalog_data","db_name","WEB_DB","api_response","current_min","parseInt","async","catalog_request_options","type_data","type_row","add_denomination","catalog_row_fields","draw_item","removeAttribute"],"sources":["../../lib/charts/chart-wrapper.js","../../lib/charts/d3/d3-chart-wrapper.js","../../lib/charts/d3/utils.js","../../lib/charts/compute-n-bins.js","../../lib/charts/utils.js","../../lib/charts/d3/boxvio-chart-wrapper.js","../../lib/charts/chartjs/chartjs-chart-wrapper.js","../../lib/charts/chartjs/histogram-wrapper.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Color palette, totally stolen from matplotlib\n * @type {string[]}\n */\nexport const COLOR_PALETTE = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#17becf']\n\n\n/**\n * Chart wrapper class (download panel, plot, and control panel)\n *\n * The `render` method must be called for the chart to be rendered to the DOM!!!\n *\n * Within the provided div wrapper, it will create three divs:\n * 1. If download is supported, a div to containing the download section, with\n *    id `chart<id>_download_chart_container` class `download_chart_container`\n * 2. A div to contain the plot itself, with id `chart<id>_plot_wrapper` class `plot_wrapper`\n * 3. A div to contain the control panel, with id `chart<id>_control_panel` and class `control_panel`\n * The third div contains two divs. The first for the visibility toggle (class `control_panel_toggle`)\n * and the second one for the control elements themselves (class `control_panel_content`)\n *  \n * It clears the container div during render, so subclasses should work with the dom\n * after the render methods of this superclass (`render_plot` and `render_control_panel`) have been called.\n * In other words, subclasses should override those specific methods instead of the general `render` function\n *\n * Last reminder, the constructor is the place to do data processing exclusively. All rendering to the DOM\n * must be done in the specific render methods. Otherwise, bugs WILL appear.\n * @class\n * @abstract\n * @param {Element} div_wrapper\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n */\nexport function chart_wrapper(div_wrapper, options) {\n\tif (this.constructor === chart_wrapper) {\n\t\tthrow new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n\t}\n\tchart_wrapper._n_charts_created++;\n\t/**\n\t * Unique identifier for the chart.\n\t *\n\t * Subclasses MUST use this in order to assing IDs\n\t * to DOM elements, in order to avoid bugs and cross-chart events\n\t * @type {number}\n\t * @protected\n\t */\n\tthis.id = chart_wrapper._n_charts_created\n\t/**\n\t * Div element wrapping the chart itself and\n\t * the controls\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.div_wrapper = div_wrapper\n\t/**\n\t * Whether to display the download panel\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._display_download = options.display_download || false\n\t/**\n\t * Div container for chart download\n\t * @type {Element}\n\t * @private\n\t */\n\tthis._download_chart_container = undefined\n\t/**\n\t * Div inside the div_wrapper, that just wraps the drawing\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.plot_container = undefined\n\t/**\n\t * Whether to display the control panel\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._display_control_panel = options.display_control_panel || false\n\t/**\n\t * Div container for user controls\n\t * @type {Element}\n\t * @private\n\t */\n\tthis._controls_container = undefined\n\t/**\n\t * Div that expands and collapses the control panel\n\t * @type {Element}\n\t * @private\n\t*/\n\tthis._controls_toggle = undefined\n\t/**\n\t * Div that contains all control elements\n\t * Used freely by each subclass\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.controls_content_container = undefined\n}\n\n/**\n * Amount of created charts\n * @type {number}\n * @static\n * @private\n */\nchart_wrapper._n_charts_created = 0;\n\n/**\n * Get a string representing the ID of the chart\n * @returns {string} the id as a string\n *          (`'chart1'`, `'chart2'`, ...)\n */\nchart_wrapper.prototype.id_string = function () {\n\treturn `chart${this.id}`\n}\n\n/**\n * Render the chart\n *\n * Empties the div wrapper and resets properties\n *\n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n * @public\n */\nchart_wrapper.prototype.render = function () {\n\t// Remove all children in the div_wrapper\n\tthis.div_wrapper.replaceChildren()\n\n\t// Create the div for wrapping the plot\n\tthis.render_plot()\n\n\t// Create the div for the control panel\n\tif (this._display_control_panel) {\n\t\tthis.render_control_panel()\n\t}\n\n\t// Create the chart download section\n\tif (this._display_download) {\n\t\tthis._render_download_panel()\n\t}\n}\n\n/**\n * Render the download panel to the DOM\n * @function\n * @private\n * @name chart_wrapper#_render_download_panel\n */\nchart_wrapper.prototype._render_download_panel = function () {\n\tconst supported_formats = this.get_supported_export_formats()\n\tif (!supported_formats.length) {\n\t\treturn\n\t}\n\tthis.download_chart_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tid: `${this.id_string()}_download_chart_container`,\n\t\tclass_name: 'o-purple download_chart_container',\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'flex-direction': 'row',\n\t\t// \t'justify-content': 'center',\n\t\t// },\n\t\tparent: this.div_wrapper,\n\t})\n\tconst format_select = common.create_dom_element({\n\t\telement_type\t: 'select',\n\t\tid\t\t\t\t: `${this.id_string()}_chart_export_format`,\n\t\tclass_name\t\t: 'chart_format_select',\n\t\t// style\t\t: {\n\t\t// \t'width'\t\t: '75%',\n\t\t// },\n\t\tparent\t\t\t: this.download_chart_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tfor (const format of supported_formats) {\n\t\tcommon.create_dom_element({\n\t\t\telement_type\t: 'option',\n\t\t\tvalue\t\t\t: format,\n\t\t\ttext_content\t: format.toUpperCase(),\n\t\t\tparent\t\t\t: format_select\n\t\t})\n\t}\n\tconst chart_download_button = common.create_dom_element({\n\t\telement_type\t: 'input',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'btn primary button_download chart',\n\t\tvalue\t\t\t: tstring.download || 'Download',\n\t\t// style\t\t: {\n\t\t// \t'width'\t\t: '25%',\n\t\t// },\n\t\tparent\t\t\t: this.download_chart_container\n\t})\n\tchart_download_button.addEventListener('click', () => {\n\t\tthis.download_chart(format_select.value)\n\t})\n}\n\n/**\n * Render the plot to the DOM\n *\n * Subclasses should override this method and make\n * use of the plot container\n * @function\n * @protected\n * @name chart_wrapper#render_plot\n */\nchart_wrapper.prototype.render_plot = function () {\n\tthis.plot_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tid: `${this.id_string()}_plot_container`,\n\t\tclass_name: 'o-purple plot_container',\n\t\tparent: this.div_wrapper,\n\t})\n}\n\n/**\n * Render the control panel to the DOM\n *\n * Subclasses should override this method and make\n * use of the controls container\n * @function\n * @protected\n * @name chart_wrapper#render_control_panel\n */\nchart_wrapper.prototype.render_control_panel = function () {\n\t/** @type {chart_wrapper} */\n\tconst self = this\n\tthis._controls_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel`,\n\t\tclass_name\t\t: 'control_panel',\n\t\tparent\t\t\t: this.div_wrapper\n\t})\n\tthis._controls_toggle = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel_toggle`,\n\t\ttext_content\t: tstring.control_panel || 'Control panel',\n\t\tclass_name\t\t: 'o-red control_panel_toggle opened',\n\t\tparent\t\t\t: this._controls_container\n\t})\n\tthis._controls_toggle.addEventListener('click', function(){\n\t\tself._controls_toggle.classList.toggle('opened')\n\t\tself.controls_content_container.classList.toggle('hide')\n\t})\n\tthis.controls_content_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel_content`,\n\t\tclass_name\t\t: 'o-green control_panel_content hide',\n\t\tparent\t\t\t: this._controls_container\n\t})\n}\n\n/**\n * Download the chart as an image\n *\n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n\t/**\n\t * File name for the chart\n\t * @type {string}\n\t */\n\tconst filename = `${DEFAULT_CHART_NAME}.${format}`\n\t/**\n\t * Function name for downloading with the particular format\n\t * @type {string}\n\t */\n\tconst download_func_name = `download_chart_as_${format}`\n\tif (this[download_func_name] === undefined) {\n\t\tthrow new Error(`${download_func_name} is not implemented!`)\n\t}\n\tthis[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n *\n * Subclasses must return their own supported formats, if any, e.g.,\n * `['png', 'jpg', 'eps']`. If no format is supported, there is no\n * need to override this method.\n * @function\n * @returns {string[]} the supported formats\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n\treturn []\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div.\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * The created svg tag has width=100%, spanning the width of the parent element. Subclasses\n * can alter this behavior by modifying the svg after the superclass `render_plot` method has been\n * called\n * @param {Element} div_wrapper the div containing the chart\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `true`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `true`)\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper, options) {\n\tif (this.constructor === d3_chart_wrapper) {\n\t\tthrow new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n\t}\n\tchart_wrapper.call(this, div_wrapper, options)\n\t/**\n\t * D3 selection object for the root `svg` tag\n\t * @protected\n\t */\n\tthis.svg = undefined\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the plot to the DOM\n * \n * Subclasses must call this method at the top\n * of their own implementation. Then, they can\n * make use of the svg d3.selection object\n * @function\n * @protected\n * @name chart_wrapper#render_plot\n */\nd3_chart_wrapper.prototype.render_plot = function () {\n\tchart_wrapper.prototype.render_plot.call(this)\n\n\tthis.svg = d3.select(this.plot_container)\n\t\t.append('svg')\n\t\t// When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n\t\t.attr('version', '1.1')\n\t\t.attr('xmlns', 'http://www.w3.org/2000/svg')\n\t\t.attr('width', '100%')\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n\treturn ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n\tconst svg_data = this.svg.node().outerHTML\n\tconst svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n\tconst url = URL.createObjectURL(svg_blob)\n\t/**\n\t * Temporary link\n\t * @type {Element}\n\t */\n\tconst tmpLink = common.create_dom_element({\n\t\telement_type: 'a',\n\t\thref: url,\n\t})\n\ttmpLink.setAttribute('download', filename)\n\ttmpLink.click()\n\ttmpLink.remove()\n\tURL.revokeObjectURL(url)\n}","/**\n * Toggle visibility of a d3 selection element\n * @param {d3.selection} element the elememt\n */\nexport function toggle_visibility(element) {\n\tif (element.attr('opacity') == 0) {\n\t\telement.transition().attr('opacity', 1)\n\t} else {\n\t\telement.transition().attr('opacity', 0)\n\t}\n}\n\n/**\n * Get an array of values, evenly spaced over an\n * interval\n * \n * https://gist.github.com/davebiagioni/1ac21feb1c2db04be4e6\n * @param {number} start start value\n * @param {number} stop stop value\n * @param {number} nsteps amount of steps\n * @returns {number[]} the values\n */\nexport function linspace(start, stop, nsteps){\n\tconst delta = (stop-start)/(nsteps-1)\n\treturn d3.range(nsteps).map((i) => start+i*delta)\n}\n\n/**\n * Map from name to d3 curve\n * https://github.com/d3/d3/blob/main/API.md#curves\n * @type {Object.<string, d3.curve>}\n */\nexport const CURVES = {\n\t// cubic basis spline, repeating the end points\n\t'Basis': d3.curveBasis,\n\t// a closed cubic basis spline\n\t'Basis closed': d3.curveBasisClosed,\n\t// a cubic basis spline\n\t'Basis open': d3.curveBasisOpen,\n\t// a straightened cubic basis spline (works only with d3.line, not d3.area!)\n\t'Bundle': d3.curveBundle,\n\t// a cubic Bézier spline with horizontal tangents\n\t'Bump X': d3.curveBumpX,\n\t// a cubic Bézier spline with vertical tangents\n\t'Bump Y': d3.curveBumpY,\n\t// a cubic cardinal spline, with one-sided difference at each end\n\t'Cardinal': d3.curveCardinal,\n\t// a closed cubic cardinal spline\n\t'Cardinal closed': d3.curveCardinalClosed,\n\t// a cubic cardinal spline\n\t'Cardinal open': d3.curveCardinalOpen,\n\t// a cubic Catmull–Rom spline, with one-sided difference at each end\n\t'Catmull-Rom': d3.curveCatmullRom,\n\t// a closed cubic Catmull–Rom spline\n\t'Catmull-Rom closed': d3.curveCatmullRomClosed,\n\t// a cubic Catmull–Rom spline\n\t'Catmull-Rom open': d3.curveCatmullRomOpen,\n\t// a polyline\n\t'Linear': d3.curveLinear,\n\t// a closed polyline.\n\t'Linear closed': d3.curveLinearClosed,\n\t// a cubic spline that, given monotonicity in x, preserves it in y\n\t'Monotone X': d3.curveMonotoneX,\n\t// a cubic spline that, given monotonicity in y, preserves it in x\n\t'Monotone Y': d3.curveMonotoneY,\n\t// a natural cubic spline\n\t'Natural': d3.curveNatural,\n\t// a piecewise constant function\n\t'Step': d3.curveStep,\n\t// a piecewise constant function\n\t'Step after': d3.curveStepAfter,\n\t// a piecewise constant function\n\t'Step before': d3.curveStepBefore,\n}\n","/**\n * Implements methods for computing the number of\n * bins based on the data values\n * \n * Each method takes an array of data values as input\n * and outputs the number of bins\n * @class\n */\nexport function compute_n_bins() {}\n\n/**\n * Compute number of bins with the square root rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sqrt = function (values) {\n\treturn Math.ceil(Math.sqrt(values.length))\n}\n\n/**\n * Compute number of bins with the Sturges rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sturges = function (values) {\n\treturn Math.ceil(Math.log2(values.length)) + 1\n}\n\n/**\n * Compute number of bins with the Rice rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.rice = function (values) {\n\treturn Math.ceil(2*Math.pow(values.length, 1/3))\n}\n\n/**\n * Compute number of bins with Doane's formula\n * \n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.doane = function (values) {\n\tconst n = values.length\n\tif (n < 2) {\n\t\tthrow new Error(\"Doane's rule needs at least 2 datapoints\")\n\t}\n\tconst sigma = Math.sqrt(6*(n-2)/((n+1)*(n+3)))\n\tconst std = d3.deviation(values)\n\tconst mean = d3.mean(values)\n\tconst sum = d3.sum(values)\n\t// The adjusted Fisher-Pearson skewness coefficient\n\t// https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/skewness.htm\n\tconst skew = (Math.sqrt(n*(n+1))/(n-2))*((sum-n*mean)/(n*Math.pow(std, 3)))\n\treturn 1 + Math.ceil(Math.log2(n)) + Math.ceil(Math.log2(1+Math.abs(skew)/sigma))\n}\n\n/**\n * Compute number of bins with Scott's normal\n * reference rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.scott = function (values) {\n\tif (values.length < 2) {\n\t\tthrow new Error(\n\t\t\t\"Cannot compute standard deviation of an array with less than 2 values\"\n\t\t)\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(3.49*d3.deviation(values))\n\t)\n}\n\n/**\n * Compute number of bins with Freedman-Diaconis' choice\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.freedman_diaconis = function (values) {\n\tconst quartile3 = d3.quantile(values, 0.75)\n\tconst quartile1 = d3.quantile(values, 0.25)\n\tconst iqr =  quartile3 - quartile1\n\tif (quartile1 === quartile3) {\n\t\tthrow new Error(\"IQR is 0!\")\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(2*iqr)\n\t)\n}\n","/**\n * Get a deep copy of an object\n * @param {Object} obj the object\n * @returns a deep copy of the object\n */\nexport function deepcopy(obj) {\n\treturn JSON.parse(JSON.stringify(obj))\n}\n\n/**\n * Insert a dom element after another\n * @param {Eleemnt} new_node the new node \n * @param {Element} existing_node the one to add after of\n */\nexport function insert_after(new_node, existing_node) {\n\texisting_node.parentNode.insertBefore(new_node, existing_node.nextSibling);\n}\n\n/**\n * Check if arrays are equal\n * @param {any[][]} arrs the arrays to compare\n * @return {boolean} `true` if they are equal,\n * \t\t   `false` otherwise\n */\nexport function array_equal(...arrs) {\n\tif (!arrs.length) {\n\t\tthrow new Error(\"There are no input arrays\")\n\t}\n\tconst size = arrs[0].length\n\tfor (const arr of arrs.slice(1)) {\n\t\tif (arr.length !== size) {\n\t\t\treturn false\n\t\t}\n\t}\n\tfor (let i = 0; i < size; i++) {\n\t\tconst value = arrs[0][i]\n\t\tfor (const arr of arrs.slice(1)) {\n\t\t\tif (arr[i] !== value) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}","\"use strict\";\n\nimport { d3_chart_wrapper } from \"./d3-chart-wrapper\";\nimport { COLOR_PALETTE } from \"../chart-wrapper\";\nimport { toggle_visibility, linspace, CURVES } from \"./utils\";\nimport { compute_n_bins } from \"../compute-n-bins\";\nimport { array_equal, deepcopy, insert_after } from \"../utils\"\n\n\n/**\n * Default flex gap\n * @type {string}\n */\nconst DEFAULT_FLEX_GAP = '1em'\n/**\n * Default flex gap (bif)\n * @type {string}\n */\nconst DEFAULT_FLEX_GAP_BIG = '3em'\n/**\n * Default margin\n * @type {string}\n */\nconst DEFAULT_MARGIN = '0.7em'\n/**\n * Default margin (big)\n * @type {string}\n */\nconst DEFAULT_MARGIN_BIG = '1em'\n\n/**\n * Name of the key change event\n * @type {string}\n */\nconst KEY_CHANGE_EVENT_NAME = 'ch_key_change'\n/**\n * Key change event\n * @type {Event}\n */\nconst KEY_CHANGE_EVENT = new Event(KEY_CHANGE_EVENT_NAME)\n/**\n * Class name for key change listeners\n * @type {string}\n */\nconst KEY_CHANGE_LISTENER_CLASS_NAME = `${KEY_CHANGE_EVENT_NAME}_listener`\n\n/**\n * CSS class for the whiskers\n * @type {string}\n */\nconst WHISKERS_CSS_CLASS = 'whiskers'\n\n/**\n * Margin for the key2 label\n * @type {number}\n */\nconst KEY2_MARGIN = 50\n\n/**\n * TODO: make a superclass (in the middle of this and d3_chart_wrapper) called xy-chart-wrapper\n * which manages the axes, grid, and so on. This will be useful if we add other charts that make\n * use of x and y axis\n *\n * Boxplot + violin chart wrapper\n *\n * Inspired in:\n * - http://bl.ocks.org/asielen/d15a4f16fa618273e10f,\n * - https://d3-graph-gallery.com/graph/violin_basicHist.html,\n * - https://d3-graph-gallery.com/graph/boxplot_show_individual_points.html\n *\n * @param {Element} div_wrapper the div to work in\n * @param {{key: string[], values: number[]}[]} data the input data: an array of objects\n * \t\twith key (array of components, from general to specific) and values (the datapoints)\n * \t\t(KEY COMPONENTS MUST NOT INCLUDE `'_^PoT3sRanaCantora_'`, or things WILL break)\n * @param {string[]} key_titles the title for each key component\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n * @param {[number, number]} options.whiskers_quantiles overrides default behavior of the whiskers\n * \t\tby specifying the quantiles of the lower and upper\n * @param {boolean} options.sort_xaxis whether to sort the xaxis (default `false`). When there is more than one key-2, sorting is mandatory.\n * @param {string} options.ylabel the y-label (default `null`)\n * @param {boolean} options.overflow whether going beyond the width of the plot container is allowed (default `false`)\n * @param {number} options.xticklabel_angle the angle (in degrees) for the xtick labels (default `0`)\n * @param {(key: string[]) => Promise<Element>} options.tooltip_callback called to fill space in the tooltip\n * \tnext to the metrics. It takes the key as argument and returns a Promise of an HTML element to add to the\n * \ttooltip\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper, data, key_titles, options) {\n\td3_chart_wrapper.call(this, div_wrapper, options)\n\t/**\n\t * Called when the tooltip is shown to render extra info\n\t * @private\n\t * @type {(key: string[]) => Promise<Element>}\n\t */\n\tthis._tooltip_callback = options.tooltip_callback || null\n\t/**\n\t * overrides default behavior of the whiskers by specifying\n\t * the quantiles of the lower and upper\n\t * @type {[number, number]}\n\t * @private\n\t */\n\tthis._whiskers_quantiles = options.whiskers_quantiles || null\n\tconsole.log(this._whiskers_quantiles)\n\t/**\n\t * Whether to go beyond the width of the plot container\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._overflow = options.overflow || false\n\tconst sort_xaxis = options.sort_xaxis || data[0].key.length > 1 || false\n\tif (!data.length) {\n\t\tthrow new Error(\"Data array is empty\")\n\t}\n\t/**\n\t * Data: key (general to specific components), index, values,\n\t * boxplot metrics, outliers, extent (min and max)\n\t * @type {{\n\t *  key: string[],\n\t *  index: number\n\t *  values: number[],\n\t *  metrics: {\n\t *      max: number,\n\t *      upper_fence: number,\n\t *      quartile3: number,\n\t *      median: number,\n\t *      mean: number,\n\t *      iqr: number,\n\t *      quartile1: number,\n\t *      lower_fence: number,\n\t *      min: number\n\t *  },\n\t *  outliers: number[],\n\t *  extent: [number, number]\n\t * }[]}\n\t * @private\n\t */\n\tthis._data = sort_xaxis\n\t\t\t\t ? data.sort((a, b) => a.key.join().localeCompare(b.key.join()))\n\t\t\t\t : data\n\tfor (const [i, ele] of this._data.entries()) {\n\t\tele.metrics = this._calc_metrics(ele.values)\n\t\tele.outliers = ele.values.filter(\n\t\t\t(v) => v < ele.metrics.lower_fence || v > ele.metrics.upper_fence\n\t\t)\n\t\tele.extent = d3.extent(ele.values)\n\t}\n\t/**\n\t * Overall Maximum and minimum of the input data\n\t * @type {[number, number]}\n\t */\n\tthis._data_extent = d3.extent(this._data.map((ele) => ele.extent).flat())\n\t/**\n\t * Existing keys as strings\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._key_strings = this._data.map((ele) => join_key(ele.key))\n\t/**\n\t * Number of components of the key\n\t * @type {number}\n\t * @private\n\t */\n\tthis._key_size = data[0].key.length\n\t/**\n\t * Title for each key component\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._key_titles = key_titles\n\t/**\n\t * Colors\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._colors = this._data.map((_, i) => COLOR_PALETTE[i % COLOR_PALETTE.length])\n\t/**\n\t * The label for the y axis\n\t * @type {string}\n\t * @private\n\t */\n\tthis._ylabel = options.ylabel || null\n\t/**\n\t * Padding for the y axis, to account for the label and ticks\n\t * @type {number}\n\t */\n\tthis.yaxis_padding = this._ylabel ? 62 : 35;\n\t/**\n\t * Full width of svg\n\t * @type {number}\n\t */\n\tthis._full_width = this._data.length < 150\n\t\t? 330.664701211*Math.sqrt(this._data.length) - 170.664701211 + this.yaxis_padding\n\t\t: 26*this._data.length + this.yaxis_padding\n\tif (this._key_size > 1) {  // If we have a key-2, add some margin\n\t\tthis._full_width += this._get_next_key_component_values([]).length*KEY2_MARGIN\n\t}\n\t/**\n\t * Full height of svg\n\t * @type {number}\n\t */\n\tthis._full_height = 453\n\t/**\n\t * Non-graphic components of the chart: setting, scales,\n\t * axis generators, spacing, etc.\n\t * @private\n\t * @type {{\n\t *  margin: {\n\t *      top: number,\n\t *      right: number,\n\t *      bottom: number,\n\t *      left: number\n\t *  },\n\t *  width: number,\n\t *  height: number,\n\t *  yscale: d3.scaleLinear,\n\t *  yticks_division: number,\n\t *  yaxis: d3.axisGenerator,\n\t *  violin_scale: {initial: number, value: number},\n\t *  violin_bandwidth: number,\n\t *  box_scale: {initial: number, value: number},\n\t *  xscale: d3.scaleBand,\n\t *  key2_start_x: {[key2: string]: number},\n\t *  datum_start_x: number[],\n\t *  xaxis: d3.axisGenerator,\n\t *  xticklabel_angle: number,\n\t *  n_bins: {initial: number, value: number}[],\n\t *  histogram: d3.binGenerator[],\n\t *  bins: d3.Bin[][],\n\t *  supported_curves: string[],\n\t *  violin_curve: string\n\t * }}\n\t */\n\tthis._chart = {}\n\tthis._chart.margin = { top: 15, right: 4, bottom: 61, left: this.yaxis_padding }\n\tthis._chart.width = this._full_width - this._chart.margin.left - this._chart.margin.right\n\tthis._chart.height = this._full_height - this._chart.margin.top - this._chart.margin.bottom\n\tthis._chart.yscale = d3.scaleLinear()\n\t\t.range([this._chart.height, 0])\n\t\t.domain(this._data_extent)\n\t\t.clamp(true)  // when input outside of domain, its output is clamped to range\n\tthis._chart.yticks_division = 2  // TODO: make this part of the input options object\n\t// TODO: make number of decimals and number of ticks part of input options object\n\tthis._chart.yaxis = d3.axisLeft(this._chart.yscale)\n\t\t.tickFormat((d, i) => i % this._chart.yticks_division ? '' : d.toFixed(1))\n\t\t.ticks(19)\n\tthis._chart.violin_scale = {initial: 0.8, value: 0.8}\n\tthis._chart.violin_bandwidth =\n\t\t(this._chart.width - this._get_next_key_component_values([]).length*KEY2_MARGIN)/this._data.length\n\tthis._chart.box_scale = {initial: 0.3, value: 0.3}\n\tthis._chart.xscale = d3.scaleBand()\n\t\t.domain(this._key_strings)\n\t\t.range([0, this._chart.width])\n\t\t// .padding(1-this._chart.violin_scale)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n\tthis._chart.key2_start_x = this._key_size > 1  // Compute start point of key-2s if necessary, before creating the space\n\t\t? this._compute_key2_start_x()\n\t\t: null\n\tthis._chart.datum_start_x = this._compute_datum_start_x()\n\tthis._chart.xaxis = d3.axisBottom(this._chart.xscale)\n\t\t.tickFormat((d) => split_key(d)[1])\n\tthis._chart.xticklabel_angle = options.xticklabel_angle || 0\n\tthis._chart.n_bins = this._data.map((ele) => {\n\t\tconst initial_value = compute_n_bins.sturges(ele.values)\n\t\treturn {\n\t\t\tinitial: initial_value,\n\t\t\tvalue: initial_value,\n\t\t}\n\t})\n\tthis._chart.histogram = this._data.map((ele, i) => {\n\t\treturn d3.bin().domain(ele.extent)\n\t\t\t.thresholds(\n\t\t\t\tlinspace(ele.extent[0], ele.extent[1], this._chart.n_bins[i].value+1)\n\t\t\t)\n\t})\n\tthis._chart.bins = this._data.map((ele, i) => {\n\t\treturn this._chart.histogram[i](ele.values)\n\t})\n\tthis._chart.supported_curves = [\n\t\t'Basis', 'Bump Y', 'Cardinal', 'Catmull-Rom', 'Linear',\n\t\t'Monotone Y', 'Natural', 'Step'\n\t]\n\tthis._chart.violin_curve = CURVES[this._chart.supported_curves[0]]\n\t/**\n\t * Graphic components of the chart\n\t * @private\n\t * @type {{\n\t *  root_g: d3.selection,\n\t *  xaxwl_g: d3.selection\n\t *  xaxis_g: d3.selection,\n\t *  yaxwl_g: d3.selection,\n\t *  yaxis_g: d3.selection,\n\t *  key2_dividers_g: d3.selection,\n\t *  violins_g: d3.selection,\n\t *  violins: d3.selection[],\n\t *  boxes_g: d3.selection,\n\t *  outliers: d3.selection[],\n\t *  tooltip_div: d3.selection\n\t * }}\n\t */\n\tthis._graphics = {\n\t\t// Root g tag (translated to account for the margins)\n\t\troot_g: null,\n\t\t// g tag for the x-axis and label\n\t\tyaxwl_g: null,\n\t\t// g tag for the x-axis\n\t\txaxis_g: null,\n\t\t// g tag for the y-axis and label\n\t\tyaxwl_g: null,\n\t\t// g tag for the y-axis\n\t\tyaxis_g: null,\n\t\t// g tag for the class dividers\n\t\tcdividers_g: null,\n\t\t// g tag grouping all violins\n\t\tviolins_g: null,\n\t\t// individual g tag for each violin\n\t\tviolins: [],\n\t\t// g tag grouping all boxes\n\t\tboxes_g: null,\n\t\t// per group: g tag grouping all outliers of each box\n\t\toutliers: [],\n\t\t// div tag of the tooltip\n\t\ttooltip_div: null,\n\t}\n\t/**\n\t * Control panel things\n\t * TODO: if modifying a particular violin gets slow\n\t * because we have to fetch it based on key, we can\n\t * keep track of the selected one so that we only fetch\n\t * if when the selected key changes. Or something like that\n\t * @private\n\t * @type {{\n\t *  max_bins_multiplier: number,\n\t *  selected_index: number\n\t * }}\n\t */\n\tthis._controls = {}\n\tthis._controls.max_bins_multiplier = 3\n\tthis._controls.selected_index = 0\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Compute (boxplot) metrics for the data\n * @function\n * @private\n * @param {number[]} values the data values\n * @returns {{\n *  max: number,\n *  upper_fence: number,\n *  quartile3: number,\n *  median: number,\n *  mean: number,\n *  iqr: number,\n *  quartile1: number,\n *  lower_fence: number,\n *  min: number,\n * }}\n */\nboxvio_chart_wrapper.prototype._calc_metrics = function (values) {\n\tconst metrics = {\n\t\tmax: \t\t\tnull,\n\t\tupper_fence:\tnull,\n\t\tquartile3: \t\tnull,\n\t\tmedian: \t\tnull,\n\t\tmean: \t\t\tnull,\n\t\tiqr: \t\t\tnull,\n\t\tquartile1: \t\tnull,\n\t\tlower_fence: \tnull,\n\t\tmin: \t\t\tnull,\n\t}\n\n\tmetrics.min = d3.min(values)\n\tmetrics.quartile1 = d3.quantile(values, 0.25)\n\tmetrics.median = d3.median(values)\n\tmetrics.mean = d3.mean(values)\n\tmetrics.quartile3 = d3.quantile(values, 0.75)\n\tmetrics.max = d3.max(values)\n\tmetrics.iqr = metrics.quartile3 - metrics.quartile1\n\tmetrics.lower_fence = this._whiskers_quantiles\n\t\t? d3.quantile(values, this._whiskers_quantiles[0]/100)\n\t\t: metrics.quartile1 - 1.5 * metrics.iqr\n\tmetrics.upper_fence = this._whiskers_quantiles\n\t\t? d3.quantile(values, this._whiskers_quantiles[1]/100)\n\t\t: metrics.quartile3 + 1.5 * metrics.iqr\n\n\treturn metrics\n}\n\n/**\n * Query the data given a key template\n * @param {string[]} key_tpl the key template. Parts will be matched,\n * `null` counts as wildcard\n * @return {{\n *  key: string[],\n *  values: number[],\n *  metrics: {\n *      max: number,\n *      upper_fence: number,\n *      quartile3: number,\n *      median: number,\n *      mean: number,\n *      iqr: number,\n *      quartile1: number,\n *      lower_fence: number,\n *      min: number\n *  },\n *  outliers: number[],\n *  extent: [number, number]\n * }[]} the filtered data\n */\nboxvio_chart_wrapper.prototype._query_data = function (key_tpl) {\n\tif (key_tpl.length !== this._key_size) {\n\t\tthrow new Error(\"Key template is of different size than the plot keys\")\n\t}\n\treturn this._data.filter((ele) => {\n\t\tconst key = ele.key\n\t\tfor (let i = 0; i < key.length; i++) {\n\t\t\tif (key_tpl[i] && key_tpl[i] !== key[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t})\n}\n\n/**\n * Get key templates up to a key number\n * @param {number} i the key number. If 1, all existing keys\n *        will be returned. If 2, all existing key templates with a wildcard in\n *        the last component will be returned. If 3, all existing key templates\n *        with a wildcard in the last and second-to-last component will\n *        be returned. Etc.\n * @returns {string[][]} the templates\n */\nboxvio_chart_wrapper.prototype._get_key_templates = function (i) {\n\tif (i < 1 || i > this._key_size) {\n\t\tthrow new Error(`Invalid key number ${i}`)\n\t}\n\t// Convert to real index\n\ti = this._key_size - i\n\tconst templates_wd = this._data.map((ele) => {\n\t\treturn deepcopy(ele.key.slice(0,i+1)).concat(Array(this._key_size-i-1).fill(null))\n\t})\n\tif (!templates_wd.length) return templates_wd\n\t// Remove duplicates\n\tconst templates = [templates_wd[0]]\n\tlet tmp_template = templates_wd[0]\n\tfor (const template of templates_wd.slice(1)) {\n\t\tif (!array_equal(tmp_template, template)) {\n\t\t\ttemplates.push(template)\n\t\t\ttmp_template = template\n\t\t}\n\t}\n\treturn templates\n}\n\n/**\n * Get the possible values of the next key component, given a partial key.\n * E.g., if there are 4 components, and you provide the two leftmost ones\n * in the partial key, possible values for the third leftmost one will be\n * given\n * @param {string[]} pkey partial key\n * @returns {string[]} possible values for the next key component\n */\nboxvio_chart_wrapper.prototype._get_next_key_component_values = function (pkey) {\n\tconst psize = pkey.length\n\tif (psize >= this._key_size) {\n\t\tthrow new Error(`Input key ${pkey} is longer than the data keys`)\n\t}\n\tconst key_tpl = pkey.concat(Array(this._key_size-psize).fill(null))\n\tconst values_wd = this._query_data(key_tpl).map((ele) => ele.key[psize])\n\tif (!values_wd.length) return values_wd\n\tconst values = [values_wd[0]]\n\tlet current_value = values_wd[0]\n\tfor (const value of values_wd.slice(1)) {\n\t\tif (value !== current_value) {\n\t\t\tvalues.push(value)\n\t\t\tcurrent_value = value\n\t\t}\n\t}\n\treturn values\n}\n\n/**\n * Get the index of a key\n * @param {string[]} key the key\n * @returns {number} the index of the key\n */\nboxvio_chart_wrapper.prototype.get_index_of_key = function (key) {\n\tconst i = this._data.findIndex((ele) => ele.key.join() === key.join())\n\tif (i === -1) {\n\t\tthrow new Error(`Key ${key} was not found in data`)\n\t}\n\treturn i\n}\n\n/**\n * Compute starting points (in plot x-coordinates) for the different\n * key2s. There we will draw the key2 labels and separating line\n * @returns {{[key2: string]: number}} the starting position for each key2\n */\nboxvio_chart_wrapper.prototype._compute_key2_start_x = function () {\n\tconst positions = {}\n\n\tconst key_tpls = this._get_key_templates(2)\n\n\tlet i = 0;\n\tfor (const key_tpl of key_tpls) {\n\t\tconst queried_data = this._query_data(key_tpl)\n\t\tconst x = this._chart.xscale(this._key_strings[i])\n\t\tpositions[key_tpl[key_tpl.length-2]] = x\n\t\t// Increase the index by the number of groups in the class\n\t\ti += queried_data.length\n\t}\n\n\treturn positions\n}\n\n/**\n * Compute starting points (in plot x-coordinates) for the datum (each population)\n * @returns {number[]} the starting position for each datum\n */\nboxvio_chart_wrapper.prototype._compute_datum_start_x = function () {\n\tif (this._key_size === 1) {\n\t\treturn this._key_strings.map((key_string) => this._chart.xscale(key_string))\n\t}\n\t// Key size is 2 (for now. Maybe in the future, greater than 2)\n\tconst datum_start_x = []\n\tlet current_x = 0\n\tlet current_key2 = ''\n\tfor (const datum of this._data) {\n\t\tconst key2 = datum.key[this._key_size-2]\n\t\tif (key2 !== current_key2) {\n\t\t\tcurrent_key2 = key2\n\t\t\t// Add space for the key2 margin\n\t\t\tcurrent_x += KEY2_MARGIN\n\t\t}\n\t\tdatum_start_x.push(current_x)\n\t\tcurrent_x += this._chart.violin_bandwidth\n\t}\n\treturn datum_start_x\n}\n\n/**\n * Set the scale for the violins\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_violin_scale\n */\nboxvio_chart_wrapper.prototype.set_violin_scale = function (scale) {\n\tthis._chart.violin_scale.value = scale\n\t// Remove the violin graphics, only leaving its root g tag (violins_g)\n\tthis._graphics.violins_g.selectAll('*').remove()\n\tthis._render_violins(true)\n}\n\n/**\n * Set the number of bins for a particular violin\n *\n * Updates the chart accordingly\n * @param {number} i the index of the violin\n * @param {number} n_bins number of bins\n * @name boxvio_chart_wrapper#set_n_bins\n */\nboxvio_chart_wrapper.prototype.set_n_bins = function (i, n_bins) {\n\tconst chart = this._chart\n\tconst extent = this._data[i].extent\n\tchart.n_bins[i].value = n_bins\n\tchart.histogram[i].thresholds(\n\t\tlinspace(extent[0], extent[1], n_bins+1)\n\t)\n\tchart.bins[i] = chart.histogram[i](this._data[i].values)\n\t// Delete the oath of the existing violin and redraw\n\tthis._graphics.violins[i].selectAll('*').remove()\n\tthis._render_violin(i)\n}\n\n/**\n * Set the curve for the violins\n *\n * Updates the chart accordingly\n * @param {string} curve_name name of the curve\n * @name boxvio_chart_wrapper#set_violin_curve\n */\nboxvio_chart_wrapper.prototype.set_violin_curve = function (curve_name) {\n\tthis._chart.violin_curve = CURVES[curve_name]\n\t// Remove the violin graphics, only leaving its root g tag (violins_g)\n\tthis._graphics.violins_g.selectAll('*').remove()\n\tthis._render_violins(true)\n}\n\n/**\n * Set the scale for the boxes\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_box_scale\n */\nboxvio_chart_wrapper.prototype.set_box_scale = function (scale) {\n\tthis._chart.box_scale.value = scale\n\t// Remove the box graphics, only leaving its root g tag (boxes_g)\n\tthis._graphics.boxes_g.selectAll('*').remove()\n\tthis._render_boxes(true)\n}\n\n/**\n * Render the plot\n * @function\n * @protected\n * @name boxvio_chart_wrapper#render_plot\n */\nboxvio_chart_wrapper.prototype.render_plot = function () {\n\td3_chart_wrapper.prototype.render_plot.call(this)\n\n\tif (this._overflow) {\n\t\tthis.svg.attr('width', null)\n\t\tthis.svg.attr('height', '500px')\n\t\tthis.plot_container.style = \"overflow: auto;\"\n\t}\n\n\t// Set viewBox of svg\n\tthis.svg.attr('viewBox', `0 0 ${this._full_width} ${this._full_height}`)\n\n\t// Hide tooltip when clicking in SVG or plot_container\n\tthis.svg.on('click', (e) => {\n\t\te.stopPropagation()\n\t\tthis._hide_tooltip()\n\t})\n\tthis.plot_container.addEventListener('click', (e) => {\n\t\te.stopPropagation()\n\t\tthis._hide_tooltip()\n\t})\n\n\t// Root g tag\n\tthis._graphics.root_g = this.svg.append('g')\n\t\t.attr('transform', `translate(${this._chart.margin.left},${this._chart.margin.top})`)\n\n\tthis._render_axis()\n\tthis._render_ygrid()\n\tif (this._key_size > 1) {\n\t\tthis._render_key2_dividers()\n\t}\n\tthis._render_violins()\n\tthis._render_boxes()\n\tthis._render_tooltip()\n\n}\n\n/**\n * Render the axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_axis\n */\nboxvio_chart_wrapper.prototype._render_axis = function () {\n\tconst g = this._graphics.root_g\n\t// Render X axis\n\tthis._graphics.xaxwl_g = g.append('g')\n\t\t.attr('transform', `translate(0,${this._chart.height})`)\n\tconst xaxwl_g = this._graphics.xaxwl_g\n\tthis._graphics.xaxis_g = xaxwl_g.append('g')\n\t\t.call(this._chart.xaxis)\n\t// If we have key2s, relocate the ticks at their desired positions\n\t// to leave space for the key2 labels and separators\n\tif (this._key_size > 1) {\n\t\tconst xaxis_ticks = this._graphics.xaxis_g.selectAll('g.tick')\n\t\t// TODO: MOVE\n\t}\n\tthis.apply_xticklabel_angle()\n\t// Render X axis label\n\txaxwl_g.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('y', 50)\n\t\t.attr('x', this._chart.width / 2)\n\t\t.text(this._key_titles[this._key_titles.length-1])\n\n\t// Render y axis\n\tthis._graphics.yaxwl_g = g.append('g')\n\tconst yaxwl_g = this._graphics.yaxwl_g\n\tthis._graphics.yaxis_g = yaxwl_g.append('g')\n\t\t.call(this._chart.yaxis)\n\t// Render Y axis label\n\tyaxwl_g.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('y', -this._chart.margin.left + 20)\n\t\t.attr('x', -this._chart.height / 2)\n\t\t.text(this._ylabel)\n\n}\n\n/**\n * Apply an angle to the xtick labels\n * @function\n * @name boxvio_chart_wrapper#apply_xticklabel_angle\n */\nboxvio_chart_wrapper.prototype.apply_xticklabel_angle = function () {\n\tconst angle = this._chart.xticklabel_angle\n\tconst xaxis_g = this._graphics.xaxis_g\n\tif (angle < 10) {\n\t\txaxis_g.selectAll('text')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr(\"dy\", \"0.8em\")\n\t\t\t.attr(\"dx\", \"0\")\n\t\t\t.attr('transform', `rotate(${-this._chart.xticklabel_angle})`)\n\t} else {\n\t\txaxis_g.selectAll('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr(\"dy\", `${-angle*angle*0.00006172839}em`)\n\t\t\t.attr(\"dx\", \"-0.9em\")\n\t\t\t.attr('transform',\n\t\t\t\t`rotate(${-this._chart.xticklabel_angle})`\n\t\t\t)\n\t\tif (angle < 50) {\n\t\t\txaxis_g.selectAll('text')\n\t\t\t\t.attr('dx', '-0.7em')\n\t\t}\n\t}\n}\n\n/**\n * Render the grid for the y-axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_ygrid\n */\nboxvio_chart_wrapper.prototype._render_ygrid = function () {\n\tconst ticks = this._graphics.yaxis_g.selectAll('g.tick')\n\tticks.append('line')\n\t\t.attr('x1', 0)\n\t\t.attr('y1', 0)\n\t\t.attr('x2', this._chart.width)\n\t\t.attr('y2', 0)\n\t\t.attr('stroke', (_, i) => i % 2 ? '#E0E0E0' : '#D1D1D1')\n\t\t.attr('stroke-width', (_, i) => i % 2 ? 0.5 : 0.8)\n\t\t.attr('class', (_, i) => i % 2 ? 'minor' : 'major')\n\t\t.attr('opacity', 0)  // disabled by default\n}\n\n/**\n * Apply a grid mode to the y axis\n * @param {'None' | 'Major' | 'Major + Minor'} mode the mode\n * @function\n * @name boxvio_chart_wrapper#apply_ygrid_mode\n */\nboxvio_chart_wrapper.prototype.apply_ygrid_mode = function (mode) {\n\tconst major_lines = this._graphics.yaxis_g.selectAll('g.tick line.major')\n\tconst major_opacity = major_lines.attr('opacity')\n\tconst minor_lines = this._graphics.yaxis_g.selectAll('g.tick line.minor')\n\tconst minor_opacity = minor_lines.attr('opacity')\n\tswitch (mode) {\n\t\tcase 'None':\n\t\t\tif (major_opacity == 1) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 1) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Major':\n\t\t\tif (major_opacity == 0) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 1) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Major + Minor':\n\t\t\tif (major_opacity == 0) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 0) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error(`Grid mode '${mode}' is not supported?`)\n\t}\n}\n\n/**\n * Render the dividers for key2\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_key2_dividers\n */\nboxvio_chart_wrapper.prototype._render_key2_dividers = function () {\n\tthis._graphics.key2_dividers_g = this._graphics.root_g.append('g')\n\tconst dividers_g = this._graphics.key2_dividers_g\n\tconst color = 'gray'\n\n\tfor (const [index, key2] of this._get_next_key_component_values([]).entries()) {\n\t\tconst x = this._chart.key2_start_x[key2]\n\t\tconst divider_g = dividers_g.append('g')\n\t\t\t.attr('transform', `translate(${x},0)`)\n\t\tif (index !== 0) {\n\t\t\tdivider_g.append('line')\n\t\t\t\t.attr('x1', 0)\n\t\t\t\t.attr('y1', 0)\n\t\t\t\t.attr('x2', 0)\n\t\t\t\t.attr('y2', this._chart.height)\n\t\t\t\t.attr('stroke', color)\n\t\t\t\t.attr('stroke-width', 0.9)\n\t\t\t\t.attr('stroke-dasharray', this._chart.height/35)\n\t\t}\n\t\tdivider_g.append('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr('transform', 'rotate(-90)')\n\t\t\t.attr('y', '1.3em')  // This is the horizontal axis now\n\t\t\t.attr('x', '-0.6em')  // This is the vertical axis now\n\t\t\t.attr('font-size', '0.8em')\n\t\t\t.attr('fill', color)\n\t\t\t.text(key2)\n\t}\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violins = function (is_g_ready=false) {\n\tconst chart = this._chart\n\tconst g = this._graphics.root_g\n\n\t// Render\n\tif (!is_g_ready) {\n\t\tthis._graphics.violins_g = g.append('g')\n\t}\n\tconst violins_g = this._graphics.violins_g\n\tfor (let i = 0; i < this._data.length; i++) {\n\t\tthis._graphics.violins[i] = violins_g.append('g')\n\t\t\t.attr('transform', `translate(${chart.datum_start_x[i]},0)`)\n\t\tthis._render_violin(i)\n\t}\n\n}\n\n/**\n * Render a violin\n * @function\n * @private\n * @param {boolean} i the index of the violin\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violin = function (i) {\n\tconst bins = this._chart.bins[i]\n\tconst violin_scale = this._chart.violin_scale.value\n\tconst bandwidth = this._chart.violin_bandwidth\n\tconst yscale = this._chart.yscale\n\tconst violin_curve = this._chart.violin_curve\n\n\t// Get the largest count in a bin as it will be maximum width\n\tconst max_count = d3.max(bins, (bin) => bin.length)\n\t// Make a linear scale to map bin counts to bandwidth\n\tconst x_num = d3.scaleLinear()\n\t\t.range([0, bandwidth])\n\t\t.domain([-max_count, max_count])\n\n\t// Only render violin if there is more than 1 datapoint (otherwise there are NaNs around)\n\tif (this._data[i].values.length > 1) {\n\t\tthis._graphics.violins[i]\n\t\t\t.append('path')\n\t\t\t.datum(bins)\n\t\t\t\t.style('stroke', 'gray')\n\t\t\t\t.style('stroke-width', 0.4)\n\t\t\t\t.style('fill', '#d2d2d2')\n\t\t\t\t.attr('d', d3.area()\n\t\t\t\t\t.x0((d) => x_num(-d.length*violin_scale))\n\t\t\t\t\t.x1((d) => x_num(d.length*violin_scale))\n\t\t\t\t\t.y((d) => yscale(d.x0))\n\t\t\t\t\t.curve(violin_curve)\n\t\t\t\t)\n\t}\n}\n\n/**\n * TODO: refactor\n * Render the boxes (including whiskers and outliers)\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for boxes is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_boxes\n */\nboxvio_chart_wrapper.prototype._render_boxes = function (is_g_ready=false) {\n\n\tconst chart = this._chart\n\tconst g = this._graphics.root_g\n\n\t// Draw\n\tif (!is_g_ready) {\n\t\tthis._graphics.boxes_g = g.append('g')\n\t}\n\tconst boxes = this._graphics.boxes_g\n\tconst bandwidth = chart.violin_bandwidth\n\tconst box_width = this._chart.box_scale.value * bandwidth\n\n\tconst whiskers_lw = 2\n\tconst median_lw = 3\n\n\t// Iterate over the groups\n\tfor (const [i, ele] of this._data.entries()) {\n\n\t\tconst metrics = ele.metrics\n\t\tconst color = this._colors[i]\n\n\t\tconst group_box = boxes.append('g')\n\t\t\t.attr('transform', `translate(${chart.datum_start_x[i] + bandwidth / 2},0)`)\n\n\t\t// Draw outliers\n\t\tthis._graphics.outliers[i] = group_box.append('g')\n\t\tconst outliers = this._graphics.outliers[i]\n\t\tfor (const outlier of ele.outliers) {\n\t\t\toutliers.append('circle')\n\t\t\t\t.attr('cx', 0)\n\t\t\t\t.attr('cy', chart.yscale(outlier))\n\t\t\t\t.attr('r', 4)\n\t\t\t\t.style('fill', color)\n\t\t\t\t.style('opacity', 0.7)\n\t\t}\n\n\t\t// Draw whiskers\n\t\tconst whiskers = group_box.append('g')\n\t\t\t.classed(WHISKERS_CSS_CLASS, true)\n\t\twhiskers.append('line')  // vertical line\n\t\t\t.attr('x1', 0)\n\t\t\t.attr('y1', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('x2', 0)\n\t\t\t.attr('y2', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\t\twhiskers.append('line') // lower horizontal\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\t\twhiskers.append('line') // upper horizontal\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\n\t\t// Draw IQR box\n\t\tconst iqr = group_box.append('g')\n\t\t// Only draw rectangle if there is more than 1 datapoint (otherwise NaNs appear)\n\t\tif (ele.values.length > 1) {\n\t\t\tiqr.append('rect')  // iqr rect\n\t\t\t.attr('x', -box_width / 2)\n\t\t\t.attr('y', chart.yscale(metrics.quartile3))\n\t\t\t.attr('width', box_width)\n\t\t\t.attr('height', chart.yscale(metrics.quartile1) - chart.yscale(metrics.quartile3))\n\t\t\t.attr('fill', color)\n\t\t}\n\t\tiqr.append('line')  // median line\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.median))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.median))\n\t\t\t.attr('stroke', 'black')\n\t\t\t.attr('stroke-width', median_lw)\n\t\tconst circle = iqr.append('circle')  // median dot\n\t\t\t.attr('cx', 0)\n\t\t\t.attr('cy', chart.yscale(metrics.median))\n\t\t\t.attr('r', 4.5)\n\t\t\t.style('fill', 'white')\n\t\t\t.attr('stroke', 'black')\n\t\t\t.attr('stroke-width', 2)\n\t\t// Circle events for tooltip\n\t\tthis.tooltip_active = null;\n\t\tcircle.on('click', (e) => {\n\t\t\te.stopPropagation()\n\n\t\t\t// already displayed. Hide\n\t\t\t\tif (this.tooltip_active==i) {\n\t\t\t\t\tthis._hide_tooltip()\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t// hover set and fix\n\t\t\t\tthis.tooltip_hover(i)\n\t\t\t\tthis._graphics.tooltip_div.style('display', 'flex')\n\t\t\t\tthis.tooltip_active = i\n\n\t\t\t// old\n\t\t\t// this._graphics.tooltip_div.style('display', null)\n\t\t\t// this.tooltip_hover(i)\n\t\t})\n\t\t// .on('mouseout', () => {\n\t\t// \tthis._graphics.tooltip_div.style('display', 'none')\n\t\t// })\n\t}\n\n}\n\n/**\n * Hide the tooltip\n * @function\n * @private\n * @name boxvio_chart_wrapper#_hide_tooltip\n */\nboxvio_chart_wrapper.prototype._hide_tooltip = function () {\n\tthis._graphics.tooltip_div.style('display', 'none')\n\tthis.tooltip_active = null\n}\n\n/**\n * Add the tooltip to the DOM\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_tooltip\n */\nboxvio_chart_wrapper.prototype._render_tooltip = function () {\n\tconst tooltip_element = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_div`,\n\t\tclass_name\t\t: 'o-red tooltip_div'\n\t})\n\tinsert_after(tooltip_element, this.plot_container)\n\tthis._graphics.tooltip_div = d3.select(tooltip_element)\n\tconst tooltip_metrics = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metrics`,\n\t\tclass_name\t\t: 'tooltip_metrics_div',\n\t\tparent\t\t\t: tooltip_element\n\t})\n\tconst tooltip_metric_names = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metric_names_div`,\n\t\tclass_name\t\t: 'tooltip_metric_names_div',\n\t\tparent\t\t\t: tooltip_metrics\n\t})\n\tconst tooltip_metric_values = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metric_values_div`,\n\t\tclass_name\t\t: 'tooltip_metric_values_div',\n\t\tparent\t\t\t: tooltip_metrics\n\t})\n}\n\n/**\n * Set the tooltip to visible when we hover over\n * @param {number} i index of data\n * @function\n * @name boxvio_chart_wrapper#tooltip_hover\n */\nboxvio_chart_wrapper.prototype.tooltip_hover = function (i) {\n\n\tconst self = this\n\n\tconst decimals = 2\n\tconst section_id\t= self._data[i].section_id\n\tconst key\t\t\t= self._data[i].key\n\tconst values\t\t= self._data[i].values\n\tconst metrics\t\t= self._data[i].metrics\n\tconst mint\t\t\t= self._data[i].mint\n\tconst type_number\t= self._data[i].type_number\n\t// const tooltip_text = `<b>${key.join(', ')}</b>`\n\n\tconst metric_names = `${tstring.datapoints || 'Datapoints'}`\n\t\t+ `<br>${tstring.mean || 'Mean'}`\n\t\t+ `<br>${tstring.max || 'Maximum'}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${tstring.quantile}-${self._whiskers_quantiles[1]}`\n\t\t\t: '')\n\t\t+ `<br>${tstring.quantile || 'Quantile'}-75`\n\t\t+ `<br>${tstring.median || 'Median'}`\n\t\t+ `<br>${tstring.quantile || 'Quantile'}-25`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${tstring.quantile}-${self._whiskers_quantiles[0]}`\n\t\t\t: '')\n\t\t+ `<br>${tstring.min || 'Minimum'}`\n\tconst metric_values = `${values.length}`\n\t\t+ `<br>${metrics.mean.toFixed(decimals)}`\n\t\t+ `<br>${metrics.max.toFixed(decimals)}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${metrics.upper_fence.toFixed(decimals)}`\n\t\t\t: '')\n\t\t+ `<br>${metrics.quartile3.toFixed(decimals)}`\n\t\t+ `<br>${metrics.median.toFixed(decimals)}`\n\t\t+ `<br>${metrics.quartile1.toFixed(decimals)}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${metrics.lower_fence.toFixed(decimals)}`\n\t\t\t: '')\n\t\t+ `<br>${metrics.min.toFixed(decimals)}`\n\tself._graphics.tooltip_div.select('div.tooltip_metric_names_div')\n\t\t.html(metric_names)\n\tself._graphics.tooltip_div.select('div.tooltip_metric_values_div')\n\t\t.html(metric_values)\n\t\n\t// Call the tooltip callback\n\tif (self._tooltip_callback) {\n\t\tself._tooltip_callback({\n\t\t\tsection_id\t: section_id,\n\t\t\ttype_number\t: type_number,\n\t\t\tmint\t\t: mint\n\t\t})\n\t\t\t.then((ele) => {\n\t\t\t\tconst tooltip_element = self._graphics.tooltip_div.node()\n\t\t\t\tele.id = `${self.id_string()}_tooltip_callback_div`\n\t\t\t\tele.classList.add('tooltip_callback_div')\n\t\t\t\tconst last_child = tooltip_element.lastChild\n\t\t\t\t// If the last child is already a callback, delete it!\n\t\t\t\tif (last_child.classList.contains('tooltip_callback_div')) {\n\t\t\t\t\tlast_child.remove()\n\t\t\t\t}\n\t\t\t\ttooltip_element.appendChild(ele)\n\t\t\t})\n\t}\n}\n\n/**\n * Render the control panel\n * @function\n * @protected\n * @name boxvio_chart_wrapper#render_control_panel\n */\nboxvio_chart_wrapper.prototype.render_control_panel = function () {\n\td3_chart_wrapper.prototype.render_control_panel.call(this)\n\n\t// TODO: refactor the first three (together)\n\tconst upper_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_item control_panel',\n\t\tparent\t\t\t: this.controls_content_container\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// }\n\t})\n\tthis._render_grid_select(upper_container)\n\tthis._render_xticklabel_angle_slider(upper_container)\n\tthis._render_violin_curve_selector(upper_container)\n\tthis._render_checkboxes()\n\tthis._render_scale_sliders()\n\tthis._render_key_selects()\n\tthis._render_n_bins_control()\n\n}\n\n/**\n * Render the selector for grid mode\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_grid_select\n */\nboxvio_chart_wrapper.prototype._render_grid_select = function (container) {\n\tconst select_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst grid_select_id = `${this.id_string()}_grid_select`\n\tconst grid_select_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.grid || 'Grid',\n\t\tparent: select_container,\n\t\tstyle: {'margin-block': 'auto'},\n\t})\n\tgrid_select_label.setAttribute('for', grid_select_id)\n\tconst grid_select = common.create_dom_element({\n\t\telement_type: 'select',\n\t\tid: grid_select_id,\n\t\tparent: select_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'None',\n\t\ttext_content: tstring.none_f || 'None',\n\t\tparent: grid_select,\n\t})\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'Major',\n\t\ttext_content: tstring.major || 'Major',\n\t\tparent: grid_select,\n\t})\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'Major + Minor',\n\t\ttext_content: tstring.major_minor || 'Major + Minor',\n\t\tparent: grid_select,\n\t})\n\tgrid_select.addEventListener('change', () => {\n\t\tconst mode = grid_select.value\n\t\tthis.apply_ygrid_mode(mode)\n\t})\n}\n\n/**\n * Render the slider for the xticklabel angle\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_xticklabel_angle_slider\n */\nboxvio_chart_wrapper.prototype._render_xticklabel_angle_slider = function (container) {\n\tconst slider_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst xticklabel_angle_slider_id = `${this.id_string()}_xticklabel_angle_slider`\n\tconst xticklabel_angle_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.xticklabel_angle || \"X-Tick label angle\",\n\t\tparent: slider_container,\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\txticklabel_angle_slider_label.setAttribute('for', xticklabel_angle_slider_id)\n\t/** @type {Element} */\n\tconst xticklabel_angle_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: xticklabel_angle_slider_id,\n\t\tparent: slider_container,\n\t})\n\txticklabel_angle_slider.setAttribute('min', 0)\n\txticklabel_angle_slider.setAttribute('max', 90)\n\txticklabel_angle_slider.value = this._chart.xticklabel_angle\n\txticklabel_angle_slider.addEventListener('input', () => {\n\t\tthis._chart.xticklabel_angle = Number(xticklabel_angle_slider.value)\n\t\tthis.apply_xticklabel_angle()\n\t})\n}\n\n/**\n * Render the selector for the violin curve\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_violin_curve_selector\n */\nboxvio_chart_wrapper.prototype._render_violin_curve_selector = function (container) {\n\tconst select_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst curve_select_id = `${this.id_string()}_curve_select`\n\tconst curve_select_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violin_curve || 'Violin curve',\n\t\tparent: select_container,\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\tcurve_select_label.setAttribute('for', curve_select_id)\n\tconst curve_select = common.create_dom_element({\n\t\telement_type: 'select',\n\t\tid: curve_select_id,\n\t\tparent: select_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tfor (const curve_name of this._chart.supported_curves) {\n\t\tcommon.create_dom_element({\n\t\t\telement_type: 'option',\n\t\t\tvalue: curve_name,\n\t\t\ttext_content: curve_name,\n\t\t\tparent: curve_select,\n\t\t})\n\t}\n\tcurve_select.addEventListener('change', () => {\n\t\tthis.set_violin_curve(curve_select.value)\n\t})\n}\n\n/**\n * Render the checkboxes of the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_checkboxes\n */\nboxvio_chart_wrapper.prototype._render_checkboxes = function () {\n\t// Container div\n\tconst container_div = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_item checkboxes',\n\t\tparent\t\t\t: this.controls_content_container\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// \t'margin-top': DEFAULT_MARGIN,\n\t\t// },\n\t})\n\n\t// Show text\n\tconst show_text_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\ttext_content: `${tstring.show || \"Show\"}:`,\n\t\tparent: container_div,\n\t})\n\n\t// Show key 2\n\tconst show_key2_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_key2_checkbox_id = `${this.id_string()}_show_key2_checkbox`\n\t/** @type {Element} */\n\tconst show_key2_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_key2_checkbox_id,\n\t\tparent: show_key2_div,\n\t})\n\tshow_key2_checkbox.checked = true\n\t/** @type {Element} */\n\tconst show_key2_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: this._key_titles[this._key_size-2],\n\t\tparent: show_key2_div,\n\t})\n\tshow_key2_label.setAttribute('for', show_key2_checkbox_id)\n\tshow_key2_checkbox.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.key2_dividers_g)\n\t})\n\n\t// Show violins\n\tconst show_violins_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_violins_checkbox_id = `${this.id_string()}_show_violins_checkbox`\n\t/** @type {Element} */\n\tconst show_violins_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_violins_checkbox_id,\n\t\tparent: show_violins_div,\n\t})\n\tshow_violins_checkbox.checked = true\n\t/** @type {Element} */\n\tconst show_violins_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violins || 'Violins',\n\t\tparent: show_violins_div,\n\t})\n\tshow_violins_label.setAttribute('for', show_violins_checkbox_id)\n\tshow_violins_checkbox.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.violins_g)\n\t})\n\n\t// Show boxes\n\tconst show_boxes_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_boxes_checkbox_id = `${this.id_string()}_show_boxes_checkbox`\n\t/** @type {Element} */\n\tconst show_boxes_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_boxes_checkbox_id,\n\t\tparent: show_boxes_div,\n\t})\n\tshow_boxes_checkbox.checked = true\n\t/** @type {Element} */\n\tconst show_boxes_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.boxes || 'Boxes',\n\t\tparent: show_boxes_div,\n\t})\n\tshow_boxes_label.setAttribute('for', show_boxes_checkbox_id)\n\tshow_boxes_checkbox.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.boxes_g)\n\t\t// (DISABLED) Disable the checkbox for outliers (defined below)\n\t\t// show_outliers_checkbox.disabled = !show_boxes_checkbox.checked\n\t})\n\n\t// Show boxes\n\tconst show_whiskers_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_whiskers_checkbox_id = `${this.id_string()}_show_whiskers_checkbox`\n\t/** @type {Element} */\n\tconst show_whiskers_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_whiskers_checkbox_id,\n\t\tparent: show_whiskers_div,\n\t})\n\tshow_whiskers_checkbox.checked = true\n\t/** @type {Element} */\n\tconst show_whiskers_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.whiskers || 'Whiskers',\n\t\tparent: show_whiskers_div,\n\t})\n\tshow_whiskers_label.setAttribute('for', show_whiskers_checkbox_id)\n\tshow_whiskers_checkbox.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.boxes_g.selectAll(`g g.${WHISKERS_CSS_CLASS}`))\n\t\t// (DISABLED) Disable the checkbox for outliers (defined below)\n\t\t// show_outliers_checkbox.disabled = !show_boxes_checkbox.checked\n\t})\n\n\t// Show outliers\n\tconst show_outliers_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_outliers_checkbox_id = `${this.id_string()}_show_outliers_checkbox`\n\t/** @type {Element} */\n\tconst show_outliers_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_outliers_checkbox_id,\n\t\tparent: show_outliers_div,\n\t})\n\tshow_outliers_checkbox.checked = true\n\t/** @type {Element} */\n\tconst show_outliers_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.outliers || 'Outliers',\n\t\tparent: show_outliers_div,\n\t})\n\tshow_outliers_label.setAttribute('for', show_outliers_checkbox_id)\n\tshow_outliers_checkbox.addEventListener('change', () => {\n\t\tfor (const group of this._graphics.outliers) {\n\t\t\ttoggle_visibility(group)\n\t\t}\n\t})\n}\n\n/**\n * Render the sliders of the control panel that\n * control the scale of violins and boxes\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_scale_sliders\n */\nboxvio_chart_wrapper.prototype._render_scale_sliders = function () {\n\t// Container div\n\tconst container_div = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this.controls_content_container,\n\t\tclass_name\t\t: 'control_panel_item scale_sliders',\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// },\n\t})\n\n\t// Violin scale\n\tconst violin_container_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst violin_scale_slider_id = `${this.id_string()}_violin_scale_slider`\n\tconst violin_scale_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violin_width || 'Violin width',\n\t\tparent: violin_container_div,\n\t\t// style: {\n\t\t// \t'margin-block': 'auto',\n\t\t// },\n\t})\n\tviolin_scale_slider_label.setAttribute('for', violin_scale_slider_id)\n\t/** @type {Element} */\n\tconst violin_scale_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: violin_scale_slider_id,\n\t\tparent: violin_container_div,\n\t})\n\tviolin_scale_slider.setAttribute('min', 0)\n\tviolin_scale_slider.setAttribute('max', 1)\n\tviolin_scale_slider.setAttribute('step', 0.05)\n\tviolin_scale_slider.value = this._chart.violin_scale.initial\n\tviolin_scale_slider.addEventListener('input', () => {\n\t\tthis.set_violin_scale(Number(violin_scale_slider.value))\n\t})\n\t/** @type {Element} */\n\tconst violin_scale_slider_reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: violin_container_div\n\t})\n\tviolin_scale_slider_reset.addEventListener('click', () => {\n\t\tviolin_scale_slider.value = this._chart.violin_scale.initial\n\t\tthis.set_violin_scale(Number(violin_scale_slider.value))\n\t})\n\n\t// Box scale\n\tconst box_container_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst box_scale_slider_id = `${this.id_string()}_box_scale_slider`\n\tconst box_scale_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.box_width || 'Box width',\n\t\tparent: box_container_div,\n\t\t// style: {\n\t\t// \t'margin-block': 'auto',\n\t\t// },\n\t})\n\tbox_scale_slider_label.setAttribute('for', box_scale_slider_id)\n\t/** @type {Element} */\n\tconst box_scale_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: box_scale_slider_id,\n\t\tparent: box_container_div,\n\t})\n\tbox_scale_slider.setAttribute('min', 0)\n\tbox_scale_slider.setAttribute('max', 1)\n\tbox_scale_slider.setAttribute('step', 0.05)\n\tbox_scale_slider.value = this._chart.box_scale.initial\n\tbox_scale_slider.addEventListener('input', () => {\n\t\tthis.set_box_scale(Number(box_scale_slider.value))\n\t})\n\t/** @type {Element} */\n\tconst box_scale_slider_reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: box_container_div,\n\t})\n\tbox_scale_slider_reset.addEventListener('click', () => {\n\t\tbox_scale_slider.value = this._chart.box_scale.initial\n\t\tthis.set_box_scale(Number(box_scale_slider.value))\n\t})\n}\n\n/**\n * Render the key select elements\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_key_select\n */\nboxvio_chart_wrapper.prototype._render_key_selects = function () {\n\tconst container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_item key_selects',\n\t\tparent\t\t\t: this.controls_content_container\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'align-items': 'center',\n\t\t// \t'gap': DEFAULT_FLEX_GAP_BIG,\n\t\t// \t'margin-top': DEFAULT_MARGIN_BIG,\n\t\t// },\n\t})\n\t// Render selects for the different key components\n\tconst key_selects = []\n\t/**\n\t * Inner function for populating a key select tag\n\t * Previous key tags must be populated already\n\t * @param {number} i index of the key select\n\t */\n\tconst populate_key_select = (i) => {\n\t\tkey_selects[i].replaceChildren()  // Delete existing children\n\t\tconst pkey = key_selects.slice(0, i).map((key_select) => key_select.value)\n\t\tconst values = this._get_next_key_component_values(pkey)\n\t\tfor (const value of values) {\n\t\t\tcommon.create_dom_element({\n\t\t\t\telement_type: 'option',\n\t\t\t\tvalue: value,\n\t\t\t\ttext_content: value,\n\t\t\t\tparent: key_selects[i],\n\t\t\t})\n\t\t}\n\t}\n\tfor (let i = 0; i < this._key_size; i++) {\n\t\tconst select_container = common.create_dom_element({\n\t\t\telement_type: 'div',\n\t\t\tparent: container,\n\t\t\t// style: {\n\t\t\t// \t'display': 'flex',\n\t\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t\t// },\n\t\t})\n\t\tconst select_id = `${this.id_string()}_key${this._key_size-i}_select`\n\t\tconst label = common.create_dom_element({\n\t\t\telement_type: 'label',\n\t\t\ttext_content: this._key_titles[i],\n\t\t\tparent: select_container,\n\t\t\t// style: {'margin-block': 'auto'},\n\t\t})\n\t\tlabel.setAttribute('for', select_id)\n\t\tconst key_select = common.create_dom_element({\n\t\t\telement_type: 'select',\n\t\t\tid: select_id,\n\t\t\tparent: select_container,\n\t\t})\n\t\tkey_selects.push(key_select)\n\t\tpopulate_key_select(i)\n\t\tkey_select.addEventListener('change', () => {\n\t\t\t// Repopulate the next key selects\n\t\t\tfor (let j = i+1; j < key_selects.length; j++) {\n\t\t\t\tpopulate_key_select(j)\n\t\t\t}\n\t\t\t// Update the selected index\n\t\t\tthis._controls.selected_index = this.get_index_of_key(\n\t\t\t\tkey_selects.map((ks) => ks.value)\n\t\t\t)\n\n\t\t\t// Dispatch key change event to all listeners\n\t\t\tconst listeners\n\t\t\t\t= this.controls_content_container.getElementsByClassName(KEY_CHANGE_LISTENER_CLASS_NAME)\n\t\t\tfor (const ele of listeners) {\n\t\t\t\tele.dispatchEvent(KEY_CHANGE_EVENT)\n\t\t\t}\n\n\t\t})\n\t}\n}\n\n/**\n * Render the control elements to change the number of bins\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_n_bins_control\n */\nboxvio_chart_wrapper.prototype._render_n_bins_control = function () {\n\tconst container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this.controls_content_container,\n\t\tclass_name\t\t: 'control_panel_item n_bins_control'\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'align-items': 'center',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// \t'margin-top': DEFAULT_MARGIN,\n\t\t// },\n\t})\n\t// Slider for n bins\n\tconst violin_n_bins_slider_id = `${this.id_string()}_violin_n_bins_slider`\n\tconst violin_n_bins_label = common.create_dom_element({\n\t\telement_type\t: 'label',\n\t\ttext_content\t: tstring.violin_resolution || 'Violin resolution',\n\t\tparent\t\t\t: container\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\tviolin_n_bins_label.setAttribute('for', violin_n_bins_slider_id)\n\tconst violin_n_bins_slider = common.create_dom_element({\n\t\telement_type\t: 'input',\n\t\ttype\t\t\t: 'range',\n\t\tclass_name\t\t: KEY_CHANGE_LISTENER_CLASS_NAME,\n\t\tid\t\t\t\t: violin_n_bins_slider_id,\n\t\tparent\t\t\t: container\n\t})\n\tviolin_n_bins_slider.setAttribute('min', 2)\n\tconst reset = () => {\n\t\tviolin_n_bins_slider.setAttribute(\n\t\t\t'max',\n\t\t\tthis._controls.max_bins_multiplier\n\t\t\t\t* this._chart.n_bins[this._controls.selected_index].initial\n\t\t)\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].value\n\t}\n\treset()\n\tviolin_n_bins_slider.addEventListener('input', () => {\n\t\tthis.set_n_bins(this._controls.selected_index, Number(violin_n_bins_slider.value))\n\t})\n\tviolin_n_bins_slider.addEventListener(KEY_CHANGE_EVENT_NAME, () => {\n\t\treset()\n\t})\n\n\t// Reset n bins\n\tconst violin_n_bins_slider_reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: container\n\t})\n\tviolin_n_bins_slider_reset.addEventListener('click', () => {\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].initial\n\t\tthis.set_n_bins(this._controls.selected_index, Number(violin_n_bins_slider.value))\n\t})\n\n\t// Reset all n bins\n\tconst violin_all_n_bins_slider_reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset_all_violins || 'Reset all violins',\n\t\tparent\t\t\t: container\n\t})\n\tviolin_all_n_bins_slider_reset.addEventListener('click', () => {\n\t\t// Update the value of the slider\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].initial\n\t\tfor (const [i, n_bins] of this._chart.n_bins.entries()) {\n\t\t\tthis.set_n_bins(i, n_bins.initial)\n\t\t}\n\t})\n}\n\n\n// HELPER FUNCTIONS\n\n/**\n * Splitter string\n * @type {string}\n */\nconst SPLITTER = '_^PoT3sRanaCantora_'\n\n/**\n * Join key array into a string\n * @param {string[]} key the key\n * @returns {string} the join\n */\nfunction join_key(key) {\n\treturn key.join(SPLITTER)\n}\n\n/**\n * Split key string into array\n * @param {string} key the key join\n * @returns {string[]} the split key\n */\nfunction split_key(key) {\n\treturn key.split(SPLITTER)\n}\n","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper.js\";\n\n/**\n * Chart.js chart wrapper class\n * @class\n * @abstract\n * @param {Element} div_wrapper the div conatining the chart\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n * @extends chart_wrapper\n */\nexport function chartjs_chart_wrapper(div_wrapper, options) {\n\tif (this.constructor === chartjs_chart_wrapper) {\n\t\tthrow new Error(\"Abstract class 'chartjs_chart_wrapper' cannot be instantiated\")\n\t}\n\tchart_wrapper.call(this, div_wrapper, options)\n\t/**\n\t * Canvas instance, will be created during\n\t * render\n\t * @type {HTMLCanvasElement}\n\t * @protected\n\t */\n\tthis.canvas = undefined\n\t/**\n\t * Chart instance (chart.js)\n\t * @protected\n\t */\n\tthis.chart = undefined\n}\n// Set prototype chain\nObject.setPrototypeOf(chartjs_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the plot\n * \n * Subclasses must call this method at the top\n * of their own implementation. Then, they can make\n * use of the canvas and the chartjs chart instance\n * @name chartjs_chart_wrapper#render_plot\n * @function\n * @protected\n */\nchartjs_chart_wrapper.prototype.render_plot = function () {\n\tchart_wrapper.prototype.render_plot.call(this)\n\t// Create canvas\n\tthis.canvas = common.create_dom_element({\n\t\telement_type: 'canvas',\n\t\tid: 'result_graph',\n\t\tclass_name: 'o-blue',\n\t\tparent: this.plot_container,\n\t})\n\t// Set chart instance to undefined\n\tthis.chart = undefined\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name chartjs_chart_wrapper#get_supported_export_formats\n */\nchartjs_chart_wrapper.prototype.get_supported_export_formats = function () {\n\treturn ['png']\n}\n\n/**\n * Download the chart as png\n * @param {string} filename the name of the file\n * @function\n * @name chartjs_chart_wrapper#_download_chart_as_png\n */\nchartjs_chart_wrapper.prototype.download_chart_as_png = function (filename) {\n\t/**\n\t * Temporary link\n\t * @type {Element}\n\t */\n\tconst tmpLink = common.create_dom_element({\n\t\telement_type: 'a',\n\t\thref: this.chart.toBase64Image(),\n\t})\n\ttmpLink.setAttribute('download', filename)\n\ttmpLink.click()\n\ttmpLink.remove()\n}\n\n/**\n * FIXME: this is not working...\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name chartjs_chart_wrapper#_download_chart_as_svg\n */\nchartjs_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n\t// Tweak C2S library\n\tthis._tweak_c2s()\n\t// Get original width and height\n\tconst width = this.canvas.offsetWidth\n\tconst height = this.canvas.offsetHeight\n\t// TODO: Turn off responsiveness and animations\n\tthis.chart.options.animation = false\n\tthis.chart.options.reponsive = false\n\t// Replicate chart in C2S space\n\tconst svgContext = C2S(width, height)\n\tconst svgChart = new Chart(svgContext, this.chart.config._config)\n\t// Download\n\t/**\n\t * Temporary link\n\t * @type {Element}\n\t */\n\tconst tmpLink = common.create_dom_element({\n\t\telement_type: 'a',\n\t\thref: 'data:image/svg+xml;utf8,'\n\t\t\t+ encodeURIComponent(svgContext.getSerializedSvg()),\n\t})\n\ttmpLink.setAttribute('download', filename)\n\ttmpLink.click()\n\ttmpLink.remove()\n\t// TODO: Turn on responsiveness and animations\n\tthis.chart.options.animation = true\n\tthis.chart.options.reponsive = true\n}\n\n/**\n * Some tweaks to the canvas2svg library are required for svg export to work\n * \n * Via: https://stackoverflow.com/questions/62249315/export-canvas-to-svg-file\n * @function\n * @private\n * @name chartjs_chart_wrapper#_tweak_c2s\n */\nchartjs_chart_wrapper.prototype._tweak_c2s = function () {\n\tC2S.prototype.getContext = function (contextId) {\n\t\tif (contextId === '2d' || contextId === '2D') {\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t}\n\tC2S.prototype.style = function () {\n\t\treturn this.__canvas.style;\n\t}\n\tC2S.prototype.getAttribute = function (name) {\n\t\treturn this[name];\n\t}\n\tC2S.prototype.addEventListener = function (type, listener, eventListenerOptions) {\n\t\t// nothing to do here, but we need this function :)\n\t}\n}","\"use strict\";\n\nimport { chartjs_chart_wrapper } from \"./chartjs-chart-wrapper.js\";\nimport { COLOR_PICKER_WIDTH, COLOR_PALETTE } from \"../chart-wrapper.js\";\nimport { compute_n_bins } from \"../compute-n-bins.js\";\n\n/**\n * Histogram wrapper\n * @param {Element}  div_wrapper the div to work in\n * @param {number[]} data the data\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n * @param {string} options.xlabel the label for the x-axis (default `null` )\n * @class\n * @extends chartjs_chart_wrapper\n */\nexport function histogram_wrapper(div_wrapper, data, options) {\n\t/*\n\t * <Function>.call is a method that executes the defined function,\n\t * but with the \"this\" variable pointing to the first argument,\n\t * and the rest of the arguments being arguments of the function\n\t * that is being \"called\". This essentially performs all of\n\t * chart_wrapper's constructor logic on histogram_wrapper's \"this\".\n\t */\n\tchartjs_chart_wrapper.call(this, div_wrapper, options)\n\n\t/**\n\t * Data values\n\t * @type {number[]}\n\t * @private\n\t */\n\tthis._data = data\n\t/**\n\t * Whether to perform a density plot\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._density = false\n\t/**\n\t * Default number of bins\n\t * @type {number}\n\t * @private\n\t */\n\tthis._n_bins_default = compute_n_bins.sqrt(this._data)\n\t/**\n\t * Number of bins in the histogram\n\t * \n\t * Defined as the square root of the\n\t * amount of datapoints, computed\n\t * during render\n\t * @type {number}\n\t * @private\n\t */\n\tthis._n_bins = undefined\n\t/** Label for the xaxis\n\t * @type {string}\n\t * @private\n\t*/\n\tthis._xlabel = options.xlabel || null\n\t/**\n\t * Number of decimals to display\n\t * @type {number}\n\t * @private\n\t */\n\tthis._n_decimals = 3\n\t/**\n\t * Maximum number of bins as mutiplier of default\n\t * @type {number}\n\t * @private\n\t */\n\tthis._max_bins_multiplier = 3\n\t/**\n\t * Default color for the bars in rgba\n\t * @type {string}\n\t * @private\n\t */\n\tthis._bar_color = COLOR_PALETTE[0]\n}\n// Set prototype chain\nObject.setPrototypeOf(histogram_wrapper.prototype, chartjs_chart_wrapper.prototype)\n\n/**\n * Check whether we are doing a density plot\n * @returns {boolean} `true` if density plot,\n * \t\t\t`false` otherwise\n * @name histogram_wrapper#get_density\n * @function\n */\nhistogram_wrapper.prototype.get_density = function () {\n\treturn this._density\n}\n\n/**\n * Change the density plot attribute\n * @param density {boolean} `true` if density, `false` otherwise\n * @function\n * @name histogram_wrapper#set_density\n */\nhistogram_wrapper.prototype.set_density = function (density) {\n\tthis._density = density\n\tif (!this.chart) {\n\t\treturn\n\t}\n\t// Update chart\n\tconst [\n\t\tbin_centers, plot_data, half_bin_width, data_min, data_max\n\t] = this._get_plotting_data()\n\tthis.chart.data.datasets[0].label = this._get_density_string()\n\tthis.chart.data.datasets[0].data = plot_data\n\tthis.chart.options.scales.y.title.text = this._get_density_string()\n\tthis.chart.update()\n}\n\n/**\n * Get a string representing the plot mode\n * @returns {string} `'Density'` if we are in density\n * \t\t\tmode, `'Frequency'` otherwise\n * @function\n * @private\n * @name histogram_wrapper#_get_density_string\n */\nhistogram_wrapper.prototype._get_density_string = function () {\n\treturn this._density ? 'Density' : 'Frequency'\n}\n\n/**\n * Get the amount of bins in the histogram\n * @returns {number} the amount of bins\n * @function\n * @name histogram_wrapper#get_n_bins\n */\nhistogram_wrapper.prototype.get_n_bins = function () {\n\treturn this._n_bins\n}\n\n/**\n * Set a new number of bins for the histogram\n * \n * Updates chart instance accordingly\n * @param {number} n_bins amount of bins\n * @function\n * @name histogram_wrapper#set_n_bins\n */\nhistogram_wrapper.prototype.set_n_bins = function (n_bins) {\n\tthis._n_bins = n_bins\n\tif (!this.chart) {\n\t\treturn\n\t}\n\t// Update chart\n\tconst [\n\t\tbin_centers, plot_data, half_bin_width, data_min, data_max\n\t] = this._get_plotting_data()\n\tthis.chart.data.datasets[0].data = plot_data\n\tthis.chart.options.scales.x.min = data_min\n\tthis.chart.options.scales.x.max = data_max\n\tthis.chart.options.scales.x.ticks.stepSize = 2 * half_bin_width\n\tthis.chart.options.plugins.tooltip.callbacks.title =\n\t\tthis._get_tooltip_title_callback(bin_centers, half_bin_width)\n\tthis.chart.update()\n}\n\n/**\n * Get the color of the bars in the histogram\n * @returns {string} the bar color as an rgba string\n * @function\n * @name histogram_wrapper#get_bar_color\n */\nhistogram_wrapper.prototype.get_bar_color = function () {\n\treturn this._bar_color\n}\n\n/**\n * Set a new color for the bars in the histogram\n * \n * Updates the chart instance accordingly\n * @param {string} bar_color the new bar color for the histogram\n * @function\n * @name histogram_wrapper#set_bar_color\n */\nhistogram_wrapper.prototype.set_bar_color = function (bar_color) {\n\tthis._bar_color = bar_color\n\tif (!this.chart) {\n\t\treturn\n\t}\n\tthis.chart.data.datasets[0].backgroundColor = this._bar_color\n\tthis.chart.update()\n}\n\n/**\n * Get data needed to generate the chart\n * TODO: there is no need to recompute bin_centers unless the number of bins\n* \t\t has changed\n* @function\n* @name histogram_wrapper#_get_plotting_data\n* @private\n* \n* @returns {[number[], {x: number, y: number}[], number, number, number]}\n* \t\t\tthe bin centers, {bin centers, count per bin}, half of the bin width,\n* \t\t\tthe minimum and maximum of input data\n */\nhistogram_wrapper.prototype._get_plotting_data = function () {\n\tconst data_max = Math.max(...this._data)\n\tconst data_min = Math.min(...this._data)\n\tconst bin_width = (data_max - data_min) / this._n_bins\n\tconst half_bin_width = 0.5 * bin_width\n\t/**\n\t * Center of each bin\n\t * @type {number[]}\n\t */\n\tconst bin_centers = Array.apply(null, Array(this._n_bins)).map(\n\t\t(value, index) => data_min + (2 * index + 1) * half_bin_width\n\t)\n\t// We bin with right-open intervals\n\t/**\n\t * Count per bin\n\t * @type {number[]}\n\t */\n\tlet entries = Array.apply(null, Array(this._n_bins)).map(() => 0)\n\tfor (let i = 0; i < this._data.length; i++) {\n\t\t// If value is max, add it to last bin\n\t\tif (this._data[i] === data_max) {\n\t\t\tentries[this._n_bins - 1]++\n\t\t\tcontinue\n\t\t}\n\t\t// Proceed as usual\n\t\tfor (let j = 0; j < this._n_bins; j++) {\n\t\t\tif (this._data[i] >= bin_centers[j] - half_bin_width\n\t\t\t\t&& this._data[i] < bin_centers[j] + half_bin_width) {\n\t\t\t\tentries[j]++\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\t// Normalize if density\n\tif (this._density) {\n\t\tconst sum = entries.reduce((partialSum, val) => partialSum + val, 0)\n\t\tfor (let j = 0; j < this._n_bins; j++) {\n\t\t\tentries[j] /= (sum * bin_width);\n\t\t}\n\t}\n\treturn [\n\t\tbin_centers,\n\t\tbin_centers.map((val, i) => ({ x: val, y: entries[i] })),\n\t\thalf_bin_width,\n\t\tdata_min,\n\t\tdata_max,\n\t]\n}\n\n/**\n * Get callback function for tooltip title\n * @param {number[]} bin_centers the bin centers\n * @param {number} half_bin_width half of the bin width\n * @returns the callback function\n * @function\n * @private\n * @name histogram_wrapper#_get_tooltip_title_callback\n */\nhistogram_wrapper.prototype._get_tooltip_title_callback = function (bin_centers, half_bin_width) {\n\t// Cannot use `this` inside inner function!!!\n\tconst xlabel = this._xlabel\n\tconst n_decimals = this._n_decimals\n\t/**\n\t * Callback function for the tooltip title\n\t * @param {TooltipItem[]} items the tooltip item contexts\n\t * @returns {string} the title of the tooltip\n\t * @function\n\t * @name histogram_wrapper#_get_tooltip_title_callback~inner\n\t */\n\tconst callback = function (items) {\n\t\tif (!items.length) {\n\t\t\treturn ''\n\t\t}\n\t\tconst item = items[0]\n\t\tconst index = item.dataIndex\n\t\tconst min = bin_centers[index] - half_bin_width\n\t\tconst max = bin_centers[index] + half_bin_width\n\t\treturn `${xlabel}: ${min.toFixed(n_decimals)} `\n\t\t\t+ `- ${max.toFixed(n_decimals)}`\n\t}\n\treturn callback\n}\n\n/**\n * Render the plot\n * @function\n * @protected\n * @name histogram_wrapper#render_plot\n */\nhistogram_wrapper.prototype.render_plot = function () {\n\tchartjs_chart_wrapper.prototype.render_plot.call(this)\n\n\tthis._n_bins = this._n_bins_default\n\tconst [\n\t\tbin_centers, plot_data, half_bin_width, data_min, data_max\n\t] = this._get_plotting_data()\n\n\t// Split chart options\n\tconst chart_data = {\n\t\tdatasets: [{\n\t\t\tlabel: this._get_density_string(),\n\t\t\tdata: plot_data,\n\t\t\tcategoryPercentage: 1,\n\t\t\tbarPercentage: 1,\n\t\t\tbackgroundColor: this._bar_color,\n\t\t}],\n\t}\n\tconst scales_options = {\n\t\tx: {\n\t\t\ttype: 'linear',  // otherwise it goes to a category axis...\n\t\t\tmin: data_min,\n\t\t\tmax: data_max,\n\t\t\toffset: false,\n\t\t\tgrid: {\n\t\t\t\toffset: false,\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\tstepSize: 2 * half_bin_width,\n\t\t\t\tcallback: (label, index, labels) => {\n\t\t\t\t\treturn Number(label).toFixed(this._n_decimals)\n\t\t\t\t}\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tdisplay: Boolean(this._xlabel),  // Only display if there is a label\n\t\t\t\ttext: this._xlabel,\n\t\t\t\tfont: {\n\t\t\t\t\tsize: 14\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\ty: {\n\t\t\ttitle: {\n\t\t\t\tdisplay: true,\n\t\t\t\ttext: this._get_density_string(),\n\t\t\t\tfont: {\n\t\t\t\t\tsize: 14,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\tconst plugins_options = {\n\t\tlegend: {\n\t\t\tdisplay: false,\n\t\t},\n\t\ttooltip: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: this._get_tooltip_title_callback(bin_centers, half_bin_width),\n\t\t\t},\n\t\t},\n\t}\n\n\t// Render the graph\n\tthis.chart = new Chart(this.canvas, {\n\t\ttype: 'bar',\n\t\tdata: chart_data,\n\t\toptions: {\n\t\t\tscales: scales_options,\n\t\t\tplugins: plugins_options,\n\t\t\tparsing: false,\n\t\t\tnormalized: true,\n\t\t},\n\t})\n}\n\n\n/**\n * Render the control panel\n * @function\n * @protected\n * @name histogram_wrapper#render_control_panel\n */\nhistogram_wrapper.prototype.render_control_panel = function () {\n\tchartjs_chart_wrapper.prototype.render_control_panel.call(this)\n\n\t// Save this histogram wrapper instance, because when we change scope\n\t// we may still need to refer to it\n\t/**\n\t * This histogram_wrapper instance\n\t * @type {histogram_wrapper}\n\t */\n\tconst self = this\n\t/**\n\t * Slider for number of bins\n\t * @type {Element}\n\t */\n\tconst slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tvalue: this._n_bins_default,\n\t\tparent: this.controls_content_container,\n\t})\n\tslider.setAttribute('min', 1)\n\tslider.setAttribute('max', this._max_bins_multiplier * this._n_bins_default)\n\tslider.addEventListener('input', () => {\n\t\tthis.set_n_bins(Number(slider.value))\n\t})\n\t/**\n\t * Reset button for the slider\n\t * @type {Element}\n\t */\n\tconst slider_reset = common.create_dom_element({\n\t\telement_type: 'button',\n\t\ttype: 'button',\n\t\ttext_content: 'Reset',\n\t\tparent: this.controls_content_container,\n\t})\n\tslider_reset.addEventListener('click', () => {\n\t\tslider.value = this._n_bins_default\n\t\tthis.set_n_bins(Number(slider.value))\n\t})\n\n\tconst density_checkbox_id = `${this.id_string()}_density_checkbox`\n\t/**\n\t * Checkbox for density plot\n\t * @type {Element}\n\t */\n\tconst density_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: density_checkbox_id,\n\t\tparent: this.controls_content_container,\n\t})\n\t/**\n\t * Checkbox label for density plot\n\t * @type {Element}\n\t */\n\tconst density_checkbox_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: 'Density',\n\t\tparent: this.controls_container,\n\t})\n\tdensity_checkbox_label.setAttribute('for', density_checkbox_id)\n\tdensity_checkbox.addEventListener('change', () => {\n\t\tthis.set_density(Boolean(density_checkbox.checked))\n\t})\n\t/** iro.js color picker */\n\tconst color_picker_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tid: `${this.id_string()}_color_picker_container`,\n\t\tparent: this.controls_content_container\n\t})\n\tconst color_picker = new window.iro.ColorPicker(color_picker_container, {\n\t\tcolor: this._bar_color,\n\t\twidth: COLOR_PICKER_WIDTH,\n\t\tlayoutDirection: 'horizontal',\n\t\tlayout: [\n\t\t\t{\n\t\t\t\tcomponent: window.iro.ui.Wheel,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: window.iro.ui.Slider,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: window.iro.ui.Slider,\n\t\t\t\toptions: {\n\t\t\t\t\tsliderType: 'alpha',\n\t\t\t\t}\n\t\t\t},\n\t\t],\n\t})\n\tcolor_picker.on('color:change', function (color) {\n\t\tself.set_bar_color(color.rgbaString)\n\t})\n}","/*global tstring, page_globals, Promise, data_manager, common, event_manager, catalog_row_fields */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"../../lib/charts/chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"../../lib/charts/d3/boxvio-chart-wrapper.js\";\nimport { histogram_wrapper } from \"../../lib/charts/chartjs/histogram-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t\t: null,\n\tform_items_container\t\t: null,\n\tdiameter_chart_container\t: null,\n\tweight_chart_container\t\t: null,\n\n\t/**\n\t * Chart wrapper instance for diameter\n\t * @type {chart_wrapper}\n\t */\n\tdiameter_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for weight\n\t * @type {chart_wrapper}\n\t */\n\tweight_chart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.diameter_chart_container\t= options.diameter_chart_container\n\t\t\tself.weight_chart_container\t\t= options.weight_chart_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// number\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"number\",\n\t\t\t\tname \t\t: \"number\",\n\t\t\t\tq_column \t: \"term\",\n\t\t\t\tq_table \t: \"types\",\n\t\t\t\tlabel\t\t: tstring.number_key || \"Number & Key\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tgroup_op \t: '$or',\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// material\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"material\",\n\t\t\t\tname \t\t: \"material\",\n\t\t\t\tq_column \t: \"ref_type_material\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.material || \"material\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// denomination\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"denomination\",\n\t\t\t\tname \t\t: \"denomination\",\n\t\t\t\tq_column \t: \"ref_type_denomination\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.denomination || \"denomination\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// culture\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"culture\",\n\t\t\t\tname\t\t\t: \"culture\",\n\t\t\t\tlabel\t\t\t: tstring.culture || \"culture\",\n\t\t\t\tq_column\t\t: \"p_culture\",\n\t\t\t\tvalue_wrapper\t: ['[\"','\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\n\t\t// iconography_obverse\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"iconography_obverse\",\n\t\t\t\tname\t\t\t: \"iconography_obverse\",\n\t\t\t\tlabel\t\t\t: tstring.iconography_obverse || \"iconography obverse\",\n\t\t\t\tq_column\t\t: \"ref_type_design_obverse_iconography\",\n\t\t\t\tvalue_split\t\t: ' | ',\n\t\t\t\tq_splittable\t: true,\n\t\t\t\tq_selected_eq\t: 'LIKE',\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\t// q_table\t\t: \"ts_period\",\n\t\t\t\tis_term\t\t\t: false,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// iconography_reverse\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"iconography_reverse\",\n\t\t\t\tname\t\t\t: \"iconography_reverse\",\n\t\t\t\tlabel\t\t\t: tstring.iconography_reverse || \"iconography reverse\",\n\t\t\t\tq_column\t\t: \"ref_type_design_reverse_iconography\",\n\t\t\t\tvalue_split\t\t: ' | ',\n\t\t\t\tq_splittable\t: true,\n\t\t\t\tq_selected_eq\t: 'LIKE',\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\t// q_table\t\t: \"ts_period\",\n\t\t\t\tis_term\t\t\t: false,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// range slider date (range_slider) (!) WORKING HERE\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t: \"range_slider\",\n\t\t\t\tname\t\t: \"range_slider\",\n\t\t\t\tinput_type\t: 'range_slider',\n\t\t\t\tlabel\t\t: tstring.period || \"Period\",\n\t\t\t\tclass_name\t: 'range_slider',\n\t\t\t\tq_column\t: \"ref_date_in,ref_date_end\",\n\t\t\t\t// eq\t\t: \"LIKE\",\n\t\t\t\t// eq_in\t: \"\",\n\t\t\t\t// eq_out\t: \"%\",\n\t\t\t\t// q_table\t: \"catalog\",\n\t\t\t\tsql_filter\t: null,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\n\t\t\t\t\t// const form_item\t\t\t\t= this\n\t\t\t\t\tconst node_input\t\t\t\t= form_item.node_input\n\t\t\t\t\tconst range_slider_value_in\t\t= node_input.parentNode.querySelector('#range_slider_in')\n\t\t\t\t\tconst range_slider_value_out\t= node_input.parentNode.querySelector('#range_slider_out')\n\n\t\t\t\t\tfunction set_up_slider() {\n\n\t\t\t\t\t\t// compute range years\n\t\t\t\t\t\tself.get_catalog_range_years()\n\t\t\t\t\t\t.then(function(range_data){\n\t\t\t\t\t\t\t// console.log(\"range_data:\",range_data);\n\n\t\t\t\t\t\t\t// destroy current slider instance if already exists\n\t\t\t\t\t\t\t\tif ($(node_input).slider(\"instance\")) {\n\t\t\t\t\t\t\t\t\t$(node_input).slider(\"destroy\")\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// reset filter\n\t\t\t\t\t\t\t\tform_item.sql_filter = null\n\n\t\t\t\t\t\t\t// set inputs values from database\n\t\t\t\t\t\t\t\trange_slider_value_in.value\t= range_data.min\n\t\t\t\t\t\t\t\trange_slider_value_in.addEventListener(\"change\",function(e){\n\t\t\t\t\t\t\t\t\tconst value = (e.target.value>=range_data.min)\n\t\t\t\t\t\t\t\t\t\t? e.target.value\n\t\t\t\t\t\t\t\t\t\t: range_data.min\n\t\t\t\t\t\t\t\t\t$(node_input).slider( \"values\", 0, value );\n\t\t\t\t\t\t\t\t\te.target.value = value\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\trange_slider_value_out.value = range_data.max\n\t\t\t\t\t\t\t\trange_slider_value_out.addEventListener(\"change\",function(e){\n\t\t\t\t\t\t\t\t\tconst value = (e.target.value<=range_data.max)\n\t\t\t\t\t\t\t\t\t\t? e.target.value\n\t\t\t\t\t\t\t\t\t\t: range_data.max\n\t\t\t\t\t\t\t\t\t$(node_input).slider( \"values\", 1, e.target.value );\n\t\t\t\t\t\t\t\t\te.target.value = value\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// active jquery slider\n\t\t\t\t\t\t\t\t$(node_input).slider({\n\t\t\t\t\t\t\t\t\trange\t: true,\n\t\t\t\t\t\t\t\t\tmin\t\t: range_data.min,\n\t\t\t\t\t\t\t\t\tmax\t\t: range_data.max,\n\t\t\t\t\t\t\t\t\tstep\t: 1,\n\t\t\t\t\t\t\t\t\tvalues\t: [ range_data.min, range_data.max ],\n\t\t\t\t\t\t\t\t\tslide\t: function( event, ui ) {\n\t\t\t\t\t\t\t\t\t\t// update input values on user drag slide points\n\t\t\t\t\t\t\t\t\t\trange_slider_value_in.value\t = ui.values[0]\n\t\t\t\t\t\t\t\t\t\trange_slider_value_out.value = ui.values[1]\n\t\t\t\t\t\t\t\t\t\t// console.warn(\"-----> slide range form_item.sql_filter:\",form_item.sql_filter);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tchange: function( event, ui ) {\n\t\t\t\t\t\t\t\t\t\t// update form_item sql_filter value on every slider change\n\t\t\t\t\t\t\t\t\t\tform_item.sql_filter = \"(ref_date_in >= \" + ui.values[0] + \" AND ref_date_in <= \"+ui.values[1]+\")\"; // AND (ref_date_end <= \" + ui.values[1] + \" OR ref_date_end IS NULL)\n\t\t\t\t\t\t\t\t\t\tform_item.q = ui.value\n\t\t\t\t\t\t\t\t\t\t// console.warn(\"-----> change range form_item.sql_filter:\", form_item.sql_filter);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\t// initial_map_loaded event (triggered on initial map data is ready)\n\t\t\t\t\t// event_manager.subscribe('initial_map_loaded', set_up_slider)\n\t\t\t\t\tset_up_slider()\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// loading\n\t\t\t// cleanup html\n\t\t\t\tconst info_lines = document.querySelectorAll('.info_line')\n\t\t\t\tconst info_lines_length\t= info_lines.length\n\t\t\t\tfor (let i = 0; i < info_lines_length; i++) {\n\t\t\t\t\tinfo_lines[i].classList.add('hide')\n\t\t\t\t}\n\t\t\t\twhile (self.diameter_chart_container.hasChildNodes()) {\n\t\t\t\t\tself.diameter_chart_container.removeChild(self.diameter_chart_container.lastChild);\n\t\t\t\t}\n\t\t\t\twhile (self.weight_chart_container.hasChildNodes()) {\n\t\t\t\t\tself.weight_chart_container.removeChild(self.weight_chart_container.lastChild);\n\t\t\t\t}\n\t\t\t// spinner\n\t\t\t\tconst result = document.getElementById('result')\n\t\t\t\tconst spinner = common.create_dom_element({\n\t\t\t\t\telement_type\t: 'div',\n\t\t\t\t\tclass_name\t\t: 'spinner',\n\t\t\t\t\tparent\t\t\t: result\n\t\t\t\t})\n\n\t\t// scroll to head result\n\t\t\t// if (scroll_result) {\n\t\t\t\t// result.scrollIntoView(\n\t\t\t\t// \t{behavior: \"smooth\", block: \"start\", inline: \"nearest\"}\n\t\t\t\t// );\n\t\t\t// }\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tprocess_result\t: {\n\t\t\t\t\tfn\t\t: 'process_result::add_parents_and_children_recursive',\n\t\t\t\t\tcolumns\t: [{name : \"parents\"}]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\t\t\t\t// console.log(parsed_data)\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\t// const diameters = parsed_data\n\t\t\t\t// \t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t// \t.flat()\n\t\t\t\t// \t.filter((v) => v)\n\t\t\t\t// console.log(diameters)\n\n\t\t\t\t// this.diameter_chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.diameter_chart_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t{\n\t\t\t\t// \t\txlabel: 'Diameter',\n\t\t\t\t// \t}\n\t\t\t\t// )\n\t\t\t\t// this.diameter_chart_wrapper.render()\n\n\t\t\t\t// data\n\t\t\t\t\tconst data = []\n\t\t\t\t\tfor (const [i, ele] of parsed_data.entries()) {\n\t\t\t\t\t\t// get section_id to be the key referent to search data again.\n\t\t\t\t\t\tconst section_id\t= ele.section_id\n\n\t\t\t\t\t\tconst number_key\t= ele.ref_type_number ? ele.ref_type_number : `Missing Number & Key (${i})` // Why need to change the name???? MR POTATOE !!!!!!!!\n\t\t\t\t\t\tconst mint\t\t\t= ele.p_mint ? ele.p_mint[0] : `Missing mint (${ele.section_id})`\n\t\t\t\t\t\tconst material\t\t= ele.ref_type_material ? ele.ref_type_material : `Missing material (${i})`\n\t\t\t\t\t\tconst denomination\t= ele.ref_type_denomination ? ele.ref_type_denomination : `Missing denomination ${i}`\n\t\t\t\t\t\t// if (!['12', '59', '62', '18','11a','14'].includes(name)) continue\n\t\t\t\t\t\t// if (!['59', '62'].includes(name)) continue\n\t\t\t\t\t\tconst tmp_data\t\t= {}\n\n\t\t\t\t\t\tconst calculable\t= ele.full_coins_reference_calculable\n\t\t\t\t\t\tconst diameter_max\t= ele.full_coins_reference_diameter_max\n\t\t\t\t\t\tconst diameter_min\t= ele.full_coins_reference_diameter_min\n\t\t\t\t\t\tconst weight\t\t= ele.full_coins_reference_weight\n\t\t\t\t\t\tconst axis\t\t\t= ele.full_coins_reference_axis\n\n\t\t\t\t\t\tif (diameter_max && diameter_max.length) {\n\t\t\t\t\t\t\tconst tmp_diameter_max = diameter_max.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_diameter_max.length) {\n\t\t\t\t\t\t\t\ttmp_data.diameter_max = tmp_diameter_max\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (diameter_min && diameter_min.length) {\n\t\t\t\t\t\t\tconst tmp_diameter_min = diameter_min.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_diameter_min.length) {\n\t\t\t\t\t\t\t\ttmp_data.diameter_min = tmp_diameter_min\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (weight && weight.length) {\n\t\t\t\t\t\t\tconst tmp_weight = weight.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_weight.length) {\n\t\t\t\t\t\t\t\ttmp_data.weight = tmp_weight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (axis && axis.length) {\n\t\t\t\t\t\t\tconst tmp_axis = axis.filter((v) => v)\n\t\t\t\t\t\t\tif (tmp_axis.length) {\n\t\t\t\t\t\t\t\ttmp_data.axis = tmp_axis\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Object.keys(tmp_data).length) {\n\t\t\t\t\t\t\ttmp_data.section_id \t= section_id\n\t\t\t\t\t\t\ttmp_data.number_key\t\t= number_key\n\t\t\t\t\t\t\ttmp_data.mint\t\t\t= mint\n\t\t\t\t\t\t\ttmp_data.type_number\t= number_key //type number is and will be type number! Raspa said.\n\t\t\t\t\t\t\ttmp_data.material\t\t= material\n\t\t\t\t\t\t\ttmp_data.denomination\t= denomination\n\t\t\t\t\t\t\tdata.push(tmp_data)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(data)\n\n\t\t\t\t// Weights\n\t\t\t\tconst weights = data.filter( (ele) => ele.weight ).map( (ele) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey\t\t\t: [ele.mint, ele.number_key], // MRS POTATOES AND CHIDREN !!!!!!!!!!!!!!!\n\t\t\t\t\t\t\tvalues\t\t: ele.weight,\n\t\t\t\t\t\t\tsection_id\t: ele.section_id,\n\t\t\t\t\t\t\tmint\t\t: ele.mint,\n\t\t\t\t\t\t\ttype_number\t: ele.number_key\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t// console.log('Weights:')\n\t\t\t\t// console.log(weights)\n\n\t\t\t\tspinner.remove()\n\n\t\t\t\tthis.weight_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.weight_chart_container,\n\t\t\t\t\tweights,\n\t\t\t\t\t[tstring.mint || 'Mint', tstring.number || 'Number'],\n\t\t\t\t\t{\n\t\t\t\t\t\twhiskers_quantiles\t\t: [10, 90],\n\t\t\t\t\t\tylabel\t\t\t\t\t: tstring.weight || 'Weight',\n\t\t\t\t\t\toverflow\t\t\t\t: true,\n\t\t\t\t\t\tdisplay_control_panel\t: true,\n\t\t\t\t\t\tdisplay_download\t\t: true,\n\t\t\t\t\t\tsort_xaxis\t\t\t\t: true,\n\t\t\t\t\t\ttooltip_callback\t\t: type_tooltip_callback\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tthis.weight_chart_wrapper.render()\n\n\t\t\t\t// Diameters\n\t\t\t\tconst diameters = data.filter( (ele) => ele.diameter_max ).map(\n\t\t\t\t\t(ele) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey\t\t\t: [ele.mint, ele.number_key], // MR POTATOESSSSSSS !!!!!!!!!!!!!!!\n\t\t\t\t\t\t\tvalues\t\t: ele.diameter_max,\n\t\t\t\t\t\t\tsection_id\t: ele.section_id,\n\t\t\t\t\t\t\tmint\t\t: ele.mint,\n\t\t\t\t\t\t\ttype_number\t: ele.number_key\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t// console.log('Diameters:')\n\t\t\t\t// console.log(diameters)\n\t\t\t\t// this.diameter_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t// \tthis.diameter_chart_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t[tstring.mint || 'Mint', tstring.number || 'Number'],\n\t\t\t\t// \t{\n\t\t\t\t// \t\twhiskers_quantiles: [10, 90],\n\t\t\t\t// \t\tylabel: tstring.diameter || 'Diameter',\n\t\t\t\t// \t\toverflow: true,\n\t\t\t\t// \t\tdisplay_control_panel: true,\n\t\t\t\t// \t\tdisplay_download: true,\n\t\t\t\t// \t\tsort_xaxis: true,\n\t\t\t\t// \t\ttooltip_callback: type_tooltip_callback\n\t\t\t\t// \t}\n\t\t\t\t// )\n\t\t\t\t// this.diameter_chart_wrapper.render()\n\n\t\t\t\t// show Weights and Diameters block labels\n\t\t\t\t\tfor (let i = 0; i < info_lines_length; i++) {\n\t\t\t\t\t\tinfo_lines[i].classList.remove('hide')\n\t\t\t\t\t}\n\t\t\t})\n\n\n\t\treturn js_promise\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load JSON data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 100\n\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\t},\n\n\t/**\n\t* GET_CATALOG_RANGE_YEARS\n\t* @return\n\t*/\n\tget_catalog_range_years : function() {\n\n\t\treturn new Promise(function(resolve){\n\n\t\t\tconst ar_fields = ['id','section_id','MIN(ref_date_in + 0) AS min','MAX(ref_date_in + 0) AS max']\n\n\t\t\tconst request_body = {\n\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\tdb_name\t\t\t: page_globals.WEB_DB,\n\t\t\t\tlang\t\t\t: page_globals.WEB_CURRENT_LANG_CODE,\n\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tcount\t\t\t: false,\n\t\t\t\toffset\t\t\t: 0,\n\t\t\t\torder\t\t\t: 'id ASC'\n\t\t\t}\n\t\t\tdata_manager.request({\n\t\t\t\tbody : request_body\n\t\t\t})\n\t\t\t.then(function(api_response){\n\t\t\t\t// console.log(\"-> get_catalog_range_years api_response:\",api_response);\n\n\t\t\t\tlet min = 0\n\t\t\t\tlet max = 0\n\t\t\t\tif (api_response.result) {\n\t\t\t\t\tfor (let i = 0; i < api_response.result.length; i++) {\n\t\t\t\t\t\tconst row = api_response.result[i]\n\t\t\t\t\t\tconst current_min = parseInt(row.min)\n\t\t\t\t\t\tif (min===0 || current_min<min) {\n\t\t\t\t\t\t\tmin = current_min\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst current_max = parseInt(row.max)\n\t\t\t\t\t\t// if (current_max>min) {\n\t\t\t\t\t\t\tmax = current_max\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst data = {\n\t\t\t\t\tmin : min,\n\t\t\t\t\tmax : max\n\t\t\t\t}\n\n\t\t\t\tresolve(data)\n\t\t\t})\n\t\t})\n\t}//end get_catalog_range_years\n\n}//end analysis\n\n\n/**\n * Callback for tooptip in violin-boxplot\n * @param {string[]} key the key of the violin/box\n * @returns {Promise<Element>} the html element to add to the tooltip \n */\nasync function type_tooltip_callback(options) {\n\n\tconst section_id\t= options.section_id\n\tconst type_number\t= options.type_number\n\tconst mint\t\t\t= options.mint\n\n\t// CALL DEDALO API TO OBTAIN INFO\n\t// const sql_filter =\n\t// \t`(\\`p_mint\\` = '[\"${mint}\"]' AND \\`p_mint\\` != '')`\n\t// \t+ `AND (\\`term\\` LIKE '${number}%' AND \\`term\\` != '')`\n\tconst catalog_ar_fields = ['*']\n\n\tconst catalog_request_options = {\n\t\tdedalo_get\t: 'records',\n\t\tlang\t\t: page_globals.WEB_CURRENT_LANG_CODE,\n\t\ttable\t\t: 'catalog',\n\t\tar_fields\t: catalog_ar_fields,\n\t\t// sql_filter\t: sql_filter,\n\t\tsection_id \t: section_id, // unique id for the selected all data of the type\n\t\tlimit\t\t: 1,\n\t\tcount\t\t: false,\n\t\t// order\t\t: \"norder ASC\"\n\t}\n\n\tconst api_response = await data_manager.request({\n\t\tbody: catalog_request_options\n\t})\n\tconst type_data = api_response.result || null\n\n\tif (!type_data) {\n\t\treturn common.create_dom_element({\n\t\t\telement_type: 'div',\n\t\t\ttext_content: `Could not find number ${type_number} for mint ${mint} in the database.`\n\t\t})\n\t}\n\tconst type_row = page.parse_catalog_data(type_data)[0]\n\n\t// set true to render material and denonimation\n\ttype_row.add_denomination = true\n\t// CREATE THE RESULTING HTML Element\n\t// type_row.render_material\t= true\n\tconst ele = catalog_row_fields.draw_item(type_row)\n\t// Remove style of coins images container, since it is hardcoded to 124mm\n\tele.getElementsByClassName('coins_images')[0].removeAttribute('style')\n\treturn ele\n\n}\n"],"mappings":"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"}