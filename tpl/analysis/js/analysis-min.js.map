{"version":3,"names":["COLOR_PALETTE","chart_wrapper","div_wrapper","options","this","constructor","Error","_n_charts_created","id","_display_download","display_download","_download_chart_container","undefined","plot_container","_display_control_panel","display_control_panel","_controls_container","_controls_toggle","controls_content_container","d3_chart_wrapper","call","svg","_overflow","overflow","_outer_height","outer_height","toggle_visibility","element","attr","transition","linspace","start","stop","nsteps","delta","d3","range","map","i","prototype","id_string","render","replaceChildren","render_plot","render_control_panel","_render_download_panel","supported_formats","get_supported_export_formats","length","download_chart_container","common","create_dom_element","element_type","class_name","parent","format_select","format","value","text_content","toUpperCase","type","tstring","download","addEventListener","download_chart","self","control_panel","classList","toggle","filename","download_func_name","Object","setPrototypeOf","select","append","style","download_chart_as_svg","svg_data","node","outerHTML","svg_blob","Blob","url","URL","createObjectURL","tmpLink","href","setAttribute","click","remove","revokeObjectURL","CURVES","Basis","curveBasis","curveBasisClosed","curveBasisOpen","Bundle","curveBundle","curveBumpX","curveBumpY","Cardinal","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","Linear","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","Natural","curveNatural","Step","curveStep","curveStepAfter","curveStepBefore","compute_n_bins","array_equal","arrs","size","arr","slice","keyed_data","data","_data","key_size","key","calc_boxplot_metrics","values","whiskers_quantiles","metrics","max","upper_fence","quartile3","median","mean","iqr","quartile1","lower_fence","min","quantile","sqrt","Math","ceil","sturges","log2","rice","pow","doane","n","sigma","std","deviation","sum","skew","abs","scott","freedman_diaconis","key_values","rank","index","Array","from","Set","datum","query","key_tpl","filter","ele","get_key_templates","templates_wd","concat","fill","templates","tmp_template","template","push","get_next_key_component_values","pkey","psize","GROUP_CHANGE_EVENT_NAME","GROUP_CHANGE_EVENT","Event","KEY2_MARGIN","boxvio_chart_wrapper","key_titles","_tooltip_callback","tooltip_callback","_tooltip_callback_options_attributes","tooltip_callback_options_attributes","_whiskers_quantiles","sort_xaxis","sort","a","b","join","localeCompare","entries","outliers","v","extent","_data_extent","flat","_ids","_key_titles","_kdm","_key2_values","_colors","_","_ylabel","ylabel","yaxis_padding","_full_width","_full_height","_chart","tooltip_active","margin","top","right","bottom","left","width","height","yscale","scaleLinear","domain","clamp","yticks_division","yaxis","axisLeft","tickFormat","d","toFixed","ticks","violin_scale","initial","violin_bandwidth","box_scale","xscale","scaleBand","key2_start_x","_compute_key2_start_x","datum_start_x","_compute_datum_start_x","xaxis","axisBottom","find","xticklabel_angle","n_bins","initial_value","histogram","bin","thresholds","bins","supported_curves","violin_curve","_graphics","root_g","yaxwl_g","xaxis_g","yaxis_g","key2_dividers_g","violins_g","violins","boxes_g","whiskers","tooltip_div","_controls","max_bins_multiplier","selected_index","sections","general","title","content_container","specific","grid_select","xticklabel_angle_slider","curve_select","show_checkboxes","key2","boxes","scale","violin","slider","reset","box","violin_n_bins","reset_all","_get_next_key_component_values","values_wd","current_value","positions","key_tpls","current_x","queried_data","current_key2","set_violin_scale","selectAll","_render_violins","set_n_bins","chart","_render_violin","set_violin_curve","curve_name","set_box_scale","_render_boxes","on","e","stopPropagation","_hide_tooltip","_render_axis","_render_ygrid","_render_key2_dividers","_render_tooltip","g","xaxwl_g","half_bandwidth","apply_xticklabel_angle","text","angle","apply_ygrid_mode","mode","major_lines","major_opacity","minor_lines","minor_opacity","dividers_g","color","x","divider_g","is_g_ready","classed","set_selected_index","bandwidth","max_count","x_num","area","x0","x1","y","curve","box_width","group_box","outlier","circle","tooltip_hover","_set_specific_controls_section_title","dispatchEvent","innerText","settings_for","tooltip_element","new_node","existing_node","parentNode","insertBefore","nextSibling","tooltip_metrics","metric_names","datapoints","metric_values","html","attr_name","then","add","last_child","lastChild","contains","appendChild","general_settings","upper_container","_render_grid_select","_render_xticklabel_angle_slider","_render_violin_curve_selector","_render_checkboxes","_render_scale_sliders","_render_n_bins_control","_control_panel_logic","container","select_container","grid_select_id","grid","none_f","major","major_minor","slider_container","xticklabel_angle_slider_id","curve_select_id","container_div","show","show_key2_div","show_key2_checkbox_id","show_key2_checkbox","checked","show_violins_div","show_violins_checkbox_id","show_violins_checkbox","show_boxes_div","show_boxes_checkbox_id","show_boxes_checkbox","show_whiskers_div","show_whiskers_checkbox_id","show_whiskers_checkbox","show_outliers_div","show_outliers_checkbox_id","show_outliers_checkbox","violin_container_div","violin_scale_slider_id","violin_width","violin_scale_slider","box_container_div","box_scale_slider_id","box_scale_slider","violin_n_bins_slider_id","violin_resolution","violin_n_bins_slider","reset_all_violins","Number","whisker","group","CLOCK_DIAMETER","clock_chart_wrapper","_width","_compute_width","_height","datum_g","key2_value","n_groups","_render_datum","_render_handles","_render_label","container_g","PI","cos","sin","key1","analysis","form","area_name","row","export_data_container","form_items_container","weight_chart_container","diameter_chart_container","clock_chart_container","weight_chart_wrapper","diameter_chart_wrapper","set_up","form_node","render_form","fragment","DocumentFragment","form_factory","form_row","item_factory","name","label","mint","q_column","value_wrapper","eq","eq_in","eq_out","is_term","callback","form_item","activate_autocomplete","table","q_table","number_key","group_op","material","denomination","culture","iconography_obverse","value_split","q_splittable","q_selected_eq","iconography_reverse","input_type","period","sql_filter","node_input","range_slider_value_in","querySelector","range_slider_value_out","get_catalog_range_years","range_data","$","target","step","slide","event","ui","change","q","submit_group","search","preventDefault","form_submit","window","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","section_container","weight","document","getElementById","diameter","clock","sec_name","result","spinner","search_rows","limit","process_result","fn","columns","parsed_data","event_manager","publish","section_id","ref_type_number","p_mint","ref_type_material","ref_type_denomination","tmp_data","calculable","full_coins_reference_calculable","diameter_max","full_coins_reference_diameter_max","diameter_min","full_coins_reference_diameter_min","full_coins_reference_weight","axis","full_coins_reference_axis","tmp_diameter_max","tmp_diameter_min","tmp_weight","tmp_axis","keys","type_number","weights","diameters","axes","hour","number","type_tooltip_callback","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","Promise","resolve","parse_sql_filter","request_body","dedalo_get","count","data_manager","request","body","response","page","parse_catalog_data","db_name","WEB_DB","offset","api_response","current_min","parseInt","async","catalog_request_options","type_data","type_row","add_denomination","catalog_row_fields","draw_item","getElementsByClassName","removeAttribute"],"sources":["../../lib/charts/chart-wrapper.js","../../lib/charts/d3/d3-chart-wrapper.js","../../lib/charts/d3/utils.js","../../lib/charts/compute-n-bins.js","../../lib/charts/utils.js","../../lib/charts/keyed-data.js","../../lib/charts/d3/boxvio/utils.js","../../lib/charts/d3/boxvio/boxvio-chart-wrapper.js","../../lib/charts/d3/clock/clock-chart-wrapper.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Color palette, totally stolen from matplotlib\n * @type {string[]}\n */\nexport const COLOR_PALETTE = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#17becf']\n\n\n/**\n * Chart wrapper class (download panel, plot, and control panel)\n *\n * The `render` method must be called for the chart to be rendered to the DOM!!!\n *\n * Within the provided div wrapper, it will create three divs:\n * 1. If download is supported, a div to containing the download section, with\n *    id `chart<id>_download_chart_container` class `download_chart_container`\n * 2. A div to contain the plot itself, with id `chart<id>_plot_wrapper` class `plot_wrapper`\n * 3. A div to contain the control panel, with id `chart<id>_control_panel` and class `control_panel`\n * The third div contains two divs. The first for the visibility toggle (class `control_panel_toggle`)\n * and the second one for the control elements themselves (class `control_panel_content`)\n *  \n * It clears the container div during render, so subclasses should work with the dom\n * after the render methods of this superclass (`render_plot` and `render_control_panel`) have been called.\n * In other words, subclasses should override those specific methods instead of the general `render` function\n *\n * Last reminder, the constructor is the place to do data processing exclusively. All rendering to the DOM\n * must be done in the specific render methods. Otherwise, bugs WILL appear.\n * @class\n * @abstract\n * @param {Element} div_wrapper\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n */\nexport function chart_wrapper(div_wrapper, options) {\n\tif (this.constructor === chart_wrapper) {\n\t\tthrow new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n\t}\n\tchart_wrapper._n_charts_created++;\n\t/**\n\t * Unique identifier for the chart.\n\t *\n\t * Subclasses MUST use this in order to assing IDs\n\t * to DOM elements, in order to avoid bugs and cross-chart events\n\t * @type {number}\n\t * @protected\n\t */\n\tthis.id = chart_wrapper._n_charts_created\n\t/**\n\t * Div element wrapping the chart itself and\n\t * the controls\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.div_wrapper = div_wrapper\n\t/**\n\t * Whether to display the download panel\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._display_download = options.display_download || false\n\t/**\n\t * Div container for chart download\n\t * @type {Element}\n\t * @private\n\t */\n\tthis._download_chart_container = undefined\n\t/**\n\t * Div inside the div_wrapper, that just wraps the drawing\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.plot_container = undefined\n\t/**\n\t * Whether to display the control panel\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._display_control_panel = options.display_control_panel || false\n\t/**\n\t * Div container for user controls\n\t * @type {Element}\n\t * @private\n\t */\n\tthis._controls_container = undefined\n\t/**\n\t * Div that expands and collapses the control panel\n\t * @type {Element}\n\t * @private\n\t*/\n\tthis._controls_toggle = undefined\n\t/**\n\t * Div that contains all control elements\n\t * Used freely by each subclass\n\t * @type {Element}\n\t * @protected\n\t */\n\tthis.controls_content_container = undefined\n}\n\n/**\n * Amount of created charts\n * @type {number}\n * @static\n * @private\n */\nchart_wrapper._n_charts_created = 0;\n\n/**\n * Get a string representing the ID of the chart\n * @returns {string} the id as a string\n *          (`'chart1'`, `'chart2'`, ...)\n */\nchart_wrapper.prototype.id_string = function () {\n\treturn `chart${this.id}`\n}\n\n/**\n * Render the chart\n *\n * Empties the div wrapper and resets properties\n *\n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n * @public\n */\nchart_wrapper.prototype.render = function () {\n\t// Remove all children in the div_wrapper\n\tthis.div_wrapper.replaceChildren()\n\n\t// Create the div for wrapping the plot\n\tthis.render_plot()\n\n\t// Create the div for the control panel\n\tif (this._display_control_panel) {\n\t\tthis.render_control_panel()\n\t}\n\n\t// Create the chart download section\n\tif (this._display_download) {\n\t\tthis._render_download_panel()\n\t}\n}\n\n/**\n * Render the download panel to the DOM\n * @function\n * @private\n * @name chart_wrapper#_render_download_panel\n */\nchart_wrapper.prototype._render_download_panel = function () {\n\tconst supported_formats = this.get_supported_export_formats()\n\tif (!supported_formats.length) {\n\t\treturn\n\t}\n\tthis.download_chart_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tid: `${this.id_string()}_download_chart_container`,\n\t\tclass_name: 'o-purple download_chart_container',\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'flex-direction': 'row',\n\t\t// \t'justify-content': 'center',\n\t\t// },\n\t\tparent: this.div_wrapper,\n\t})\n\tconst format_select = common.create_dom_element({\n\t\telement_type\t: 'select',\n\t\tid\t\t\t\t: `${this.id_string()}_chart_export_format`,\n\t\tclass_name\t\t: 'chart_format_select',\n\t\t// style\t\t: {\n\t\t// \t'width'\t\t: '75%',\n\t\t// },\n\t\tparent\t\t\t: this.download_chart_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tfor (const format of supported_formats) {\n\t\tcommon.create_dom_element({\n\t\t\telement_type\t: 'option',\n\t\t\tvalue\t\t\t: format,\n\t\t\ttext_content\t: format.toUpperCase(),\n\t\t\tparent\t\t\t: format_select\n\t\t})\n\t}\n\tconst chart_download_button = common.create_dom_element({\n\t\telement_type\t: 'input',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'btn primary button_download chart',\n\t\tvalue\t\t\t: tstring.download || 'Download',\n\t\t// style\t\t: {\n\t\t// \t'width'\t\t: '25%',\n\t\t// },\n\t\tparent\t\t\t: this.download_chart_container\n\t})\n\tchart_download_button.addEventListener('click', () => {\n\t\tthis.download_chart(format_select.value)\n\t})\n}\n\n/**\n * Render the plot to the DOM\n *\n * Subclasses should override this method and make\n * use of the plot container\n * @function\n * @protected\n * @name chart_wrapper#render_plot\n */\nchart_wrapper.prototype.render_plot = function () {\n\tthis.plot_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tid: `${this.id_string()}_plot_container`,\n\t\tclass_name: 'o-purple plot_container',\n\t\tparent: this.div_wrapper,\n\t})\n}\n\n/**\n * Render the control panel to the DOM\n *\n * Subclasses should override this method and make\n * use of the controls container\n * @function\n * @protected\n * @name chart_wrapper#render_control_panel\n */\nchart_wrapper.prototype.render_control_panel = function () {\n\t/** @type {chart_wrapper} */\n\tconst self = this\n\tthis._controls_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel`,\n\t\tclass_name\t\t: 'control_panel',\n\t\tparent\t\t\t: this.div_wrapper\n\t})\n\tthis._controls_toggle = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel_toggle`,\n\t\ttext_content\t: tstring.control_panel || 'Control panel',\n\t\tclass_name\t\t: 'o-red control_panel_toggle opened',\n\t\tparent\t\t\t: this._controls_container\n\t})\n\tthis._controls_toggle.addEventListener('click', function(){\n\t\tself._controls_toggle.classList.toggle('opened')\n\t\tself.controls_content_container.classList.toggle('hide')\n\t})\n\tthis.controls_content_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_control_panel_content`,\n\t\tclass_name\t\t: 'o-green control_panel_content hide',\n\t\tparent\t\t\t: this._controls_container\n\t})\n}\n\n/**\n * Download the chart as an image\n *\n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n\t/**\n\t * File name for the chart\n\t * @type {string}\n\t */\n\tconst filename = `${DEFAULT_CHART_NAME}.${format}`\n\t/**\n\t * Function name for downloading with the particular format\n\t * @type {string}\n\t */\n\tconst download_func_name = `download_chart_as_${format}`\n\tif (this[download_func_name] === undefined) {\n\t\tthrow new Error(`${download_func_name} is not implemented!`)\n\t}\n\tthis[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n *\n * Subclasses must return their own supported formats, if any, e.g.,\n * `['png', 'jpg', 'eps']`. If no format is supported, there is no\n * need to override this method.\n * @function\n * @returns {string[]} the supported formats\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n\treturn []\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div.\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * The created svg tag has width=100%, spanning the width of the parent element. Subclasses\n * can alter this behavior by modifying the svg after the superclass `render_plot` method has been\n * called\n * @param {Element} div_wrapper the div containing the chart\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `true`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `true`)\n * @param {boolean} options.overflow whether going beyond the width of the plot container is allowed (default `false`).\n * \t\tif `false`, the svg will be stretched to fill the full width of its parent element\n * @param {string} options.outer_height outer height of the plot, will be the height applied to the SVG (default `500px`)\n * \t\toverflow must be enabled for outer_height to work\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper, options) {\n\tif (this.constructor === d3_chart_wrapper) {\n\t\tthrow new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n\t}\n\tchart_wrapper.call(this, div_wrapper, options)\n\t/**\n\t * D3 selection object for the root `svg` tag\n\t * @protected\n\t */\n\tthis.svg = undefined\n\t/**\n\t * Whether to go beyond the width of the plot container\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._overflow = options.overflow || false\n\t/**\n\t * Outer height of the plot, will be the height applied to the SVG\n\t * @type {string}\n\t * @private\n\t */\n\tthis._outer_height = options.outer_height || '500px'\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the plot to the DOM\n * \n * Subclasses must call this method at the top\n * of their own implementation. Then, they can\n * make use of the svg d3.selection object\n * @function\n * @protected\n * @name chart_wrapper#render_plot\n */\nd3_chart_wrapper.prototype.render_plot = function () {\n\tchart_wrapper.prototype.render_plot.call(this)\n\n\tthis.svg = d3.select(this.plot_container)\n\t\t.append('svg')\n\t\t// When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n\t\t.attr('version', '1.1')\n\t\t.attr('xmlns', 'http://www.w3.org/2000/svg')\n\tif (this._overflow) {\n\t\tthis.svg\n\t\t\t.attr('width', null)\n\t\t\t.attr('height', this._outer_height)\n\t\tthis.plot_container.style = \"overflow: auto;\"\n\t} else {\n\t\tthis.svg.attr('width', '100%')\n\t}\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n\treturn ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n\tconst svg_data = this.svg.node().outerHTML\n\tconst svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n\tconst url = URL.createObjectURL(svg_blob)\n\t/**\n\t * Temporary link\n\t * @type {Element}\n\t */\n\tconst tmpLink = common.create_dom_element({\n\t\telement_type: 'a',\n\t\thref: url,\n\t})\n\ttmpLink.setAttribute('download', filename)\n\ttmpLink.click()\n\ttmpLink.remove()\n\tURL.revokeObjectURL(url)\n}","/**\n * Toggle visibility of a d3 selection element\n * @param {d3.selection} element the elememt\n */\nexport function toggle_visibility(element) {\n\tif (element.attr('opacity') == 0) {\n\t\telement.transition().attr('opacity', 1)\n\t} else {\n\t\telement.transition().attr('opacity', 0)\n\t}\n}\n\n/**\n * Get an array of values, evenly spaced over an\n * interval\n * \n * https://gist.github.com/davebiagioni/1ac21feb1c2db04be4e6\n * @param {number} start start value\n * @param {number} stop stop value\n * @param {number} nsteps amount of steps\n * @returns {number[]} the values\n */\nexport function linspace(start, stop, nsteps){\n\tconst delta = (stop-start)/(nsteps-1)\n\treturn d3.range(nsteps).map((i) => start+i*delta)\n}\n\n/**\n * Map from name to d3 curve\n * https://github.com/d3/d3/blob/main/API.md#curves\n * @type {Object.<string, d3.curve>}\n */\nexport const CURVES = {\n\t// cubic basis spline, repeating the end points\n\t'Basis': d3.curveBasis,\n\t// a closed cubic basis spline\n\t'Basis closed': d3.curveBasisClosed,\n\t// a cubic basis spline\n\t'Basis open': d3.curveBasisOpen,\n\t// a straightened cubic basis spline (works only with d3.line, not d3.area!)\n\t'Bundle': d3.curveBundle,\n\t// a cubic Bézier spline with horizontal tangents\n\t'Bump X': d3.curveBumpX,\n\t// a cubic Bézier spline with vertical tangents\n\t'Bump Y': d3.curveBumpY,\n\t// a cubic cardinal spline, with one-sided difference at each end\n\t'Cardinal': d3.curveCardinal,\n\t// a closed cubic cardinal spline\n\t'Cardinal closed': d3.curveCardinalClosed,\n\t// a cubic cardinal spline\n\t'Cardinal open': d3.curveCardinalOpen,\n\t// a cubic Catmull–Rom spline, with one-sided difference at each end\n\t'Catmull-Rom': d3.curveCatmullRom,\n\t// a closed cubic Catmull–Rom spline\n\t'Catmull-Rom closed': d3.curveCatmullRomClosed,\n\t// a cubic Catmull–Rom spline\n\t'Catmull-Rom open': d3.curveCatmullRomOpen,\n\t// a polyline\n\t'Linear': d3.curveLinear,\n\t// a closed polyline.\n\t'Linear closed': d3.curveLinearClosed,\n\t// a cubic spline that, given monotonicity in x, preserves it in y\n\t'Monotone X': d3.curveMonotoneX,\n\t// a cubic spline that, given monotonicity in y, preserves it in x\n\t'Monotone Y': d3.curveMonotoneY,\n\t// a natural cubic spline\n\t'Natural': d3.curveNatural,\n\t// a piecewise constant function\n\t'Step': d3.curveStep,\n\t// a piecewise constant function\n\t'Step after': d3.curveStepAfter,\n\t// a piecewise constant function\n\t'Step before': d3.curveStepBefore,\n}\n","/**\n * Implements methods for computing the number of\n * bins based on the data values\n * \n * Each method takes an array of data values as input\n * and outputs the number of bins\n * @class\n */\nexport function compute_n_bins() {}\n\n/**\n * Compute number of bins with the square root rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sqrt = function (values) {\n\treturn Math.ceil(Math.sqrt(values.length))\n}\n\n/**\n * Compute number of bins with the Sturges rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sturges = function (values) {\n\treturn Math.ceil(Math.log2(values.length)) + 1\n}\n\n/**\n * Compute number of bins with the Rice rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.rice = function (values) {\n\treturn Math.ceil(2*Math.pow(values.length, 1/3))\n}\n\n/**\n * Compute number of bins with Doane's formula\n * \n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.doane = function (values) {\n\tconst n = values.length\n\tif (n < 2) {\n\t\tthrow new Error(\"Doane's rule needs at least 2 datapoints\")\n\t}\n\tconst sigma = Math.sqrt(6*(n-2)/((n+1)*(n+3)))\n\tconst std = d3.deviation(values)\n\tconst mean = d3.mean(values)\n\tconst sum = d3.sum(values)\n\t// The adjusted Fisher-Pearson skewness coefficient\n\t// https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/skewness.htm\n\tconst skew = (Math.sqrt(n*(n+1))/(n-2))*((sum-n*mean)/(n*Math.pow(std, 3)))\n\treturn 1 + Math.ceil(Math.log2(n)) + Math.ceil(Math.log2(1+Math.abs(skew)/sigma))\n}\n\n/**\n * Compute number of bins with Scott's normal\n * reference rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.scott = function (values) {\n\tif (values.length < 2) {\n\t\tthrow new Error(\n\t\t\t\"Cannot compute standard deviation of an array with less than 2 values\"\n\t\t)\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(3.49*d3.deviation(values))\n\t)\n}\n\n/**\n * Compute number of bins with Freedman-Diaconis' choice\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.freedman_diaconis = function (values) {\n\tconst quartile3 = d3.quantile(values, 0.75)\n\tconst quartile1 = d3.quantile(values, 0.25)\n\tconst iqr =  quartile3 - quartile1\n\tif (quartile1 === quartile3) {\n\t\tthrow new Error(\"IQR is 0!\")\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(2*iqr)\n\t)\n}\n","/**\n * Get a deep copy of an object\n * @param {Object} obj the object\n * @returns a deep copy of the object\n */\nexport function deepcopy(obj) {\n\treturn JSON.parse(JSON.stringify(obj))\n}\n\n/**\n * Insert a dom element after another\n * @param {Eleemnt} new_node the new node \n * @param {Element} existing_node the one to add after of\n */\nexport function insert_after(new_node, existing_node) {\n\texisting_node.parentNode.insertBefore(new_node, existing_node.nextSibling);\n}\n\n/**\n * Check if arrays are equal\n * @param {any[][]} arrs the arrays to compare\n * @return {boolean} `true` if they are equal,\n * \t\t   `false` otherwise\n */\nexport function array_equal(...arrs) {\n\tif (!arrs.length) {\n\t\tthrow new Error(\"There are no input arrays\")\n\t}\n\tconst size = arrs[0].length\n\tfor (const arr of arrs.slice(1)) {\n\t\tif (arr.length !== size) {\n\t\t\treturn false\n\t\t}\n\t}\n\tfor (let i = 0; i < size; i++) {\n\t\tconst value = arrs[0][i]\n\t\tfor (const arr of arrs.slice(1)) {\n\t\t\tif (arr[i] !== value) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}","\"use strict\";\n\nimport { array_equal } from \"./utils\";\n\n\n/**\n * Wrapper around keyed data. That is, data which has a key. Several\n * datum are allowed to have the same key.\n * The data can have other keys as well.\n * \n * Key components (strings) have a rank. Rank 1 is the rightmost one,\n * Rank 2 is the one on the left of Rank 1, and so on...\n * \n * This class provides utilities to work with keys, querying data and\n * such\n * \n * @param {{key: string[]}[]} data the data\n * @class\n */\nexport function keyed_data(data) {\n\t/**\n\t * Internal data\n\t * @type {{key: string[]}[]}\n\t * @private\n\t */\n\tthis._data = data\n\n\t/**\n\t * Amount of components of the key\n\t * @type {number}\n\t * @public\n\t */\n\tthis.key_size = data[0].key.length\n}\n\n/**\n * Get possible key values at a certain rank\n * @param {number} rank the rank\n * @returns {string[]} possible key values\n */\nkeyed_data.prototype.key_values = function (rank) {\n\tif (rank < 1 || rank > this.key_size) {\n\t\tthrow new Error(`Rank ${rank} does not exist in a key of size ${this.key_size}`)\n\t}\n\t/** @type {number} */\n\tconst index = this.key_size - rank\n\treturn Array.from(new Set(this._data.map((datum) => datum.key[index])))\n}\n\n/**\n * Query the data given a key template\n * @param {string[]} key_tpl the key template. Parts will be matched,\n * \t`null` counts as wildcard\n * @returns {{key: string[]}[]} the filtered data\n */\nkeyed_data.prototype.query = function (key_tpl) {\n\tif (key_tpl.length !== this.key_size) {\n\t\tthrow new Error(\"Key template is of different size than the plot keys\")\n\t}\n\treturn this._data.filter((ele) => {\n\t\tconst key = ele.key\n\t\tfor (let i = 0; i < key.length; i++) {\n\t\t\tif (key_tpl[i] && key_tpl[i] !== key[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t})\n}\n\n/**\n * Get key templates up to a rank\n * @param {number} rank the rank. If 1, all existing keys\n *        will be returned. If 2, all existing key templates with a wildcard in\n *        the last component will be returned. If 3, all existing key templates\n *        with a wildcard in the last and second-to-last component will\n *        be returned. Etc.\n * @returns {string[][]} the templates\n */\nkeyed_data.prototype.get_key_templates = function (rank) {\n\tif (rank < 1 || rank > this.key_size) {\n\t\tthrow new Error(`Invalid rank ${rank} for key with size ${this.key_size}`)\n\t}\n\t// Convert to real index\n\t/** @type {number} */\n\tconst i = this.key_size - rank\n\tconst templates_wd = this._data.map((ele) => {\n\t\treturn ele.key.slice(0,i+1).concat(Array(this.key_size-i-1).fill(null))\n\t})\n\tif (!templates_wd.length) return templates_wd\n\t// Remove duplicates\n\tconst templates = [templates_wd[0]]\n\tlet tmp_template = templates_wd[0]\n\tfor (const template of templates_wd.slice(1)) {\n\t\tif (!array_equal(tmp_template, template)) {\n\t\t\ttemplates.push(template)\n\t\t\ttmp_template = template\n\t\t}\n\t}\n\treturn templates\n}\n\n/**\n * Get the possible values of the next key component, given a partial key.\n * E.g., if there are 4 components, and you provide the two leftmost ones\n * in the partial key, possible values for the third leftmost one will be\n * given\n * @param {string[]} pkey partial key\n * @returns {string[]} possible values for the next key component\n */\nkeyed_data.prototype.get_next_key_component_values = function (pkey) {\n\tconst psize = pkey.length\n\tif (psize >= this.key_size) {\n\t\tthrow new Error(`Input key ${pkey} is as long or longer than the actual keys!`)\n\t}\n\tconst key_tpl = pkey.concat(Array(this.key_size-psize).fill(null))\n\t/** @type {string[]} */\n\treturn Array.from(\n\t\tnew Set(\n\t\t\tthis.query(key_tpl).map((ele) => ele.key[psize])\n\t\t)\n\t)\n}\n","\"use strict\";\n\n/**\n * Compute (boxplot) metrics for the data\n * @param {number[]} values the data values\n * @param {[number, number]} whiskers_quantiles if specified, the whiskers will be at those\n * \t\tquantiles. If not specified, they will be located at Q1 - 1.5 * IQR and Q3 + 1.5 * IQR\n * @returns {{\n *  max: number,\n *  upper_fence: number,\n *  quartile3: number,\n *  median: number,\n *  mean: number,\n *  iqr: number,\n *  quartile1: number,\n *  lower_fence: number,\n *  min: number,\n * }}\n */\nexport function calc_boxplot_metrics(values, whiskers_quantiles=null) {\n\tconst metrics = {\n\t\tmax: \t\t\tnull,\n\t\tupper_fence:\tnull,\n\t\tquartile3: \t\tnull,\n\t\tmedian: \t\tnull,\n\t\tmean: \t\t\tnull,\n\t\tiqr: \t\t\tnull,\n\t\tquartile1: \t\tnull,\n\t\tlower_fence: \tnull,\n\t\tmin: \t\t\tnull,\n\t}\n\n\tmetrics.min = d3.min(values)\n\tmetrics.quartile1 = d3.quantile(values, 0.25)\n\tmetrics.median = d3.median(values)\n\tmetrics.mean = d3.mean(values)\n\tmetrics.quartile3 = d3.quantile(values, 0.75)\n\tmetrics.max = d3.max(values)\n\tmetrics.iqr = metrics.quartile3 - metrics.quartile1\n\tmetrics.lower_fence = whiskers_quantiles\n\t\t? d3.quantile(values, whiskers_quantiles[0]/100)\n\t\t: metrics.quartile1 - 1.5 * metrics.iqr\n\tmetrics.upper_fence = whiskers_quantiles\n\t\t? d3.quantile(values, whiskers_quantiles[1]/100)\n\t\t: metrics.quartile3 + 1.5 * metrics.iqr\n\n\treturn metrics\n}","\"use strict\";\n\nimport { d3_chart_wrapper } from \"../d3-chart-wrapper\";\nimport { COLOR_PALETTE } from \"../../chart-wrapper\";\nimport { toggle_visibility, linspace, CURVES } from \"../utils\";\nimport { compute_n_bins } from \"../../compute-n-bins\";\nimport { insert_after } from \"../../utils\";\nimport { keyed_data } from \"../../keyed-data\";\nimport { calc_boxplot_metrics } from \"./utils\";\n\n\n/**\n * Name of the group change event\n * @type {string}\n */\nconst GROUP_CHANGE_EVENT_NAME = 'ch_group_change'\n/**\n * Group change event\n * @type {Event}\n */\nconst GROUP_CHANGE_EVENT = new Event(GROUP_CHANGE_EVENT_NAME)\n\n/**\n * Margin for the key2 label\n * @type {[number, number]}\n */\nconst KEY2_MARGIN = [10, 33]\n\n/**\n * TODO: make a superclass (in the middle of this and d3_chart_wrapper) called xy-chart-wrapper\n * which manages the axes, grid, and so on. This will be useful if we add other charts that make\n * use of x and y axis\n *\n * Boxplot + violin chart wrapper\n *\n * Inspired in:\n * - http://bl.ocks.org/asielen/d15a4f16fa618273e10f,\n * - https://d3-graph-gallery.com/graph/violin_basicHist.html,\n * - https://d3-graph-gallery.com/graph/boxplot_show_individual_points.html\n *\n * @param {Element} div_wrapper the div to work in\n * @param {{id: string, key: string[], values: number[]}[]} data the input data: an array of objects\n * \t\twith id (unique identifier), key (array of components, from general to specific), and values\n * \t\t(the datapoints). It may contain any other keys, that can be passed to the tooltip callback\n * \t\t(KEY COMPONENTS MUST NOT INCLUDE `'_^PoT3sRanaCantora_'`, or things WILL break)\n * @param {string[]} key_titles the title for each key component\n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n * @param {boolean} options.overflow whether going beyond the width of the plot container is allowed (default `false`).\n * \t\tif `false`, the svg will be stretched to fill the full width of its parent element\n * @param {string} options.outer_height outer height of the plot, will be the height applied to the SVG (default `500px`)\n * \t\toverflow must be enabled for outer_height to work\n * @param {[number, number]} options.whiskers_quantiles overrides default behavior of the whiskers\n * \t\tby specifying the quantiles of the lower and upper\n * @param {boolean} options.sort_xaxis whether to sort the xaxis (default `false`). When there is more than one key-2, sorting is mandatory.\n * @param {string} options.ylabel the y-label (default `null`)\n * @param {number} options.xticklabel_angle the angle (in degrees) for the xtick labels (default `0`)\n * @param {(options: Object) => Promise<Element>} options.tooltip_callback called to fill space in the tooltip\n * \tnext to the metrics. It takes an options object as argument and returns a Promise of an HTML element to add to the\n * \ttooltip. The attributes of the options object come from the data and are determined by the\n * `tooltip_callback_options_attributes` option\n * @param {string[]} options.tooltip_callback_options_attributes list of datum attributes to include in the\n * \toptions object for the tooltip callback. If the callback is provided, this list MUST be provided as well\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper, data, key_titles, options) {\n\td3_chart_wrapper.call(this, div_wrapper, options)\n\t/**\n\t * Called when the tooltip is shown to render extra info\n\t * @private\n\t * @type {(options: Object) => Promise<Element>}\n\t */\n\tthis._tooltip_callback = options.tooltip_callback || null\n\t/**\n\t * List of datum attributes to include in the options argument of the tooltip callback\n\t * @private\n\t * @type {string[]}\n\t */\n\tthis._tooltip_callback_options_attributes = options.tooltip_callback_options_attributes || null\n\t/**\n\t * Overrides default behavior of the whiskers by specifying\n\t * the quantiles of the lower and upper\n\t * @type {[number, number]}\n\t * @private\n\t */\n\tthis._whiskers_quantiles = options.whiskers_quantiles || null\n\tconst sort_xaxis = options.sort_xaxis || data[0].key.length > 1 || false\n\tif (!data.length) {\n\t\tthrow new Error(\"Data array is empty\")\n\t}\n\t/**\n\t * Data: id, key (general to specific components), values,\n\t * boxplot metrics, outliers, extent (min and max)\n\t * @type {{\n\t * \tid: string,\n\t *  key: string[],\n\t *  values: number[],\n\t *  metrics: {\n\t *      max: number,\n\t *      upper_fence: number,\n\t *      quartile3: number,\n\t *      median: number,\n\t *      mean: number,\n\t *      iqr: number,\n\t *      quartile1: number,\n\t *      lower_fence: number,\n\t *      min: number\n\t *  },\n\t *  outliers: number[],\n\t *  extent: [number, number]\n\t * }[]}\n\t * @private\n\t */\n\tthis._data = sort_xaxis\n\t\t\t\t ? data.sort((a, b) => a.key.join().localeCompare(b.key.join()))\n\t\t\t\t : data\n\tfor (const [i, ele] of this._data.entries()) {\n\t\tele.metrics = calc_boxplot_metrics(ele.values, this._whiskers_quantiles)\n\t\tele.outliers = ele.values.filter(\n\t\t\t(v) => v < ele.metrics.lower_fence || v > ele.metrics.upper_fence\n\t\t)\n\t\tele.extent = d3.extent(ele.values)\n\t}\n\t/**\n\t * Overall Maximum and minimum of the input data\n\t * @type {[number, number]}\n\t */\n\tthis._data_extent = d3.extent(this._data.map((ele) => ele.extent).flat())\n\t/**\n\t * IDs for the data\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._ids = this._data.map((ele) => ele.id)\n\t/**\n\t * Title for each key component\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._key_titles = key_titles\n\t/**\n\t * Data manager (to handle keys)\n\t * @type {keyed_data}\n\t * @private\n\t */\n\tthis._kdm = new keyed_data(this._data)\n\t/**\n\t * Available key2 values\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._key2_values = this._kdm.key_size > 1\n\t\t? this._kdm.key_values(2)\n\t\t: null\n\t/**\n\t * Colors\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._colors = this._data.map((_, i) => COLOR_PALETTE[i % COLOR_PALETTE.length])\n\t/**\n\t * The label for the y axis\n\t * @type {string}\n\t * @private\n\t */\n\tthis._ylabel = options.ylabel || null\n\t/**\n\t * Padding for the y axis, to account for the label and ticks\n\t * @type {number}\n\t */\n\tthis.yaxis_padding = this._ylabel ? 62 : 35;\n\t/**\n\t * Full width of svg\n\t * @type {number}\n\t */\n\tthis._full_width = this._data.length < 150\n\t\t? 330.664701211*Math.sqrt(this._data.length) - 170.664701211 + this.yaxis_padding\n\t\t: 26*this._data.length + this.yaxis_padding\n\tif (this._kdm.key_size > 1) {  // If we have a key-2, add some margin\n\t\tthis._full_width += this._key2_values.length*d3.sum(KEY2_MARGIN)\n\t}\n\t/**\n\t * Full height of svg\n\t * @type {number}\n\t */\n\tthis._full_height = 453\n\t/**\n\t * Non-graphic components of the chart: setting, scales,\n\t * axis generators, spacing, etc.\n\t * @private\n\t * @type {{\n\t * \ttooltip_active: number,\n\t *  margin: {\n\t *      top: number,\n\t *      right: number,\n\t *      bottom: number,\n\t *      left: number\n\t *  },\n\t *  width: number,\n\t *  height: number,\n\t *  yscale: d3.scaleLinear,\n\t *  yticks_division: number,\n\t *  yaxis: d3.axisGenerator,\n\t *  violin_scale: {initial: number, value: number},\n\t *  violin_bandwidth: number,\n\t *  box_scale: {initial: number, value: number},\n\t *  xscale: d3.scaleBand,\n\t *  key2_start_x: {[key2: string]: number},\n\t *  datum_start_x: number[],\n\t *  xaxis: d3.axisGenerator,\n\t *  xticklabel_angle: number,\n\t *  n_bins: {initial: number, value: number}[],\n\t *  histogram: d3.binGenerator[],\n\t *  bins: d3.Bin[][],\n\t *  supported_curves: string[],\n\t *  violin_curve: string\n\t * }}\n\t */\n\tthis._chart = {}\n\tthis._chart.tooltip_active = null\n\tthis._chart.margin = { top: 15, right: 4, bottom: 61, left: this.yaxis_padding }\n\tthis._chart.width = this._full_width - this._chart.margin.left - this._chart.margin.right\n\tthis._chart.height = this._full_height - this._chart.margin.top - this._chart.margin.bottom\n\tthis._chart.yscale = d3.scaleLinear()\n\t\t.range([this._chart.height, 0])\n\t\t.domain(this._data_extent)\n\t\t.clamp(true)  // when input outside of domain, its output is clamped to range\n\tthis._chart.yticks_division = 2  // TODO: make this part of the input options object\n\t// TODO: make number of decimals and number of ticks part of input options object\n\tthis._chart.yaxis = d3.axisLeft(this._chart.yscale)\n\t\t.tickFormat((d, i) => i % this._chart.yticks_division ? '' : d.toFixed(1))\n\t\t.ticks(19)\n\tthis._chart.violin_scale = {initial: 0.8, value: 0.8}\n\tthis._chart.violin_bandwidth =  // Subtract key2 margins from the plot width\n\t\t(this._chart.width - this._key2_values.length*d3.sum(KEY2_MARGIN))\n\t\t/ this._data.length\n\tthis._chart.box_scale = {initial: 0.3, value: 0.3}\n\tthis._chart.xscale = d3.scaleBand()\n\t\t.domain(this._ids)\n\t\t.range([0, this._chart.width])\n\t\t// .padding(1-this._chart.violin_scale)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n\tthis._chart.key2_start_x = this._kdm.key_size > 1\n\t\t? this._compute_key2_start_x()\n\t\t: null\n\tthis._chart.datum_start_x = this._compute_datum_start_x()\n\tthis._chart.xaxis = d3.axisBottom(this._chart.xscale)\n\t\t.tickFormat((id) => this._data.find((datum) => datum.id === id).key[this._kdm.key_size - 1])\n\tthis._chart.xticklabel_angle = options.xticklabel_angle || 0\n\tthis._chart.n_bins = this._data.map((ele) => {\n\t\tconst initial_value = compute_n_bins.sturges(ele.values)\n\t\treturn {\n\t\t\tinitial: initial_value,\n\t\t\tvalue: initial_value,\n\t\t}\n\t})\n\tthis._chart.histogram = this._data.map((ele, i) => {\n\t\treturn d3.bin().domain(ele.extent)\n\t\t\t.thresholds(\n\t\t\t\tlinspace(ele.extent[0], ele.extent[1], this._chart.n_bins[i].value+1)\n\t\t\t)\n\t})\n\tthis._chart.bins = this._data.map((ele, i) => {\n\t\treturn this._chart.histogram[i](ele.values)\n\t})\n\tthis._chart.supported_curves = [\n\t\t'Basis', 'Bump Y', 'Cardinal', 'Catmull-Rom', 'Linear',\n\t\t'Monotone Y', 'Natural', 'Step'\n\t]\n\tthis._chart.violin_curve = CURVES[this._chart.supported_curves[0]]\n\t/**\n\t * Graphic components of the chart\n\t * @private\n\t * @type {{\n\t *  root_g: d3.selection,\n\t *  xaxwl_g: d3.selection\n\t *  xaxis_g: d3.selection,\n\t *  yaxwl_g: d3.selection,\n\t *  yaxis_g: d3.selection,\n\t *  key2_dividers_g: d3.selection,\n\t *  violins_g: d3.selection,\n\t *  violins: d3.selection[],\n\t *  boxes_g: d3.selection,\n\t *  outliers: d3.selection[],\n\t * \twhiskers: d3.selection[],\n\t *  tooltip_div: d3.selection\n\t * }}\n\t */\n\tthis._graphics = {\n\t\t// Root g tag (translated to account for the margins)\n\t\troot_g: null,\n\t\t// g tag for the x-axis and label\n\t\tyaxwl_g: null,\n\t\t// g tag for the x-axis\n\t\txaxis_g: null,\n\t\t// g tag for the y-axis and label\n\t\tyaxwl_g: null,\n\t\t// g tag for the y-axis\n\t\tyaxis_g: null,\n\t\t// g tag for the key2 dividers\n\t\tkey2_dividers_g: null,\n\t\t// g tag grouping all violins\n\t\tviolins_g: null,\n\t\t// individual g tag for each violin\n\t\tviolins: [],\n\t\t// g tag grouping all boxes\n\t\tboxes_g: null,\n\t\t// per group: g tag grouping all outliers of each box\n\t\toutliers: [],\n\t\t// per group: g tag grouping the whiskers of each box\n\t\twhiskers: [],\n\t\t// div tag of the tooltip\n\t\ttooltip_div: null\n\t}\n\t/**\n\t * Control panel things\n\t * TODO: if modifying a particular violin gets slow\n\t * because we have to fetch it based on key, we can\n\t * keep track of the selected one so that we only fetch\n\t * if when the selected key changes. Or something like that\n\t * @private\n\t * @type {{\n\t *  max_bins_multiplier: number,\n\t *  selected_index: number,\n\t *\tsections: {\n\t *\t\tgeneral: {\n\t *\t\t\ttitle: HTMLDivElement,\n\t *\t\t\tcontent_container: HTMLDivElement\n\t *\t\t},\n\t *\t\tspecific: {\n\t *\t\t\ttitle: HTMLDivElement,\n\t *\t\t\tcontent_container: HTMLDivElement\n\t *\t\t}\n\t *\t},\n\t * \tgrid_select: HTMLSelectElement,\n\t * \txticklabel_angle_slider: HTMLInputElement,\n\t *\tcurve_select: HTMLSelectElement,\n\t *\tshow_checkboxes: {\n\t *\t\tkey2: HTMLInputElement,\n\t *\t\tviolins: HTMLInputElement,\n\t *\t\tboxes: HTMLInputElement,\n\t *\t\twhiskers: HTMLInputElement,\n\t *\t\toutliers: HTMLInputElement\n\t *\t},\n\t *\tscale: {\n\t *\t\tviolin: {\n\t *\t\t\tslider: HTMLInputElement,\n\t *\t\t\treset: HTMLButtonElement\n\t * \t\t},\n\t *\t\tbox: {\n\t *\t\t\tslider: HTMLInputElement,\n\t *\t\t\treset: HTMLButtonElement\n\t * \t\t},\n\t *\t},\n\t *\tviolin_n_bins: {\n\t *\t\tslider: HTMLInputElement,\n\t *\t\treset: HTMLButtonElement,\n\t *\t\treset_all: HTMLButtonElement\n\t *\t}\n\t * }}\n\t */\n\tthis._controls = {\n\t\tmax_bins_multiplier: 3,\n\t\tselected_index: 0,\n\t\tsections: {\n\t\t\tgeneral: {\n\t\t\t\ttitle: null,\n\t\t\t\tcontent_container: null\n\t\t\t},\n\t\t\tspecific: {\n\t\t\t\ttitle: null,\n\t\t\t\tcontent_container: null\n\t\t\t}\n\t\t},\n\t\tgrid_select: null,\n\t\txticklabel_angle_slider: null,\n\t\tcurve_select: null,\n\t\tshow_checkboxes: {\n\t\t\tkey2: null,\n\t\t\tviolins: null,\n\t\t\tboxes: null,\n\t\t\twhiskers: null,\n\t\t\toutliers: null\n\t\t},\n\t\tscale: {\n\t\t\tviolin: {\n\t\t\t\tslider: null,\n\t\t\t\treset: null\n\t\t\t},\n\t\t\tbox: {\n\t\t\t\tslider: null,\n\t\t\t\treset: null\n\t\t\t}\n\t\t},\n\t\tviolin_n_bins: {\n\t\t\tslider: null,\n\t\t\treset: null,\n\t\t\treset_all: null\n\t\t}\n\t}\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Get the possible values of the next key component, given a partial key.\n * E.g., if there are 4 components, and you provide the two leftmost ones\n * in the partial key, possible values for the third leftmost one will be\n * given\n * @param {string[]} pkey partial key\n * @returns {string[]} possible values for the next key component\n */\nboxvio_chart_wrapper.prototype._get_next_key_component_values = function (pkey) {\n\tconst psize = pkey.length\n\tif (psize >= this._kdm.key_size) {\n\t\tthrow new Error(`Input key ${pkey} is longer than the data keys`)\n\t}\n\tconst key_tpl = pkey.concat(Array(this._kdm.key_size-psize).fill(null))\n\tconst values_wd = this._kdm.query(key_tpl).map((ele) => ele.key[psize])\n\tif (!values_wd.length) return values_wd\n\tconst values = [values_wd[0]]\n\tlet current_value = values_wd[0]\n\tfor (const value of values_wd.slice(1)) {\n\t\tif (value !== current_value) {\n\t\t\tvalues.push(value)\n\t\t\tcurrent_value = value\n\t\t}\n\t}\n\treturn values\n}\n\n/**\n * Compute starting points (in plot x-coordinates) for the different\n * key2s. There we will draw the key2 labels and separating line\n * @returns {{[key2: string]: number}} the starting position for each key2\n */\nboxvio_chart_wrapper.prototype._compute_key2_start_x = function () {\n\tconst positions = {}\n\n\tconst key_tpls = this._kdm.get_key_templates(2)\n\n\tlet current_x = 0\n\tfor (const key_tpl of key_tpls) {\n\t\tconst queried_data = this._kdm.query(key_tpl)\n\t\tpositions[key_tpl[key_tpl.length-2]] = current_x\n\t\t// Increase current_x\n\t\tcurrent_x += d3.sum(KEY2_MARGIN) + this._chart.violin_bandwidth*queried_data.length\n\t}\n\n\treturn positions\n}\n\n/**\n * Compute starting points (in plot x-coordinates) for the datum (each population)\n * @returns {number[]} the starting position for each datum\n */\nboxvio_chart_wrapper.prototype._compute_datum_start_x = function () {\n\tif (this._kdm.key_size === 1) {\n\t\treturn this._ids.map((id) => this._chart.xscale(id))\n\t}\n\t// Key size is 2 (for now. Maybe in the future, greater than 2)\n\tconst datum_start_x = []\n\t// Start here for the first key2\n\tlet current_x = KEY2_MARGIN[1]\n\tlet current_key2 = this._data[0].key[this._kdm.key_size-2]\n\tfor (const datum of this._data) {\n\t\tconst key2 = datum.key[this._kdm.key_size-2]\n\t\tif (current_key2 !== key2) {\n\t\t\tcurrent_key2 = key2\n\t\t\t// Add space for the key2 margin\n\t\t\tcurrent_x += d3.sum(KEY2_MARGIN)\n\t\t}\n\t\tdatum_start_x.push(current_x)\n\t\tcurrent_x += this._chart.violin_bandwidth\n\t}\n\treturn datum_start_x\n}\n\n/**\n * Set the scale for the violins\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_violin_scale\n */\nboxvio_chart_wrapper.prototype.set_violin_scale = function (scale) {\n\tthis._chart.violin_scale.value = scale\n\t// Remove the violin graphics, only leaving its root g tag (violins_g)\n\tthis._graphics.violins_g.selectAll('*').remove()\n\tthis._render_violins(true)\n}\n\n/**\n * Set the number of bins for a particular violin\n *\n * Updates the chart accordingly\n * @param {number} i the index of the violin\n * @param {number} n_bins number of bins\n * @name boxvio_chart_wrapper#set_n_bins\n */\nboxvio_chart_wrapper.prototype.set_n_bins = function (i, n_bins) {\n\tconst chart = this._chart\n\tconst extent = this._data[i].extent\n\tchart.n_bins[i].value = n_bins\n\tchart.histogram[i].thresholds(\n\t\tlinspace(extent[0], extent[1], n_bins+1)\n\t)\n\tchart.bins[i] = chart.histogram[i](this._data[i].values)\n\t// Delete the oath of the existing violin and redraw\n\tthis._graphics.violins[i].selectAll('*').remove()\n\tthis._render_violin(i)\n}\n\n/**\n * Set the curve for the violins\n *\n * Updates the chart accordingly\n * @param {string} curve_name name of the curve\n * @name boxvio_chart_wrapper#set_violin_curve\n */\nboxvio_chart_wrapper.prototype.set_violin_curve = function (curve_name) {\n\tthis._chart.violin_curve = CURVES[curve_name]\n\t// Remove the violin graphics, only leaving its root g tag (violins_g)\n\tthis._graphics.violins_g.selectAll('*').remove()\n\tthis._render_violins(true)\n}\n\n/**\n * Set the scale for the boxes\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_box_scale\n */\nboxvio_chart_wrapper.prototype.set_box_scale = function (scale) {\n\tthis._chart.box_scale.value = scale\n\t// Remove the box graphics, only leaving its root g tag (boxes_g)\n\tthis._graphics.boxes_g.selectAll('*').remove()\n\tthis._render_boxes(true)\n}\n\n/**\n * Render the plot\n * @function\n * @protected\n * @name boxvio_chart_wrapper#render_plot\n */\nboxvio_chart_wrapper.prototype.render_plot = function () {\n\td3_chart_wrapper.prototype.render_plot.call(this)\n\n\t// Set viewBox of svg\n\tthis.svg.attr('viewBox', `0 0 ${this._full_width} ${this._full_height}`)\n\n\t// Hide tooltip when clicking in SVG or plot_container\n\tthis.svg.on('click', (e) => {\n\t\te.stopPropagation()\n\t\tthis._hide_tooltip()\n\t})\n\tthis.plot_container.addEventListener('click', (e) => {\n\t\te.stopPropagation()\n\t\tthis._hide_tooltip()\n\t})\n\n\t// Root g tag\n\tthis._graphics.root_g = this.svg.append('g')\n\t\t.attr('transform', `translate(${this._chart.margin.left},${this._chart.margin.top})`)\n\n\tthis._render_axis()\n\tthis._render_ygrid()\n\tif (this._kdm.key_size > 1) {\n\t\tthis._render_key2_dividers()\n\t}\n\tthis._render_violins()\n\tthis._render_boxes()\n\tthis._render_tooltip()\n\n}\n\n/**\n * Render the axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_axis\n */\nboxvio_chart_wrapper.prototype._render_axis = function () {\n\tconst g = this._graphics.root_g\n\t// Render X axis\n\tthis._graphics.xaxwl_g = g.append('g')\n\t\t.attr('transform', `translate(0,${this._chart.height})`)\n\tconst xaxwl_g = this._graphics.xaxwl_g\n\tthis._graphics.xaxis_g = xaxwl_g.append('g')\n\t\t.call(this._chart.xaxis)\n\t// If we have key2s, relocate the ticks at their desired positions\n\t// to leave space for the key2 labels and separators\n\tif (this._kdm.key_size > 1) {\n\t\tconst half_bandwidth = this._chart.violin_bandwidth/2\n\t\tthis._graphics.xaxis_g.selectAll('g.tick')\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t(_, i) => `translate(${this._chart.datum_start_x[i]+half_bandwidth},0)`\n\t\t\t)\n\t}\n\t// Apply the xticklabel angle\n\tthis.apply_xticklabel_angle()\n\t// Render X axis label\n\txaxwl_g.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('y', 50)\n\t\t.attr('x', this._chart.width / 2)\n\t\t.text(this._key_titles[this._key_titles.length-1])\n\n\t// Render y axis\n\tthis._graphics.yaxwl_g = g.append('g')\n\tconst yaxwl_g = this._graphics.yaxwl_g\n\tthis._graphics.yaxis_g = yaxwl_g.append('g')\n\t\t.call(this._chart.yaxis)\n\t// Render Y axis label\n\tyaxwl_g.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('y', -this._chart.margin.left + 20)\n\t\t.attr('x', -this._chart.height / 2)\n\t\t.text(this._ylabel)\n\n}\n\n/**\n * Apply an angle to the xtick labels\n * @function\n * @name boxvio_chart_wrapper#apply_xticklabel_angle\n */\nboxvio_chart_wrapper.prototype.apply_xticklabel_angle = function () {\n\tconst angle = this._chart.xticklabel_angle\n\tconst xaxis_g = this._graphics.xaxis_g\n\tif (angle < 10) {\n\t\txaxis_g.selectAll('text')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr(\"dy\", \"0.8em\")\n\t\t\t.attr(\"dx\", \"0\")\n\t\t\t.attr('transform', `rotate(${-this._chart.xticklabel_angle})`)\n\t} else {\n\t\txaxis_g.selectAll('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr(\"dy\", `${-angle*angle*0.00006172839}em`)\n\t\t\t.attr(\"dx\", \"-0.9em\")\n\t\t\t.attr('transform',\n\t\t\t\t`rotate(${-this._chart.xticklabel_angle})`\n\t\t\t)\n\t\tif (angle < 50) {\n\t\t\txaxis_g.selectAll('text')\n\t\t\t\t.attr('dx', '-0.7em')\n\t\t}\n\t}\n}\n\n/**\n * Render the grid for the y-axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_ygrid\n */\nboxvio_chart_wrapper.prototype._render_ygrid = function () {\n\tconst ticks = this._graphics.yaxis_g.selectAll('g.tick')\n\tticks.append('line')\n\t\t.attr('x1', 0)\n\t\t.attr('y1', 0)\n\t\t.attr('x2', this._chart.width)\n\t\t.attr('y2', 0)\n\t\t.attr('stroke', (_, i) => i % 2 ? '#E0E0E0' : '#D1D1D1')\n\t\t.attr('stroke-width', (_, i) => i % 2 ? 0.5 : 0.8)\n\t\t.attr('class', (_, i) => i % 2 ? 'minor' : 'major')\n\t\t.attr('opacity', 0)  // disabled by default\n}\n\n/**\n * Apply a grid mode to the y axis\n * @param {'None' | 'Major' | 'Major + Minor'} mode the mode\n * @function\n * @name boxvio_chart_wrapper#apply_ygrid_mode\n */\nboxvio_chart_wrapper.prototype.apply_ygrid_mode = function (mode) {\n\tconst major_lines = this._graphics.yaxis_g.selectAll('g.tick line.major')\n\tconst major_opacity = major_lines.attr('opacity')\n\tconst minor_lines = this._graphics.yaxis_g.selectAll('g.tick line.minor')\n\tconst minor_opacity = minor_lines.attr('opacity')\n\tswitch (mode) {\n\t\tcase 'None':\n\t\t\tif (major_opacity == 1) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 1) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Major':\n\t\t\tif (major_opacity == 0) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 1) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'Major + Minor':\n\t\t\tif (major_opacity == 0) {\n\t\t\t\ttoggle_visibility(major_lines)\n\t\t\t}\n\t\t\tif (minor_opacity == 0) {\n\t\t\t\ttoggle_visibility(minor_lines)\n\t\t\t}\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error(`Grid mode '${mode}' is not supported?`)\n\t}\n}\n\n/**\n * Render the dividers for key2\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_key2_dividers\n */\nboxvio_chart_wrapper.prototype._render_key2_dividers = function () {\n\tthis._graphics.key2_dividers_g = this._graphics.root_g.append('g')\n\tconst dividers_g = this._graphics.key2_dividers_g\n\tconst color = 'gray'\n\n\tfor (const [index, key2] of this._key2_values.entries()) {\n\t\tconst x = this._chart.key2_start_x[key2]\n\t\tconst divider_g = dividers_g.append('g')\n\t\t\t.attr('transform', `translate(${x},0)`)\n\t\tif (index !== 0) {\n\t\t\tdivider_g.append('line')\n\t\t\t\t.attr('x1', 0)\n\t\t\t\t.attr('y1', 0)\n\t\t\t\t.attr('x2', 0)\n\t\t\t\t.attr('y2', this._chart.height)\n\t\t\t\t.attr('stroke', color)\n\t\t\t\t.attr('stroke-width', 0.9)\n\t\t\t\t.attr('stroke-dasharray', this._chart.height/35)\n\t\t}\n\t\tdivider_g.append('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr('transform', 'rotate(-90)')\n\t\t\t.attr('y', '1.3em')  // This is the horizontal axis now\n\t\t\t.attr('x', '-0.6em')  // This is the vertical axis now\n\t\t\t.attr('font-size', '0.8em')\n\t\t\t.attr('fill', color)\n\t\t\t.text(key2)\n\t}\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violins = function (is_g_ready=false) {\n\tconst chart = this._chart\n\tconst g = this._graphics.root_g\n\n\t// Render\n\tif (!is_g_ready) {\n\t\tthis._graphics.violins_g = g.append('g')\n\t}\n\tconst violins_g = this._graphics.violins_g\n\tfor (let i = 0; i < this._data.length; i++) {\n\t\tthis._graphics.violins[i] = violins_g.append('g')\n\t\t\t.classed('clickable', true)\n\t\t\t.attr('transform', `translate(${chart.datum_start_x[i]},0)`)\n\t\tthis._graphics.violins[i].on('click', (e) => {\n\t\t\te.stopPropagation()\n\t\t\tthis.set_selected_index(i)\n\t\t})\n\t\tthis._render_violin(i)\n\t}\n\n}\n\n/**\n * Render a violin\n * @function\n * @private\n * @param {boolean} i the index of the violin\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violin = function (i) {\n\tconst bins = this._chart.bins[i]\n\tconst violin_scale = this._chart.violin_scale.value\n\tconst bandwidth = this._chart.violin_bandwidth\n\tconst yscale = this._chart.yscale\n\tconst violin_curve = this._chart.violin_curve\n\n\t// Get the largest count in a bin as it will be maximum width\n\tconst max_count = d3.max(bins, (bin) => bin.length)\n\t// Make a linear scale to map bin counts to bandwidth\n\tconst x_num = d3.scaleLinear()\n\t\t.range([0, bandwidth])\n\t\t.domain([-max_count, max_count])\n\n\t// Only render violin if there is more than 1 datapoint (otherwise there are NaNs around)\n\tif (this._data[i].values.length > 1) {\n\t\tthis._graphics.violins[i]\n\t\t\t.append('path')\n\t\t\t.datum(bins)\n\t\t\t\t.style('stroke', 'gray')\n\t\t\t\t.style('stroke-width', 0.4)\n\t\t\t\t.style('fill', '#d2d2d2')\n\t\t\t\t.attr('d', d3.area()\n\t\t\t\t\t.x0((d) => x_num(-d.length*violin_scale))\n\t\t\t\t\t.x1((d) => x_num(d.length*violin_scale))\n\t\t\t\t\t.y((d) => yscale(d.x0))\n\t\t\t\t\t.curve(violin_curve)\n\t\t\t\t)\n\t}\n}\n\n/**\n * TODO: refactor\n * Render the boxes (including whiskers and outliers)\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for boxes is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_boxes\n */\nboxvio_chart_wrapper.prototype._render_boxes = function (is_g_ready=false) {\n\n\tconst chart = this._chart\n\tconst g = this._graphics.root_g\n\n\t// Draw\n\tif (!is_g_ready) {\n\t\tthis._graphics.boxes_g = g.append('g')\n\t}\n\tconst boxes = this._graphics.boxes_g\n\tconst bandwidth = chart.violin_bandwidth\n\tconst box_width = this._chart.box_scale.value * bandwidth\n\n\tconst whiskers_lw = 2\n\tconst median_lw = 3\n\n\t// Iterate over the groups\n\tfor (const [i, ele] of this._data.entries()) {\n\n\t\tconst metrics = ele.metrics\n\t\tconst color = this._colors[i]\n\n\t\tconst group_box = boxes.append('g')\n\t\t\t.classed('clickable', true)\n\t\t\t.attr('transform', `translate(${chart.datum_start_x[i] + bandwidth / 2},0)`)\n\t\tgroup_box.on('click', (e) => {\n\t\t\te.stopPropagation()\n\t\t\tthis.set_selected_index(i)\n\t\t})\n\t\t// Draw outliers\n\t\tthis._graphics.outliers[i] = group_box.append('g')\n\t\tconst outliers = this._graphics.outliers[i]\n\t\tfor (const outlier of ele.outliers) {\n\t\t\toutliers.append('circle')\n\t\t\t\t.attr('cx', 0)\n\t\t\t\t.attr('cy', chart.yscale(outlier))\n\t\t\t\t.attr('r', 4)\n\t\t\t\t.style('fill', color)\n\t\t\t\t.style('opacity', 0.7)\n\t\t}\n\n\t\t// Draw whiskers\n\t\tthis._graphics.whiskers[i] = group_box.append('g')\n\t\tconst whiskers = this._graphics.whiskers[i]\n\t\twhiskers.append('line')  // vertical line\n\t\t\t.attr('x1', 0)\n\t\t\t.attr('y1', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('x2', 0)\n\t\t\t.attr('y2', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\t\twhiskers.append('line') // lower horizontal\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.lower_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\t\twhiskers.append('line') // upper horizontal\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.upper_fence))\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', whiskers_lw)\n\n\t\t// Draw IQR box\n\t\tconst iqr = group_box.append('g')\n\t\t// Only draw rectangle if there is more than 1 datapoint (otherwise NaNs appear)\n\t\tif (ele.values.length > 1) {\n\t\t\tiqr.append('rect')  // iqr rect\n\t\t\t.attr('x', -box_width / 2)\n\t\t\t.attr('y', chart.yscale(metrics.quartile3))\n\t\t\t.attr('width', box_width)\n\t\t\t.attr('height', chart.yscale(metrics.quartile1) - chart.yscale(metrics.quartile3))\n\t\t\t.attr('fill', color)\n\t\t}\n\t\tiqr.append('line')  // median line\n\t\t\t.attr('x1', -box_width / 2)\n\t\t\t.attr('y1', chart.yscale(metrics.median))\n\t\t\t.attr('x2', box_width / 2)\n\t\t\t.attr('y2', chart.yscale(metrics.median))\n\t\t\t.attr('stroke', 'black')\n\t\t\t.attr('stroke-width', median_lw)\n\t\tconst circle = iqr.append('circle')  // median dot\n\t\t\t.attr('cx', 0)\n\t\t\t.attr('cy', chart.yscale(metrics.median))\n\t\t\t.attr('r', 4.5)\n\t\t\t.style('fill', 'white')\n\t\t\t.attr('stroke', 'black')\n\t\t\t.attr('stroke-width', 2)\n\t\t\t.classed('clickable', true)\n\t\t// Circle events for tooltip\n\t\tthis.tooltip_active = null;\n\t\tcircle.on('click', (e) => {\n\t\t\te.stopPropagation()\n\t\t\tthis.set_selected_index(i)\n\n\t\t\t// already displayed. (Hide) -> do nothing\n\t\t\t\tif (this.tooltip_active == i) {\n\t\t\t\t\t// this._hide_tooltip()\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t// hover set and fix\n\t\t\t\tthis.tooltip_hover(i)\n\t\t\t\tthis._graphics.tooltip_div.style('display', 'flex')\n\t\t\t\tthis.tooltip_active = i\n\n\t\t\t// old\n\t\t\t// this._graphics.tooltip_div.style('display', null)\n\t\t\t// this.tooltip_hover(i)\n\t\t})\n\t\t// .on('mouseout', () => {\n\t\t// \tthis._graphics.tooltip_div.style('display', 'none')\n\t\t// })\n\t}\n\n}\n\n/**\n * Set the selected index by the user\n * @function\n * @param {number} i the index\n * @name boxvio_chart_wrapper#set_selected_index\n */\nboxvio_chart_wrapper.prototype.set_selected_index = function (i) {\n\tif (this._controls.selected_index === i) {\n\t\treturn\n\t}\n\tthis._controls.selected_index = i\n\tthis._set_specific_controls_section_title(i)\n\t// Tell specific controls that the selection has changed\n\tthis._controls.violin_n_bins.slider.dispatchEvent(GROUP_CHANGE_EVENT)\n}\n\n/**\n * Set the title for the specific section of the controls\n * @function\n * @private\n * @param {number} selected_index the selected group index\n * @name boxvio_chart_wrapper#_set_specific_controls_section_title\n */\nboxvio_chart_wrapper.prototype._set_specific_controls_section_title = function (selected_index) {\n\tconst datum = this._data[selected_index]\n\tthis._controls.sections.specific.title.innerText =\n\t\t`${tstring.settings_for || 'Settings for'} ${datum.key.join(', ')} (${datum.id})`\n}\n\n/**\n * Hide the tooltip\n * @function\n * @private\n * @name boxvio_chart_wrapper#_hide_tooltip\n */\nboxvio_chart_wrapper.prototype._hide_tooltip = function () {\n\tthis._graphics.tooltip_div.style('display', 'none')\n\tthis.tooltip_active = null\n}\n\n/**\n * Add the tooltip to the DOM\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_tooltip\n */\nboxvio_chart_wrapper.prototype._render_tooltip = function () {\n\tconst tooltip_element = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_div`,\n\t\tclass_name\t\t: 'o-red tooltip_div'\n\t})\n\tinsert_after(tooltip_element, this.plot_container)\n\tthis._graphics.tooltip_div = d3.select(tooltip_element)\n\t// Hide tooltip in the beginning\n\tthis._hide_tooltip()\n\tconst tooltip_metrics = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metrics`,\n\t\tclass_name\t\t: 'tooltip_metrics_div',\n\t\tparent\t\t\t: tooltip_element\n\t})\n\tconst tooltip_metric_names = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metric_names_div`,\n\t\tclass_name\t\t: 'tooltip_metric_names_div',\n\t\tparent\t\t\t: tooltip_metrics\n\t})\n\tconst tooltip_metric_values = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tid\t\t\t\t: `${this.id_string()}_tooltip_metric_values_div`,\n\t\tclass_name\t\t: 'tooltip_metric_values_div',\n\t\tparent\t\t\t: tooltip_metrics\n\t})\n}\n\n/**\n * Set the tooltip to visible when we hover over\n * @param {number} i index of data\n * @function\n * @name boxvio_chart_wrapper#tooltip_hover\n */\nboxvio_chart_wrapper.prototype.tooltip_hover = function (i) {\n\n\tconst self = this\n\n\tconst decimals = 2\n\tconst key\t\t\t= self._data[i].key\n\tconst values\t\t= self._data[i].values\n\tconst metrics\t\t= self._data[i].metrics\n\t// const tooltip_text = `<b>${key.join(', ')}</b>`\n\n\tconst metric_names = `${tstring.datapoints || 'Datapoints'}`\n\t\t+ `<br>${tstring.mean || 'Mean'}`\n\t\t+ `<br>${tstring.max || 'Maximum'}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${tstring.quantile}-${self._whiskers_quantiles[1]}`\n\t\t\t: '')\n\t\t+ `<br>${tstring.quantile || 'Quantile'}-75`\n\t\t+ `<br>${tstring.median || 'Median'}`\n\t\t+ `<br>${tstring.quantile || 'Quantile'}-25`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${tstring.quantile}-${self._whiskers_quantiles[0]}`\n\t\t\t: '')\n\t\t+ `<br>${tstring.min || 'Minimum'}`\n\tconst metric_values = `${values.length}`\n\t\t+ `<br>${metrics.mean.toFixed(decimals)}`\n\t\t+ `<br>${metrics.max.toFixed(decimals)}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${metrics.upper_fence.toFixed(decimals)}`\n\t\t\t: '')\n\t\t+ `<br>${metrics.quartile3.toFixed(decimals)}`\n\t\t+ `<br>${metrics.median.toFixed(decimals)}`\n\t\t+ `<br>${metrics.quartile1.toFixed(decimals)}`\n\t\t+ (self._whiskers_quantiles\n\t\t\t? `<br>${metrics.lower_fence.toFixed(decimals)}`\n\t\t\t: '')\n\t\t+ `<br>${metrics.min.toFixed(decimals)}`\n\tself._graphics.tooltip_div.select('div.tooltip_metric_names_div')\n\t\t.html(metric_names)\n\tself._graphics.tooltip_div.select('div.tooltip_metric_values_div')\n\t\t.html(metric_values)\n\t\n\t// Call the tooltip callback\n\tif (self._tooltip_callback) {\n\t\tconst options = {}\n\t\tfor (const attr_name of this._tooltip_callback_options_attributes) {\n\t\t\toptions[attr_name] = this._data[i][attr_name]\n\t\t}\n\t\tself._tooltip_callback(options)\n\t\t\t.then((ele) => {\n\t\t\t\tconst tooltip_element = self._graphics.tooltip_div.node()\n\t\t\t\tele.id = `${self.id_string()}_tooltip_callback_div`\n\t\t\t\tele.classList.add('tooltip_callback_div')\n\t\t\t\tconst last_child = tooltip_element.lastChild\n\t\t\t\t// If the last child is already a callback, delete it!\n\t\t\t\tif (last_child.classList.contains('tooltip_callback_div')) {\n\t\t\t\t\tlast_child.remove()\n\t\t\t\t}\n\t\t\t\ttooltip_element.appendChild(ele)\n\t\t\t})\n\t}\n}\n\n/**\n * Render the control panel\n * @function\n * @protected\n * @name boxvio_chart_wrapper#render_control_panel\n */\nboxvio_chart_wrapper.prototype.render_control_panel = function () {\n\td3_chart_wrapper.prototype.render_control_panel.call(this)\n\n\t// GENRAL SETTINGS\n\tthis._controls.sections.general.title = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\ttext_content\t: tstring.general_settings || 'General settings',\n\t\tclass_name\t\t: 'control_panel_toggle control_panel_toggle_section',\n\t\tparent\t\t\t: this.controls_content_container\n\t})\n\tthis._controls.sections.general.content_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this.controls_content_container\n\t})\n\t// TODO: refactor the first three (together)\n\tconst upper_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_item controls_block',\n\t\tparent\t\t\t: this._controls.sections.general.content_container\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// }\n\t})\n\tthis._render_grid_select(upper_container)\n\tthis._render_xticklabel_angle_slider(upper_container)\n\tthis._render_violin_curve_selector(upper_container)\n\tthis._render_checkboxes()\n\tthis._render_scale_sliders()\n\n\t// PARTICULAR SETTINGS\n\tthis._controls.sections.specific.title = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_toggle control_panel_toggle_section',\n\t\tparent\t\t\t: this.controls_content_container\n\t})\n\tthis._set_specific_controls_section_title(this._controls.selected_index)\n\tthis._controls.sections.specific.content_container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this.controls_content_container\n\t})\n\tthis._render_n_bins_control()\n\n\t// Define the control panel logic\n\tthis._control_panel_logic()\n}\n\n/**\n * Render the selector for grid mode\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_grid_select\n */\nboxvio_chart_wrapper.prototype._render_grid_select = function (container) {\n\tconst select_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst grid_select_id = `${this.id_string()}_grid_select`\n\tconst grid_select_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.grid || 'Grid',\n\t\tparent: select_container,\n\t\tstyle: {'margin-block': 'auto'},\n\t})\n\tgrid_select_label.setAttribute('for', grid_select_id)\n\tconst grid_select = common.create_dom_element({\n\t\telement_type: 'select',\n\t\tid: grid_select_id,\n\t\tparent: select_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tthis._controls.grid_select = grid_select\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'None',\n\t\ttext_content: tstring.none_f || 'None',\n\t\tparent: grid_select,\n\t})\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'Major',\n\t\ttext_content: tstring.major || 'Major',\n\t\tparent: grid_select,\n\t})\n\tcommon.create_dom_element({\n\t\telement_type: 'option',\n\t\tvalue: 'Major + Minor',\n\t\ttext_content: tstring.major_minor || 'Major + Minor',\n\t\tparent: grid_select,\n\t})\n}\n\n/**\n * Render the slider for the xticklabel angle\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_xticklabel_angle_slider\n */\nboxvio_chart_wrapper.prototype._render_xticklabel_angle_slider = function (container) {\n\tconst slider_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst xticklabel_angle_slider_id = `${this.id_string()}_xticklabel_angle_slider`\n\tconst xticklabel_angle_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.xticklabel_angle || \"X-Tick label angle\",\n\t\tparent: slider_container,\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\txticklabel_angle_slider_label.setAttribute('for', xticklabel_angle_slider_id)\n\t/** @type {Element} */\n\tconst xticklabel_angle_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: xticklabel_angle_slider_id,\n\t\tparent: slider_container,\n\t})\n\tthis._controls.xticklabel_angle_slider = xticklabel_angle_slider\n\txticklabel_angle_slider.setAttribute('min', 0)\n\txticklabel_angle_slider.setAttribute('max', 90)\n\txticklabel_angle_slider.value = this._chart.xticklabel_angle\n}\n\n/**\n * Render the selector for the violin curve\n * @function\n * @private\n * @param {Element} container the container element\n * @name boxvio_chart_wrapper#_render_violin_curve_selector\n */\nboxvio_chart_wrapper.prototype._render_violin_curve_selector = function (container) {\n\tconst select_container = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst curve_select_id = `${this.id_string()}_curve_select`\n\tconst curve_select_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violin_curve || 'Violin curve',\n\t\tparent: select_container,\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\tcurve_select_label.setAttribute('for', curve_select_id)\n\tconst curve_select = common.create_dom_element({\n\t\telement_type: 'select',\n\t\tid: curve_select_id,\n\t\tparent: select_container,\n\t\t// TODO: add ARIA attributes?\n\t})\n\tthis._controls.curve_select = curve_select\n\tfor (const curve_name of this._chart.supported_curves) {\n\t\tcommon.create_dom_element({\n\t\t\telement_type: 'option',\n\t\t\tvalue: curve_name,\n\t\t\ttext_content: curve_name,\n\t\t\tparent: curve_select,\n\t\t})\n\t}\n}\n\n/**\n * Render the checkboxes of the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_checkboxes\n */\nboxvio_chart_wrapper.prototype._render_checkboxes = function () {\n\t// Container div\n\tconst container_div = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tclass_name\t\t: 'control_panel_item checkboxes',\n\t\tparent\t\t\t: this._controls.sections.general.content_container\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// \t'margin-top': DEFAULT_MARGIN,\n\t\t// },\n\t})\n\n\t// Show text\n\tconst show_text_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\ttext_content: `${tstring.show || \"Show\"}:`,\n\t\tparent: container_div,\n\t})\n\n\t// Show key 2\n\tconst show_key2_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_key2_checkbox_id = `${this.id_string()}_show_key2_checkbox`\n\t/** @type {Element} */\n\tconst show_key2_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_key2_checkbox_id,\n\t\tparent: show_key2_div,\n\t})\n\tshow_key2_checkbox.checked = true\n\tthis._controls.show_checkboxes.key2 = show_key2_checkbox\n\t/** @type {Element} */\n\tconst show_key2_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: this._key_titles[this._kdm.key_size-2],\n\t\tparent: show_key2_div,\n\t})\n\tshow_key2_label.setAttribute('for', show_key2_checkbox_id)\n\n\t// Show violins\n\tconst show_violins_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_violins_checkbox_id = `${this.id_string()}_show_violins_checkbox`\n\t/** @type {Element} */\n\tconst show_violins_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_violins_checkbox_id,\n\t\tparent: show_violins_div,\n\t})\n\tshow_violins_checkbox.checked = true\n\tthis._controls.show_checkboxes.violins = show_violins_checkbox\n\t/** @type {Element} */\n\tconst show_violins_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violins || 'Violins',\n\t\tparent: show_violins_div,\n\t})\n\tshow_violins_label.setAttribute('for', show_violins_checkbox_id)\n\n\t// Show boxes\n\tconst show_boxes_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_boxes_checkbox_id = `${this.id_string()}_show_boxes_checkbox`\n\t/** @type {Element} */\n\tconst show_boxes_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_boxes_checkbox_id,\n\t\tparent: show_boxes_div,\n\t})\n\tshow_boxes_checkbox.checked = true\n\tthis._controls.show_checkboxes.boxes = show_boxes_checkbox\n\t/** @type {Element} */\n\tconst show_boxes_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.boxes || 'Boxes',\n\t\tparent: show_boxes_div,\n\t})\n\tshow_boxes_label.setAttribute('for', show_boxes_checkbox_id)\n\n\t// Show whiskers\n\tconst show_whiskers_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_whiskers_checkbox_id = `${this.id_string()}_show_whiskers_checkbox`\n\t/** @type {Element} */\n\tconst show_whiskers_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_whiskers_checkbox_id,\n\t\tparent: show_whiskers_div,\n\t})\n\tshow_whiskers_checkbox.checked = true\n\tthis._controls.show_checkboxes.whiskers = show_whiskers_checkbox\n\t/** @type {Element} */\n\tconst show_whiskers_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.whiskers || 'Whiskers',\n\t\tparent: show_whiskers_div,\n\t})\n\tshow_whiskers_label.setAttribute('for', show_whiskers_checkbox_id)\n\n\t// Show outliers\n\tconst show_outliers_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t})\n\tconst show_outliers_checkbox_id = `${this.id_string()}_show_outliers_checkbox`\n\t/** @type {Element} */\n\tconst show_outliers_checkbox = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'checkbox',\n\t\tid: show_outliers_checkbox_id,\n\t\tparent: show_outliers_div,\n\t})\n\tshow_outliers_checkbox.checked = true\n\tthis._controls.show_checkboxes.outliers = show_outliers_checkbox\n\t/** @type {Element} */\n\tconst show_outliers_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.outliers || 'Outliers',\n\t\tparent: show_outliers_div,\n\t})\n\tshow_outliers_label.setAttribute('for', show_outliers_checkbox_id)\n}\n\n/**\n * Render the sliders of the control panel that\n * control the scale of violins and boxes\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_scale_sliders\n */\nboxvio_chart_wrapper.prototype._render_scale_sliders = function () {\n\t// Container div\n\tconst container_div = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this._controls.sections.general.content_container,\n\t\tclass_name\t\t: 'control_panel_item scale_sliders',\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'direction': 'flex-row',\n\t\t// \t'justify-content': 'space-between',\n\t\t// \t'align-items': 'center',\n\t\t// },\n\t})\n\n\t// Violin scale\n\tconst violin_container_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst violin_scale_slider_id = `${this.id_string()}_violin_scale_slider`\n\tconst violin_scale_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.violin_width || 'Violin width',\n\t\tparent: violin_container_div,\n\t\t// style: {\n\t\t// \t'margin-block': 'auto',\n\t\t// },\n\t})\n\tviolin_scale_slider_label.setAttribute('for', violin_scale_slider_id)\n\t/** @type {Element} */\n\tconst violin_scale_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: violin_scale_slider_id,\n\t\tparent: violin_container_div,\n\t})\n\tviolin_scale_slider.setAttribute('min', 0)\n\tviolin_scale_slider.setAttribute('max', 1)\n\tviolin_scale_slider.setAttribute('step', 0.05)\n\tviolin_scale_slider.value = this._chart.violin_scale.initial\n\tthis._controls.scale.violin.slider = violin_scale_slider\n\tthis._controls.scale.violin.reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: violin_container_div\n\t})\n\n\t// Box scale\n\tconst box_container_div = common.create_dom_element({\n\t\telement_type: 'div',\n\t\tparent: container_div,\n\t\t// style: {\n\t\t// \t'display': 'flex',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// },\n\t})\n\tconst box_scale_slider_id = `${this.id_string()}_box_scale_slider`\n\tconst box_scale_slider_label = common.create_dom_element({\n\t\telement_type: 'label',\n\t\ttext_content: tstring.box_width || 'Box width',\n\t\tparent: box_container_div,\n\t\t// style: {\n\t\t// \t'margin-block': 'auto',\n\t\t// },\n\t})\n\tbox_scale_slider_label.setAttribute('for', box_scale_slider_id)\n\t/** @type {Element} */\n\tconst box_scale_slider = common.create_dom_element({\n\t\telement_type: 'input',\n\t\ttype: 'range',\n\t\tid: box_scale_slider_id,\n\t\tparent: box_container_div,\n\t})\n\tbox_scale_slider.setAttribute('min', 0)\n\tbox_scale_slider.setAttribute('max', 1)\n\tbox_scale_slider.setAttribute('step', 0.05)\n\tbox_scale_slider.value = this._chart.box_scale.initial\n\tthis._controls.scale.box.slider = box_scale_slider\n\tthis._controls.scale.box.reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: box_container_div,\n\t})\n}\n\n/**\n * Render the control elements to change the number of bins\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_n_bins_control\n */\nboxvio_chart_wrapper.prototype._render_n_bins_control = function () {\n\tconst container = common.create_dom_element({\n\t\telement_type\t: 'div',\n\t\tparent\t\t\t: this._controls.sections.specific.content_container,\n\t\tclass_name\t\t: 'control_panel_item n_bins_control'\n\t\t// style\t\t\t: {\n\t\t// \t'display': 'flex',\n\t\t// \t'align-items': 'center',\n\t\t// \t'gap': DEFAULT_FLEX_GAP,\n\t\t// \t'margin-top': DEFAULT_MARGIN,\n\t\t// },\n\t})\n\t// Slider for n bins\n\tconst violin_n_bins_slider_id = `${this.id_string()}_violin_n_bins_slider`\n\tconst violin_n_bins_label = common.create_dom_element({\n\t\telement_type\t: 'label',\n\t\ttext_content\t: tstring.violin_resolution || 'Violin resolution',\n\t\tparent\t\t\t: container\n\t\t// style: {'margin-block': 'auto'},\n\t})\n\tviolin_n_bins_label.setAttribute('for', violin_n_bins_slider_id)\n\tconst violin_n_bins_slider = common.create_dom_element({\n\t\telement_type\t: 'input',\n\t\ttype\t\t\t: 'range',\n\t\tid\t\t\t\t: violin_n_bins_slider_id,\n\t\tparent\t\t\t: container\n\t})\n\tthis._controls.violin_n_bins.slider = violin_n_bins_slider\n\tviolin_n_bins_slider.setAttribute('min', 2)\n\tviolin_n_bins_slider.setAttribute(\n\t\t'max',\n\t\tthis._controls.max_bins_multiplier\n\t\t\t* this._chart.n_bins[this._controls.selected_index].initial\n\t)\n\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].value\n\n\t// Reset n bins\n\tthis._controls.violin_n_bins.reset = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset || 'Reset',\n\t\tparent\t\t\t: container\n\t})\n\n\t// Reset all n bins\n\tthis._controls.violin_n_bins.reset_all = common.create_dom_element({\n\t\telement_type\t: 'button',\n\t\ttype\t\t\t: 'button',\n\t\tclass_name\t\t: 'small',\n\t\ttext_content\t: tstring.reset_all_violins || 'Reset all violins',\n\t\tparent\t\t\t: container\n\t})\n}\n\n/**\n * Defines control panel logic (change events and such)\n * @function\n * @private\n * @name boxvio_chart_wrapper#_control_panel_logic\n */\nboxvio_chart_wrapper.prototype._control_panel_logic = function () {\n\t// General section toggle\n\tthis._controls.sections.general.title.addEventListener('click', () => {\n\t\tthis._controls.sections.general.title.classList.toggle('opened')\n\t\tthis._controls.sections.general.content_container.classList.toggle('hide')\n\t})\n\n\t// Grid mode select\n\tthis._controls.grid_select.addEventListener('change', () => {\n\t\tconst mode = this._controls.grid_select.value\n\t\tthis.apply_ygrid_mode(mode)\n\t})\n\t// X-tick label angle slider\n\tthis._controls.xticklabel_angle_slider.addEventListener('input', () => {\n\t\tthis._chart.xticklabel_angle = Number(this._controls.xticklabel_angle_slider.value)\n\t\tthis.apply_xticklabel_angle()\n\t})\n\t// Violin curve selector\n\tthis._controls.curve_select.addEventListener('change', () => {\n\t\tthis.set_violin_curve(this._controls.curve_select.value)\n\t})\n\t// Show checkboxes\n\tthis._controls.show_checkboxes.key2.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.key2_dividers_g)\n\t})\n\tthis._controls.show_checkboxes.violins.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.violins_g)\n\t})\n\tthis._controls.show_checkboxes.boxes.addEventListener('change', () => {\n\t\ttoggle_visibility(this._graphics.boxes_g)\n\t\t// (DISABLED) Disable the checkbox for outliers (defined below)\n\t\t// show_outliers_checkbox.disabled = !show_boxes_checkbox.checked\n\t})\n\tthis._controls.show_checkboxes.whiskers.addEventListener('change', () => {\n\t\tfor (const whisker of this._graphics.whiskers) {\n\t\t\ttoggle_visibility(whisker)\n\t\t}\n\t\t// (DISABLED) Disable the checkbox for outliers (defined below)\n\t\t// show_outliers_checkbox.disabled = !show_boxes_checkbox.checked\n\t})\n\tthis._controls.show_checkboxes.outliers.addEventListener('change', () => {\n\t\tfor (const group of this._graphics.outliers) {\n\t\t\ttoggle_visibility(group)\n\t\t}\n\t})\n\t// Scale controls\n\tthis._controls.scale.violin.slider.addEventListener('input', () => {\n\t\tthis.set_violin_scale(Number(this._controls.scale.violin.slider.value))\n\t})\n\tthis._controls.scale.violin.reset.addEventListener('click', () => {\n\t\tthis._controls.scale.violin.slider.value = this._chart.violin_scale.initial\n\t\tthis.set_violin_scale(Number(this._controls.scale.violin.slider.value))\n\t})\n\tthis._controls.scale.box.slider.addEventListener('input', () => {\n\t\tthis.set_box_scale(Number(this._controls.scale.box.slider.value))\n\t})\n\tthis._controls.scale.box.reset.addEventListener('click', () => {\n\t\tthis._controls.scale.box.slider.value = this._chart.box_scale.initial\n\t\tthis.set_box_scale(Number(this._controls.scale.box.slider.value))\n\t})\n\n\t// Particular section toggle\n\tthis._controls.sections.specific.title.addEventListener('click', () => {\n\t\tthis._controls.sections.specific.title.classList.toggle('opened')\n\t\tthis._controls.sections.specific.content_container.classList.toggle('hide')\n\t})\n\t// Violin n bins controls\n\tconst violin_n_bins_slider = this._controls.violin_n_bins.slider\n\tviolin_n_bins_slider.addEventListener('input', () => {\n\t\tthis.set_n_bins(this._controls.selected_index, Number(violin_n_bins_slider.value))\n\t})\n\tviolin_n_bins_slider.addEventListener(GROUP_CHANGE_EVENT_NAME, () => {\n\t\tviolin_n_bins_slider.setAttribute(\n\t\t\t'max',\n\t\t\tthis._controls.max_bins_multiplier\n\t\t\t\t* this._chart.n_bins[this._controls.selected_index].initial\n\t\t)\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].value\n\t})\n\tthis._controls.violin_n_bins.reset.addEventListener('click', () => {\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].initial\n\t\tthis.set_n_bins(this._controls.selected_index, Number(violin_n_bins_slider.value))\n\t})\n\tthis._controls.violin_n_bins.reset_all.addEventListener('click', () => {\n\t\t// Update the value of the slider\n\t\tviolin_n_bins_slider.value = this._chart.n_bins[this._controls.selected_index].initial\n\t\tfor (const [i, n_bins] of this._chart.n_bins.entries()) {\n\t\t\tthis.set_n_bins(i, n_bins.initial)\n\t\t}\n\t})\n}\n\n// HELPER FUNCTIONS\n\n/**\n * Splitter string (EMERITUS)\n * @type {string}\n */\nconst SPLITTER = '_^PoT3sRanaCantora_'\n","\"use strict\";\n\nimport { d3_chart_wrapper } from \"../d3-chart-wrapper\";\nimport { keyed_data } from \"../../keyed-data\";\n\n\n/**\n * Clock diameter\n * @type {number}\n */\nconst CLOCK_DIAMETER = 100\n/**\n * Clock radius\n * @type {number}\n */\nconst CLOCK_RADIUS = CLOCK_DIAMETER / 2\n/**\n * Padding among clocks\n * @type {number}\n */\nconst CLOCK_MARGIN = 6\n/**\n * Margin for the key2 label\n * @type {[number, number]}\n */\nconst KEY2_MARGIN = [6, 15]\n/**\n * Height reserved for the key1 and id label\n * @type {number}\n */\nconst LABEL_HEIGHT = 14\n\n/**\n * Clock chart\n *\n * Draws a clock (see minimal clock chart) for every provided group. Utilizes keyed data to draw labels\n * and separators.\n * \n * @param {Element} div_wrapper the div to work in\n * @param {{\n * \tid: string,\n * \tkey: string[],\n * \tvalues: number[]\n * }[]} data the input data \n * @param {Object} options configuration options\n * @param {boolean} options.display_download whether to display the download panel (default `false`)\n * @param {boolean} options.display_control_panel whether to display the control panel (default `false`)\n * @param {boolean} options.overflow whether going beyond the width of the plot container is allowed (default `false`).\n * \t\tif `false`, the svg will be stretched to fill the full width of its parent element\n * @param {string} options.outer_height outer height of the plot, will be the height applied to the SVG (default `500px`)\n * \t\toverflow must be enabled for outer_height to work\n * @param {boolean} options.sort whether to sort the clocks (default `false`). When there is more than one key-2, sorting is mandatory.\n * @class\n * @extends d3_chart_wrapper\n */\nexport function clock_chart_wrapper(div_wrapper, data, options) {\n\td3_chart_wrapper.call(this, div_wrapper, options)\n\n\tconst sort = options.sort || data[0].key.length > 1 || false\n\t/**\n\t * Input data\n\t * @type {{\n \t * \tid: string,\n\t * \tkey: string[],\n\t * \tvalues: number[]\n\t * }[]}\n\t * @private\n\t */\n\tthis._data = sort\n\t\t\t\t ? data.sort((a, b) => a.key.join().localeCompare(b.key.join()))\n\t\t\t\t : data\n\t/**\n\t * Data manager (to handle keys)\n\t * @type {keyed_data}\n\t * @private\n\t */\n\tthis._kdm = new keyed_data(this._data)\n\t/**\n\t * Available key2 values\n\t * @type {string[]}\n\t * @private\n\t */\n\tthis._key2_values = this._kdm.key_size > 1\n\t\t? this._kdm.key_values(2)\n\t\t: null\n\t/**\n\t * Full width of svg\n\t * @private\n\t * @type {number}\n\t */\n\tthis._width = this._compute_width()\n\t/**\n\t * Full height of the svg\n\t * @private\n\t * @type {number}\n\t */\n\tthis._height = CLOCK_DIAMETER + LABEL_HEIGHT\n\t/**\n\t * Non-graphic components of the chart\n\t * @private\n\t * @type {{\n\t * \tkey2_start_x: {[key2: string]: number},\n\t * \tdatum_start_x: number[]\n\t * }}\n\t */\n\tthis._chart = {}\n\tthis._chart.key2_start_x = this._kdm.key_size > 1\n\t\t? this._compute_key2_start_x()\n\t\t: null\n\tthis._chart.datum_start_x = this._compute_datum_start_x()\n\t/**\n\t * Graphic components of the chart\n\t * @private\n\t * @type {{\n\t *  root_g: d3.selection,\n\t * \tkey2_dividers_g: d3.selection,\n\t * \tdatum_g: d3.selection\n\t * }}\n\t */\n   \tthis._graphics = {\n\t\t// Root g tag (translated to the center of the svg)\n\t\troot_g: null,\n\t\t// g tag for the key2 dividers\n\t\tkey2_dividers_g: null,\n\t\t// g tag for all datum (clock + label)\n\t\tdatum_g: null\n\t}\n}\n// Set prototype chain\nObject.setPrototypeOf(clock_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Compute the full width of the SVG\n * @private\n * @returns {number} the full width of the SVG\n */\nclock_chart_wrapper.prototype._compute_width = function () {\n\tconst n = this._data.length\n\tif (this._kdm.key_size == 1) {\n\t\treturn CLOCK_DIAMETER * n + CLOCK_MARGIN * (n - 1)\n\t}\n\t// full width when there are Rank 2 key components\n\tlet width = this._key2_values.length * d3.sum(KEY2_MARGIN) - KEY2_MARGIN[0]\n\tfor (const key2_value of this._key2_values) {\n\t\tconst n_groups = this._kdm.get_next_key_component_values([key2_value]).length\n\t\twidth += n_groups * CLOCK_DIAMETER + (n_groups - 1) * CLOCK_MARGIN\n\t}\n\treturn width\n}\n\n/**\n * Compute starting points (in plot x-coordinates) for the different\n * key2s. There we will draw the key2 labels and separating line\n * @returns {{[key2: string]: number}} the starting position for each key2\n */\nclock_chart_wrapper.prototype._compute_key2_start_x = function () {\n\tconst positions = {}\n\n\tconst key_tpls = this._kdm.get_key_templates(2)\n\n\tlet current_x = 0\n\tfor (const key_tpl of key_tpls) {\n\t\tconst queried_data = this._kdm.query(key_tpl)\n\t\tpositions[key_tpl[key_tpl.length-2]] = current_x\n\t\t// Increase current_x\n\t\tcurrent_x += d3.sum(KEY2_MARGIN) + queried_data.length * CLOCK_DIAMETER\n\t\t\t+ (queried_data.length - 1) * CLOCK_MARGIN\n\t}\n\n\treturn positions\n}\n\n/**\n * Compute starting points (in svg x-coordinates) for the datum (each population)\n * @returns {number[]} the starting position for each datum\n */\nclock_chart_wrapper.prototype._compute_datum_start_x = function () {\n\tif (this._kdm.key_size === 1) {\n\t\treturn Array(this._data.length).map((_, i) => i*(CLOCK_MARGIN+CLOCK_DIAMETER))\n\t}\n\t// Key size is 2 (for now. Maybe in the future, greater than 2)\n\tconst datum_start_x = []\n\t// Start here for the first key2\n\tlet current_x = KEY2_MARGIN[1]\n\tlet current_key2 = this._data[0].key[this._kdm.key_size-2]\n\tfor (const datum of this._data) {\n\t\tconst key2 = datum.key[this._kdm.key_size-2]\n\t\tif (current_key2 !== key2) {\n\t\t\tcurrent_key2 = key2\n\t\t\t// Add space for the key2 margin, but remove extra clock margin\n\t\t\tcurrent_x += d3.sum(KEY2_MARGIN) - CLOCK_MARGIN\n\t\t}\n\t\tdatum_start_x.push(current_x)\n\t\tcurrent_x += CLOCK_DIAMETER + CLOCK_MARGIN\n\t}\n\treturn datum_start_x\n}\n\n/**\n * Render the plot\n * @function\n * @protected\n * @name clock_chart_wrapper#render_plot\n */\nclock_chart_wrapper.prototype.render_plot = function () {\n\td3_chart_wrapper.prototype.render_plot.call(this)\n\n\t// Set viewbox of svg\n\tthis.svg.attr('viewBox', `0 0 ${this._width} ${this._height}`)\n\n\t// Root g tag\n\tthis._graphics.root_g = this.svg.append('g')\n\n\t// Render the graphics!\n\tif (this._kdm.key_size > 1) {\n\t\tthis._render_key2_dividers()\n\t}\n\tthis._graphics.datum_g = this._graphics.root_g.append('g')\n\tfor (let i = 0; i < this._data.length; i++) {\n\t\tthis._render_datum(i)\n\t}\n\n}\n\n/**\n * Render the dividers for key2\n * @function\n * @private\n * @name clock_chart_wrapper#_render_key2_dividers\n */\nclock_chart_wrapper.prototype._render_key2_dividers = function () {\n\tthis._graphics.key2_dividers_g = this._graphics.root_g.append('g')\n\tconst dividers_g = this._graphics.key2_dividers_g\n\tconst color = 'gray'\n\n\tfor (const [index, key2] of this._key2_values.entries()) {\n\t\tconst x = this._chart.key2_start_x[key2]\n\t\tconst divider_g = dividers_g.append('g')\n\t\t\t.attr('transform', `translate(${x},0)`)\n\t\t// divider_g.append('rect')\n\t\t// \t.attr('x', 0)\n\t\t// \t.attr('height', this._height)\n\t\t// \t.attr('width', KEY2_MARGIN[1])\n\t\t// \t.style('fill', 'none')\n\t\t// \t.style('stroke', 'red')\n\t\t// \t.style('stroke-width', 0.5)\n\t\tdivider_g.append('line')\n\t\t\t.attr('x1', 0)\n\t\t\t.attr('y1', 0)\n\t\t\t.attr('x2', 0)\n\t\t\t.attr('y2', this._height)\n\t\t\t.attr('stroke', color)\n\t\t\t.attr('stroke-width', 0.9)\n\t\t\t.attr('stroke-dasharray', this._height/35)\n\t\tdivider_g.append('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr('transform', 'rotate(-90)')\n\t\t\t.attr('y', '1.3em')  // This is the horizontal axis now\n\t\t\t.attr('x', '-0.6em')  // This is the vertical axis now\n\t\t\t.attr('font-size', '0.3em')\n\t\t\t.attr('fill', color)\n\t\t\t.text(key2)\n\t}\n}\n\n/**\n * Render a clock and its label\n * @function\n * @private\n * @name clock_chart_wrapper#_render_datum\n * @param {number} i the index of the datum to render\n */\nclock_chart_wrapper.prototype._render_datum = function (i) {\n\tconst datum = this._data[i]\n\tconst g = this._graphics.datum_g.append('g')\n\t\t.attr('transform', `translate(${this._chart.datum_start_x[i]},0)`)\n\tthis._render_handles(g, datum.values)\n\tthis._render_label(g, datum)\n}\n\n/**\n * Render the clock handles\n * @function\n * @private\n * @name clock_chart_wrapper#_render_handles\n * @param {d3.selection} container_g the container g tag\n * @param {number[]} values the values of the clock\n */\nclock_chart_wrapper.prototype._render_handles = function (container_g, values) {\n\t// container_g.append('rect')\n\t// \t.attr('x', 0)\n\t// \t.attr('height', CLOCK_DIAMETER)\n\t// \t.attr('width', CLOCK_DIAMETER)\n\t// \t.style('fill', 'none')\n\t// \t.style('stroke', 'blue')\n\t// \t.style('stroke-width', 0.5)\n\tconst delta = 2*Math.PI/values.length\n\tlet angle = Math.PI/2\n\tconst scale = d3.scaleLinear()\n\t\t.domain([0, d3.max(values)])\n\t\t.range([0, CLOCK_RADIUS])\n\tconst g = container_g.append('g')\n\t\t.attr('transform', `translate(${CLOCK_RADIUS},${CLOCK_RADIUS})`)\n\tfor (const value of values) {\n\t\tg.append('line')\n\t\t\t.attr('x1', 0)\n\t\t\t.attr('y1', 0)\n\t\t\t.attr('x2', scale(value)*Math.cos(angle))\n\t\t\t.attr('y2', -scale(value)*Math.sin(angle))  // Mirror vertically!\n\t\t\t.attr('stroke', 'black')\n\t\t\t.attr('stroke-width', 1)\n\t\tangle -= delta\n\t}\n}\n\n\n/**\n * Render the clock label\n * @function\n * @private\n * @name clock_chart_wrapper#_render_label\n * @param {d3.selection} container_g the container g tag\n * @param {{\n * \tid: string,\n * \tkey: string[],\n * \tvalues: number[]\n * }} datum the datum\n */\nclock_chart_wrapper.prototype._render_label = function (container_g, datum) {\n\t// container_g.append('rect')\n\t// \t.attr('x', 0)\n\t// \t.attr('y', CLOCK_DIAMETER)\n\t// \t.attr('height', LABEL_HEIGHT)\n\t// \t.attr('width', CLOCK_DIAMETER)\n\t// \t.style('fill', 'none')\n\t// \t.style('stroke', 'green')\n\t// \t.style('stroke-width', 0.5)\n\tconst g = container_g.append('g')\n\t\t.attr('transform', `translate(${CLOCK_RADIUS},${CLOCK_DIAMETER})`)\n\tconst key1 = datum.key[this._kdm.key_size-1]\n\tconst id = datum.id\n\tg.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('y', '1.5em')\n\t\t.attr('font-size', '0.25em')\n\t\t.attr('fill', 'black')\n\t\t.text(key1)\n\tg.append('text')\n\t\t.attr('text-anchor', 'middle')\n\t\t.attr('y', '3.1em')\n\t\t.attr('font-size', '0.2em')\n\t\t.attr('fill', 'black')\n\t\t.text(`(${id})`)\n}","/*global tstring, page_globals, Promise, data_manager, common, event_manager, catalog_row_fields */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"../../lib/charts/chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"../../lib/charts/d3/boxvio/boxvio-chart-wrapper.js\";\nimport { clock_chart_wrapper } from \"../../lib/charts/d3/clock/clock-chart-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t\t: null,\n\tform_items_container\t\t: null,\n\tweight_chart_container\t\t: null,\n\tdiameter_chart_container\t: null,\n\tclock_chart_container\t\t: null,\n\n\t/**\n\t * Chart wrapper instance for weight\n\t * @type {chart_wrapper}\n\t */\n\tweight_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for diameter\n\t * @type {chart_wrapper}\n\t */\n\tdiameter_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for clock\n\t * @type {chart_wrapper}\n\t */\n\tclock_chart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.weight_chart_container\t\t= options.weight_chart_container\n\t\t\tself.diameter_chart_container\t= options.diameter_chart_container\n\t\t\tself.clock_chart_container\t\t= options.clock_chart_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// number\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"number\",\n\t\t\t\tname \t\t: \"number\",\n\t\t\t\tq_column \t: \"term\",\n\t\t\t\tq_table \t: \"types\",\n\t\t\t\tlabel\t\t: tstring.number_key || \"Number & Key\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tgroup_op \t: '$or',\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// material\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"material\",\n\t\t\t\tname \t\t: \"material\",\n\t\t\t\tq_column \t: \"ref_type_material\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.material || \"material\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// denomination\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"denomination\",\n\t\t\t\tname \t\t: \"denomination\",\n\t\t\t\tq_column \t: \"ref_type_denomination\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.denomination || \"denomination\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// culture\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"culture\",\n\t\t\t\tname\t\t\t: \"culture\",\n\t\t\t\tlabel\t\t\t: tstring.culture || \"culture\",\n\t\t\t\tq_column\t\t: \"p_culture\",\n\t\t\t\tvalue_wrapper\t: ['[\"','\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\n\t\t// iconography_obverse\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"iconography_obverse\",\n\t\t\t\tname\t\t\t: \"iconography_obverse\",\n\t\t\t\tlabel\t\t\t: tstring.iconography_obverse || \"iconography obverse\",\n\t\t\t\tq_column\t\t: \"ref_type_design_obverse_iconography\",\n\t\t\t\tvalue_split\t\t: ' | ',\n\t\t\t\tq_splittable\t: true,\n\t\t\t\tq_selected_eq\t: 'LIKE',\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\t// q_table\t\t: \"ts_period\",\n\t\t\t\tis_term\t\t\t: false,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// iconography_reverse\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"iconography_reverse\",\n\t\t\t\tname\t\t\t: \"iconography_reverse\",\n\t\t\t\tlabel\t\t\t: tstring.iconography_reverse || \"iconography reverse\",\n\t\t\t\tq_column\t\t: \"ref_type_design_reverse_iconography\",\n\t\t\t\tvalue_split\t\t: ' | ',\n\t\t\t\tq_splittable\t: true,\n\t\t\t\tq_selected_eq\t: 'LIKE',\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\t// q_table\t\t: \"ts_period\",\n\t\t\t\tis_term\t\t\t: false,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// range slider date (range_slider) (!) WORKING HERE\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t: \"range_slider\",\n\t\t\t\tname\t\t: \"range_slider\",\n\t\t\t\tinput_type\t: 'range_slider',\n\t\t\t\tlabel\t\t: tstring.period || \"Period\",\n\t\t\t\tclass_name\t: 'range_slider',\n\t\t\t\tq_column\t: \"ref_date_in,ref_date_end\",\n\t\t\t\t// eq\t\t: \"LIKE\",\n\t\t\t\t// eq_in\t: \"\",\n\t\t\t\t// eq_out\t: \"%\",\n\t\t\t\t// q_table\t: \"catalog\",\n\t\t\t\tsql_filter\t: null,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\n\t\t\t\t\t// const form_item\t\t\t\t= this\n\t\t\t\t\tconst node_input\t\t\t\t= form_item.node_input\n\t\t\t\t\tconst range_slider_value_in\t\t= node_input.parentNode.querySelector('#range_slider_in')\n\t\t\t\t\tconst range_slider_value_out\t= node_input.parentNode.querySelector('#range_slider_out')\n\n\t\t\t\t\tfunction set_up_slider() {\n\n\t\t\t\t\t\t// compute range years\n\t\t\t\t\t\tself.get_catalog_range_years()\n\t\t\t\t\t\t.then(function(range_data){\n\t\t\t\t\t\t\t// console.log(\"range_data:\",range_data);\n\n\t\t\t\t\t\t\t// destroy current slider instance if already exists\n\t\t\t\t\t\t\t\tif ($(node_input).slider(\"instance\")) {\n\t\t\t\t\t\t\t\t\t$(node_input).slider(\"destroy\")\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// reset filter\n\t\t\t\t\t\t\t\tform_item.sql_filter = null\n\n\t\t\t\t\t\t\t// set inputs values from database\n\t\t\t\t\t\t\t\trange_slider_value_in.value\t= range_data.min\n\t\t\t\t\t\t\t\trange_slider_value_in.addEventListener(\"change\",function(e){\n\t\t\t\t\t\t\t\t\tconst value = (e.target.value>=range_data.min)\n\t\t\t\t\t\t\t\t\t\t? e.target.value\n\t\t\t\t\t\t\t\t\t\t: range_data.min\n\t\t\t\t\t\t\t\t\t$(node_input).slider( \"values\", 0, value );\n\t\t\t\t\t\t\t\t\te.target.value = value\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\trange_slider_value_out.value = range_data.max\n\t\t\t\t\t\t\t\trange_slider_value_out.addEventListener(\"change\",function(e){\n\t\t\t\t\t\t\t\t\tconst value = (e.target.value<=range_data.max)\n\t\t\t\t\t\t\t\t\t\t? e.target.value\n\t\t\t\t\t\t\t\t\t\t: range_data.max\n\t\t\t\t\t\t\t\t\t$(node_input).slider( \"values\", 1, e.target.value );\n\t\t\t\t\t\t\t\t\te.target.value = value\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// active jquery slider\n\t\t\t\t\t\t\t\t$(node_input).slider({\n\t\t\t\t\t\t\t\t\trange\t: true,\n\t\t\t\t\t\t\t\t\tmin\t\t: range_data.min,\n\t\t\t\t\t\t\t\t\tmax\t\t: range_data.max,\n\t\t\t\t\t\t\t\t\tstep\t: 1,\n\t\t\t\t\t\t\t\t\tvalues\t: [ range_data.min, range_data.max ],\n\t\t\t\t\t\t\t\t\tslide\t: function( event, ui ) {\n\t\t\t\t\t\t\t\t\t\t// update input values on user drag slide points\n\t\t\t\t\t\t\t\t\t\trange_slider_value_in.value\t = ui.values[0]\n\t\t\t\t\t\t\t\t\t\trange_slider_value_out.value = ui.values[1]\n\t\t\t\t\t\t\t\t\t\t// console.warn(\"-----> slide range form_item.sql_filter:\",form_item.sql_filter);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tchange: function( event, ui ) {\n\t\t\t\t\t\t\t\t\t\t// update form_item sql_filter value on every slider change\n\t\t\t\t\t\t\t\t\t\tform_item.sql_filter = \"(ref_date_in >= \" + ui.values[0] + \" AND ref_date_in <= \"+ui.values[1]+\")\"; // AND (ref_date_end <= \" + ui.values[1] + \" OR ref_date_end IS NULL)\n\t\t\t\t\t\t\t\t\t\tform_item.q = ui.value\n\t\t\t\t\t\t\t\t\t\t// console.warn(\"-----> change range form_item.sql_filter:\", form_item.sql_filter);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\t// initial_map_loaded event (triggered on initial map data is ready)\n\t\t\t\t\t// event_manager.subscribe('initial_map_loaded', set_up_slider)\n\t\t\t\t\tset_up_slider()\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// loading\n\t\t\t// cleanup html\n\t\t\t\tconst section_container = {\n\t\t\t\t\tweight: document.getElementById('weight_section'),\n\t\t\t\t\tdiameter: document.getElementById('diameter_section'),\n\t\t\t\t\tclock: document.getElementById('clock_section')\n\t\t\t\t}\n\t\t\t\tfor (const [sec_name, container] of Object.entries(section_container)) {\n\t\t\t\t\tcontainer.classList.add('hide')\n\t\t\t\t}\n\t\t\t\tself.diameter_chart_container.replaceChildren()\n\t\t\t\tself.weight_chart_container.replaceChildren()\n\t\t\t\tself.clock_chart_container.replaceChildren()\n\t\t\t\t// while (self.diameter_chart_container.hasChildNodes()) {\n\t\t\t\t// \tself.diameter_chart_container.removeChild(self.diameter_chart_container.lastChild);\n\t\t\t\t// }\n\t\t\t\t// while (self.weight_chart_container.hasChildNodes()) {\n\t\t\t\t// \tself.weight_chart_container.removeChild(self.weight_chart_container.lastChild);\n\t\t\t\t// }\n\t\t\t\t// while (self.clock_chart_container.hasChildNodes()) {\n\t\t\t\t// \tself.clock_chart_container.removeChild(self.clock_chart_container.lastChild);\n\t\t\t\t// }\n\t\t\t// spinner\n\t\t\t\tconst result = document.getElementById('result')\n\t\t\t\tconst spinner = common.create_dom_element({\n\t\t\t\t\telement_type\t: 'div',\n\t\t\t\t\tclass_name\t\t: 'spinner',\n\t\t\t\t\tparent\t\t\t: result\n\t\t\t\t})\n\n\t\t// scroll to head result\n\t\t\t// if (scroll_result) {\n\t\t\t\t// result.scrollIntoView(\n\t\t\t\t// \t{behavior: \"smooth\", block: \"start\", inline: \"nearest\"}\n\t\t\t\t// );\n\t\t\t// }\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tprocess_result\t: {\n\t\t\t\t\tfn\t\t: 'process_result::add_parents_and_children_recursive',\n\t\t\t\t\tcolumns\t: [{name : \"parents\"}]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\t\t\t\t// console.log(parsed_data)\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\t// const diameters = parsed_data\n\t\t\t\t// \t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t// \t.flat()\n\t\t\t\t// \t.filter((v) => v)\n\t\t\t\t// console.log(diameters)\n\n\t\t\t\t// this.diameter_chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.diameter_chart_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t{\n\t\t\t\t// \t\txlabel: 'Diameter',\n\t\t\t\t// \t}\n\t\t\t\t// )\n\t\t\t\t// this.diameter_chart_wrapper.render()\n\n\t\t\t\t// data\n\t\t\t\t\tconst data = []\n\t\t\t\t\tfor (const [i, ele] of parsed_data.entries()) {\n\t\t\t\t\t\t// get section_id to be the key referent to search data again.\n\t\t\t\t\t\tconst section_id\t= ele.section_id\n\n\t\t\t\t\t\tconst number_key\t= ele.ref_type_number ? ele.ref_type_number : `Missing Number & Key (${i})` // Why need to change the name???? MR POTATOE !!!!!!!!\n\t\t\t\t\t\tconst mint\t\t\t= ele.p_mint ? ele.p_mint[0] : `Missing mint (${ele.section_id})`\n\t\t\t\t\t\tconst material\t\t= ele.ref_type_material ? ele.ref_type_material : `Missing material (${i})`\n\t\t\t\t\t\tconst denomination\t= ele.ref_type_denomination ? ele.ref_type_denomination : `Missing denomination ${i}`\n\t\t\t\t\t\t// if (!['12', '59', '62', '18','11a','14'].includes(name)) continue\n\t\t\t\t\t\t// if (!['59', '62'].includes(name)) continue\n\t\t\t\t\t\tconst tmp_data\t\t= {}\n\n\t\t\t\t\t\tconst calculable\t= ele.full_coins_reference_calculable\n\t\t\t\t\t\tconst diameter_max\t= ele.full_coins_reference_diameter_max\n\t\t\t\t\t\tconst diameter_min\t= ele.full_coins_reference_diameter_min\n\t\t\t\t\t\tconst weight\t\t= ele.full_coins_reference_weight\n\t\t\t\t\t\tconst axis\t\t\t= ele.full_coins_reference_axis\n\n\t\t\t\t\t\tif (diameter_max && diameter_max.length) {\n\t\t\t\t\t\t\tconst tmp_diameter_max = diameter_max.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_diameter_max.length) {\n\t\t\t\t\t\t\t\ttmp_data.diameter_max = tmp_diameter_max\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (diameter_min && diameter_min.length) {\n\t\t\t\t\t\t\tconst tmp_diameter_min = diameter_min.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_diameter_min.length) {\n\t\t\t\t\t\t\t\ttmp_data.diameter_min = tmp_diameter_min\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (weight && weight.length) {\n\t\t\t\t\t\t\tconst tmp_weight = weight.filter((v, i) => v && calculable[i])\n\t\t\t\t\t\t\tif (tmp_weight.length) {\n\t\t\t\t\t\t\t\ttmp_data.weight = tmp_weight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (axis && axis.length) {\n\t\t\t\t\t\t\tconst tmp_axis = axis.filter((v) => v)\n\t\t\t\t\t\t\tif (tmp_axis.length) {\n\t\t\t\t\t\t\t\ttmp_data.axis = tmp_axis\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Object.keys(tmp_data).length) {\n\t\t\t\t\t\t\ttmp_data.section_id \t= section_id\n\t\t\t\t\t\t\ttmp_data.number_key\t\t= number_key\n\t\t\t\t\t\t\ttmp_data.mint\t\t\t= mint\n\t\t\t\t\t\t\ttmp_data.type_number\t= number_key //type number is and will be type number! Raspa said.\n\t\t\t\t\t\t\ttmp_data.material\t\t= material\n\t\t\t\t\t\t\ttmp_data.denomination\t= denomination\n\t\t\t\t\t\t\tdata.push(tmp_data)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(data)\n\n\t\t\t\t// Weights\n\t\t\t\tconst weights = data.filter( (ele) => ele.weight ).map( (ele) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey\t\t\t: [ele.mint, ele.number_key],\n\t\t\t\t\t\t\tvalues\t\t: ele.weight,\n\t\t\t\t\t\t\tid\t\t\t: ele.section_id,\n\t\t\t\t\t\t\tmint\t\t: ele.mint,\n\t\t\t\t\t\t\ttype_number\t: ele.number_key\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\t// Diameters\n\t\t\t\tconst diameters = data.filter( (ele) => ele.diameter_max ).map(\n\t\t\t\t\t(ele) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey\t\t\t: [ele.mint, ele.number_key],\n\t\t\t\t\t\t\tvalues\t\t: ele.diameter_max,\n\t\t\t\t\t\t\tid\t\t\t: ele.section_id,\n\t\t\t\t\t\t\tmint\t\t: ele.mint,\n\t\t\t\t\t\t\ttype_number\t: ele.number_key\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\t// Axes\n\t\t\t\tconst axes = data.filter( (ele) => ele.axis && ele.axis.length).map(\n\t\t\t\t\t(ele) => {\n\t\t\t\t\t\tconst axis = Array(12).fill(0)\n\t\t\t\t\t\tfor (const hour of ele.axis) {\n\t\t\t\t\t\t\taxis[hour % 12]++\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkey\t\t: [ele.mint, ele.number_key],\n\t\t\t\t\t\t\tvalues\t: axis,\n\t\t\t\t\t\t\tid\t\t: ele.section_id\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tspinner.remove()\n\n\t\t\t\tif (weights.length) {\n\t\t\t\t\tsection_container.weight.classList.remove('hide')\n\t\t\t\t\tthis.weight_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\t\tthis.weight_chart_container,\n\t\t\t\t\t\tweights,\n\t\t\t\t\t\t[tstring.mint || 'Mint', tstring.number || 'Number'],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhiskers_quantiles\t\t\t\t\t: [10, 90],\n\t\t\t\t\t\t\tylabel\t\t\t\t\t\t\t\t: tstring.weight || 'Weight',\n\t\t\t\t\t\t\toverflow\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\t\tdisplay_control_panel\t\t\t\t: true,\n\t\t\t\t\t\t\tdisplay_download\t\t\t\t\t: true,\n\t\t\t\t\t\t\tsort_xaxis\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\t\ttooltip_callback\t\t\t\t\t: type_tooltip_callback,\n\t\t\t\t\t\t\ttooltip_callback_options_attributes\t: ['id', 'type_number', 'mint']\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tthis.weight_chart_wrapper.render()\n\t\t\t\t}\n\n\t\t\t\tif (diameters.length) {\n\t\t\t\t\tsection_container.diameter.classList.remove('hide')\n\t\t\t\t\tthis.diameter_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\t\tthis.diameter_chart_container,\n\t\t\t\t\t\tdiameters,\n\t\t\t\t\t\t[tstring.mint || 'Mint', tstring.number || 'Number'],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twhiskers_quantiles\t\t\t\t\t: [10, 90],\n\t\t\t\t\t\t\tylabel\t\t\t\t\t\t\t\t: tstring.diameter || 'Diameter',\n\t\t\t\t\t\t\toverflow\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\t\tdisplay_control_panel\t\t\t\t: true,\n\t\t\t\t\t\t\tdisplay_download\t\t\t\t\t: true,\n\t\t\t\t\t\t\tsort_xaxis\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\t\ttooltip_callback\t\t\t\t\t: type_tooltip_callback,\n\t\t\t\t\t\t\ttooltip_callback_options_attributes\t: ['id', 'type_number', 'mint']\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tthis.diameter_chart_wrapper.render()\n\t\t\t\t}\n\n\t\t\t\tif (axes.length) {\n\t\t\t\t\tsection_container.clock.classList.remove('hide')\n\t\t\t\t\tthis.clock_chart_wrapper = new clock_chart_wrapper(\n\t\t\t\t\t\tthis.clock_chart_container,\n\t\t\t\t\t\taxes,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toverflow: true,\n\t\t\t\t\t\t\touter_height: '300px',\n\t\t\t\t\t\t\tdisplay_download: true\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\tthis.clock_chart_wrapper.render()\n\t\t\t\t}\n\n\t\t\t})\n\n\n\t\treturn js_promise\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load JSON data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 100\n\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\t},\n\n\t/**\n\t* GET_CATALOG_RANGE_YEARS\n\t* @return\n\t*/\n\tget_catalog_range_years : function() {\n\n\t\treturn new Promise(function(resolve){\n\n\t\t\tconst ar_fields = ['id','section_id','MIN(ref_date_in + 0) AS min','MAX(ref_date_in + 0) AS max']\n\n\t\t\tconst request_body = {\n\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\tdb_name\t\t\t: page_globals.WEB_DB,\n\t\t\t\tlang\t\t\t: page_globals.WEB_CURRENT_LANG_CODE,\n\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tcount\t\t\t: false,\n\t\t\t\toffset\t\t\t: 0,\n\t\t\t\torder\t\t\t: 'id ASC'\n\t\t\t}\n\t\t\tdata_manager.request({\n\t\t\t\tbody : request_body\n\t\t\t})\n\t\t\t.then(function(api_response){\n\t\t\t\t// console.log(\"-> get_catalog_range_years api_response:\",api_response);\n\n\t\t\t\tlet min = 0\n\t\t\t\tlet max = 0\n\t\t\t\tif (api_response.result) {\n\t\t\t\t\tfor (let i = 0; i < api_response.result.length; i++) {\n\t\t\t\t\t\tconst row = api_response.result[i]\n\t\t\t\t\t\tconst current_min = parseInt(row.min)\n\t\t\t\t\t\tif (min===0 || current_min<min) {\n\t\t\t\t\t\t\tmin = current_min\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst current_max = parseInt(row.max)\n\t\t\t\t\t\t// if (current_max>min) {\n\t\t\t\t\t\t\tmax = current_max\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst data = {\n\t\t\t\t\tmin : min,\n\t\t\t\t\tmax : max\n\t\t\t\t}\n\n\t\t\t\tresolve(data)\n\t\t\t})\n\t\t})\n\t}//end get_catalog_range_years\n\n}//end analysis\n\n\n/**\n * Callback for tooptip in violin-boxplot\n * @param {{id: string, type_number: string, mint: string}} options\n * @returns {Promise<Element>} the html element to add to the tooltip \n */\nasync function type_tooltip_callback(options) {\n\n\tconst section_id\t= options.id\n\tconst type_number\t= options.type_number\n\tconst mint\t\t\t= options.mint\n\n\t// CALL DEDALO API TO OBTAIN INFO\n\t// const sql_filter =\n\t// \t`(\\`p_mint\\` = '[\"${mint}\"]' AND \\`p_mint\\` != '')`\n\t// \t+ `AND (\\`term\\` LIKE '${number}%' AND \\`term\\` != '')`\n\tconst catalog_ar_fields = ['*']\n\n\tconst catalog_request_options = {\n\t\tdedalo_get\t: 'records',\n\t\tlang\t\t: page_globals.WEB_CURRENT_LANG_CODE,\n\t\ttable\t\t: 'catalog',\n\t\tar_fields\t: catalog_ar_fields,\n\t\t// sql_filter\t: sql_filter,\n\t\tsection_id \t: section_id, // unique id for the selected all data of the type\n\t\tlimit\t\t: 1,\n\t\tcount\t\t: false,\n\t\t// order\t\t: \"norder ASC\"\n\t}\n\n\tconst api_response = await data_manager.request({\n\t\tbody: catalog_request_options\n\t})\n\tconst type_data = api_response.result || null\n\n\tif (!type_data) {\n\t\treturn common.create_dom_element({\n\t\t\telement_type: 'div',\n\t\t\ttext_content: `Could not find number ${type_number} for mint ${mint} in the database.`\n\t\t})\n\t}\n\tconst type_row = page.parse_catalog_data(type_data)[0]\n\n\t// set true to render material and denonimation\n\ttype_row.add_denomination = true\n\t// CREATE THE RESULTING HTML Element\n\t// type_row.render_material\t= true\n\tconst ele = catalog_row_fields.draw_item(type_row)\n\t// Remove style of coins images container, since it is hardcoded to 124mm\n\tele.getElementsByClassName('coins_images')[0].removeAttribute('style')\n\treturn ele\n\n}\n"],"mappings":"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"}