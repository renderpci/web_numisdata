"use strict";var coins={set_up:function(e){const t=e.form_container,n=(e.row_detail,this.render_form());return t.appendChild(n),!0},render_form:function(){const e=this,t=new DocumentFragment;e.form=e.form||new form_factory;const n=common.create_dom_element({element_type:"div",class_name:"form-row fields",parent:t});e.form.item_factory({id:"public_info",name:"public_info",label:tstring.public_info||"public_info",q_column:"public_info",eq:"LIKE",eq_in:"%",eq_out:"%",parent:n,callback:function(t){e.activate_autocomplete(t)}});const o=common.create_dom_element({element_type:"div",class_name:"form-group field button_submit",parent:t});common.create_dom_element({element_type:"input",type:"submit",id:"submit",value:tstring.search||"Search",class_name:"btn btn-light btn-block primary",parent:o}).addEventListener("click",(function(t){t.preventDefault(),e.form_submit(i)}));const l=e.form.build_operators_node();t.appendChild(l);const i=common.create_dom_element({element_type:"form",id:"search_form",class_name:"form-inline"});return i.appendChild(t),i},activate_autocomplete:function(e){const t=this;let n;!function(e){var t=e.ui.autocomplete.prototype,n=t._initSource;e.extend(t,{_initSource:function(){this.options.html&&e.isArray(this.options.source)?this.source=function(t,n){var o,l,i;n((o=this.options.source,l=t.term,i=new RegExp(e.ui.autocomplete.escapeRegex(l),"i"),e.grep(o,(function(t){return i.test(e("<div>").html(t.label||t.value||t).text())}))))}:n.call(this)},_renderItem:function(t,n){for(var o=n.label,l=o.split(" | "),i=[],r=0;r<l.length;r++){var c=l[r];c.length>1&&"<i>.</i>"!==c&&i.push(c)}return o=i.join(" | "),e("<li></li>").data("item.autocomplete",n).append(e("<div></div>")[this.options.html?"html":"text"](o)).appendTo(t)}})}(jQuery);const o={};return $(e).autocomplete({delay:150,minLength:0,html:!0,source:function(l,i){const r=l.term;n=t.form.form_items[e.id];n.q_name;const c=n.q_column,s={AND:[]},u=(n.eq_in||"")+r+(n.eq_out||"%");s.AND.push({field:c,value:`'${u}'`,op:n.eq,group:c});const a={OR:[]};for(let[e,o]of Object.entries(t.form.form_items))if(o.id!==n.id){if(o.q.length>0){const e=o.q;a.OR.push({field:o.q_column,value:`'%${e}%'`,op:"LIKE"})}if(o.q_selected.length>0)for(let e=0;e<o.q_selected.length;e++){const t=o.q_selected[e];a.OR.push({field:o.q_column,value:!0===o.is_term?`'%"${t}"%'`:`'${t}'`,op:!0===o.is_term?"LIKE":"="})}}if(a.OR.length>0&&s.AND.push(a),1===s.AND.length&&r in o)return!0===SHOW_DEBUG&&console.warn("Returning values from cache:",o[r]),void i(o[r]);t.search_rows({filter:s,ar_fields:[c+" AS name"],limit:30,order:"name ASC"}).then(e=>{const t=[],n=e.result.length;for(let o=0;o<n;o++){const n=e.result[o],l=0===n.name.indexOf('["')?JSON.parse(n.name):[n.name];for(let e=0;e<l.length;e++){const n=l[e];t.find(e=>e.value===n)||t.push({label:n,value:n})}}const l=function(e,t){return e.map((function(e){return e.label=e.label.replace(/<br>/g," "),e.label=page.parse_legend_svg(e.label),e}))}(t);1===s.AND.length&&(o[r]=l),SHOW_DEBUG,i(l)})},select:function(e,o){return e.preventDefault(),t.add_selected_value(n,o.item.label,o.item.value),this.value="",!1},focus:function(){return!1},close:function(e,t){},change:function(e,t){},response:function(e,t){}}).on("keydown",(function(e){e.keyCode===$.ui.keyCode.ENTER&&$(this).autocomplete("close")})).focus((function(){$(this).autocomplete("search",null)})),!0},search_rows:function(e){const t=e.filter||null,n=e.ar_fields||["*"],o=e.order||"norder ASC",l=page_globals.WEB_CURRENT_LANG_CODE,i=(e.process_result,null!=e.limit?e.limit:30),r=[],c=function(e){if(e){const t=Object.keys(e)[0],n=e[t],o=[],l=n.length;for(let e=0;e<l;e++){const t=n[e],l=Object.keys(t)[0];if("AND"===l||"OR"===l){const e=""+c(t);o.push(e);continue}let i;i="MATCH"===t.op?"MATCH ("+t.field+") AGAINST ("+t.value+" IN BOOLEAN MODE)":-1!==t.field.indexOf("AS")?t.field+" "+t.op+" "+t.value:"`"+t.field+"` "+t.op+" "+t.value,o.push(i),t.group&&r.push(t.group)}return o.join(" "+t+" ")}return null},s=c(t);!0===SHOW_DEBUG&&(console.log("--- search_rows parsed sql_filter:"),console.log(s));return data_manager.request({body:{dedalo_get:"records",table:"coins",ar_fields:n,lang:l,sql_filter:s,limit:i,count:!1,order:o}})}};