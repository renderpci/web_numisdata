{"version":3,"names":["COLOR_PALETTE","chart_wrapper","div_wrapper","this","constructor","Error","_n_charts_created","id","download_chart_container","undefined","controls_container","d3_chart_wrapper","call","svg","toggle_visibility","element","attr","transition","linspace","start","stop","nsteps","delta","d3","range","map","i","boxvio_chart_wrapper","data","ylabel","_data","_ylabel","_metrics","name","values","Object","entries","calc_metrics","_outliers","filter","v","lower_fence","upper_fence","_data_extent","extent","flat","_full_width","_full_height","_chart","margin","top","right","bottom","left","width","height","yscale","scaleLinear","domain","clamp","yaxis","axisLeft","violin_scale_default","violin_scale","box_scale_default","box_scale","xscale","scaleBand","keys","xaxis","axisBottom","n_bins_default","n_bins","max_bins_multiplier","histogram","bin","thresholds","value","d","bins","key","_graphics","root_g","violins_g","boxes_g","outliers","metrics","max","quartile3","median","mean","iqr","quartile1","min","quantile","prototype","id_string","render","self","replaceChildren","common","create_dom_element","element_type","class_name","style","display","parent","format_select","format","get_supported_export_formats","text_content","toUpperCase","addEventListener","download_chart","filename","download_func_name","setPrototypeOf","select","append","download_chart_as_svg","svg_data","node","outerHTML","svg_blob","Blob","type","url","URL","createObjectURL","tmpLink","href","setAttribute","click","remove","revokeObjectURL","set_n_bins","selectAll","_render_violins","set_violin_scale","scale","set_box_scale","_render_boxes","_render_chart","_render_control_panel","_render_axis","g","text","is_g_ready","chart","max_count","group","longest","length","xNum","bandwidth","enter","datum","area","x0","x1","y","curve","curveCatmullRom","boxes","box_width","color","group_box","outlier","whiskers","controls_container_id","n_bins_slider","Number","show_violins_checkbox_id","show_violins_checkbox","checked","show_boxes_checkbox_id","show_boxes_checkbox","show_outliers_checkbox_id","show_outliers_checkbox","violin_scale_slider","box_scale_slider","analysis","form","area_name","row","export_data_container","form_items_container","diameter_chart_container","weight_chart_container","diameter_chart_wrapper","weight_chart_wrapper","set_up","options","form_node","render_form","appendChild","fragment","DocumentFragment","form_factory","form_row","item_factory","label","tstring","mint","q_column","value_wrapper","eq","eq_in","eq_out","is_term","callback","form_item","activate_autocomplete","table","q_table","number_key","denomination","submit_group","search","e","preventDefault","form_submit","reset","window","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","scrollIntoView","behavior","block","inline","search_rows","limit","then","parsed_data","event_manager","publish","console","log","ele","term","split","includes","tmpData","calculable","full_coins_reference_calculable","diameter_max","full_coins_reference_diameter_max","diameter_min","full_coins_reference_diameter_min","weight","full_coins_reference_weight","diameters","props","weights","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","process_result","Promise","resolve","sql_filter","parse_sql_filter","request_body","dedalo_get","join","count","data_manager","request","body","response","page","parse_catalog_data","result"],"sources":["../../lib/charts/chart-wrapper.js","../../lib/charts/d3/d3-chart-wrapper.js","../../lib/charts/d3/utils.js","../../lib/charts/d3/boxvio-chart-wrapper.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Color palette, totally stolen from matplotlib\n * @type {string[]}\n */\nexport const COLOR_PALETTE = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']\n\n\n/**\n * Chart wrapper class\n * \n * It clears the container div during render, so subclasses should work with the dom\n * after the render method of this superclass has been called\n * @class\n * @abstract\n * @param {Element} div_wrapper \n */\nexport function chart_wrapper(div_wrapper) {\n    if (this.constructor === chart_wrapper) {\n        throw new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper._n_charts_created++;\n    /**\n     * Unique identifier for the chart.\n     * \n     * Subclasses MUST use this in order to assing IDs\n     * to DOM elements, in order to avoid bugs and cross-chart events\n     * @type {number}\n     */\n    this.id = chart_wrapper._n_charts_created\n    /**\n     * Div element wrapping the chart itself and\n     * the controls\n     * @type {Element}\n     * @protected\n     */\n    this.div_wrapper = div_wrapper\n    /**\n     * Div container for chart download\n     * @type {Element}\n     * @protected\n     */\n    this.download_chart_container = undefined\n    /**\n     * Div container for user controls\n     * Used freely by each subclass\n     * @type {Element}\n     * @protected\n     */\n    this.controls_container = undefined\n}\n\n/**\n * Amount of created charts\n * @type {number}\n * @static\n * @private\n */\nchart_wrapper._n_charts_created = 0;\n\n/**\n * Get a string representing the ID of the chart\n * @returns {string} the id as a string\n *          (`'chart1'`, `'chart2'`, ...)\n */\nchart_wrapper.prototype.id_string = function () {\n    return `chart${this.id}`\n}\n\n/**\n * Render the chart and controls\n * \n * Empties the div wrapper and resets properties\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n */\nchart_wrapper.prototype.render = function () {\n    // Save this chart_wrapper intance\n    /**\n     * This chart_wrapper intance\n     * @type {chart_wrapper}\n     */\n    const self = this\n    // Remove all children in the div_wrapper\n    this.div_wrapper.replaceChildren()\n    // Set controls container to undefined\n    this.controls_container = undefined\n    // Create the chart download section\n    this.download_chart_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'download_chart_container',\n        class_name: 'o-purple',\n        style: {\n            'display': 'flex',\n            'flex-direction': 'row',\n            'justify-content': 'center',\n        },\n        parent: this.div_wrapper,\n    })\n    const format_select = common.create_dom_element({\n        element_type: 'select',\n        id: 'chart_export_format',\n        style: {\n            'width': '80%',\n        },\n        parent: this.download_chart_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const format of this.get_supported_export_formats()) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: format,\n            text_content: format.toUpperCase(),\n            parent: format_select,\n        })\n    }\n    const chart_download_button = common.create_dom_element({\n        element_type: 'button',\n        text_content: 'Download',\n        style: {\n            'width': '20%',\n        },\n        parent: this.download_chart_container,\n    })\n    chart_download_button.addEventListener('click', () => {\n        self.download_chart(format_select.value)\n    })\n}\n\n/**\n * Download the chart as an image\n * \n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n    /**\n     * File name for the chart\n     * @type {string}\n     */\n    const filename = `${DEFAULT_CHART_NAME}.${format}`\n    /**\n     * Function name for downloading with the particular format\n     * @type {string}\n     */\n    const download_func_name = `download_chart_as_${format}`\n    if (this[download_func_name] === undefined) {\n        throw new Error(`${download_func_name} is not implemented!`)\n    }\n    this[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n * \n * Subclasses must return their own supported formats, e.g.,\n * `['png', 'jpg', 'eps']`\n * @function\n * @returns {string[]} the supported formats\n * @abstract\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n    throw new Error(`Abstract method 'chart_wrapper.download_chart' cannot be called`)\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div, so that it spans all width\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * @param {Element} div_wrapper the div containing the chart\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper) {\n    if (this.constructor === d3_chart_wrapper) {\n        throw new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper.call(this, div_wrapper)\n    /**\n     * D3 selection object for the root `svg` tag\n     * @protected\n     */\n    this.svg = undefined\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the chart (d3) and controls\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name d3_chart_wrapper#render\n * @function\n */\nd3_chart_wrapper.prototype.render = function () {\n    chart_wrapper.prototype.render.call(this)\n\n    this.svg = d3.select(this.div_wrapper)\n        .append('svg')\n        .attr('version', '1.1') // When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n        .attr('xmlns', 'http://www.w3.org/2000/svg')\n        .attr('width', '100%')\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n    return ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n    const svg_data = this.svg.node().outerHTML\n    const svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n    const url = URL.createObjectURL(svg_blob)\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    const tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: url,\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n    URL.revokeObjectURL(url)\n}","/**\n * Toggle visibility of a d3 selection element\n * @param {d3.selection} element the elememt\n */\nexport function toggle_visibility(element) {\n    if (element.attr('opacity') == 0) {\n        element.transition().attr('opacity', 1)\n    } else {\n        element.transition().attr('opacity', 0)\n    }\n}\n\n/**\n * Get an array of values, evenly spaced over an\n * interval\n * \n * https://gist.github.com/davebiagioni/1ac21feb1c2db04be4e6\n * @param {number} start start value\n * @param {number} stop stop value\n * @param {number} nsteps amount of spets\n * @returns {number[]} the values\n */\nexport function linspace(start, stop, nsteps){\n    const delta = (stop-start)/(nsteps-1)\n    return d3.range(nsteps).map((i) => start+i*delta)\n}","\"use strict\";\n\nimport { d3_chart_wrapper } from \"./d3-chart-wrapper\";\nimport { COLOR_PALETTE } from \"../chart-wrapper\";\nimport { toggle_visibility, linspace } from \"./utils\";\n\n\n/**\n * Boxplot + violin chart wrapper\n * \n * Inspired in http://bl.ocks.org/asielen/d15a4f16fa618273e10f\n * \n * @param {Element}  div_wrapper the div to work in\n * @param {{[group_name: string]: number[]}} data the input data: group name\n *        and array of values\n * @param {string} ylabel the y label\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper, data, ylabel) {\n    d3_chart_wrapper.call(this, div_wrapper)\n    /**\n     * Data: group name to array of values\n     * @type {Object.<string, number[]>}\n     * @private\n     */\n    this._data = data\n    /**\n     * The label for the y axis\n     * @type {string}\n     * @private\n     */\n    this._ylabel = ylabel\n    /**\n     * Boxplot metrics for each group name\n     * @type {{[group_name: string]: {\n     *  max: number,\n     *  upper_fence: number,\n     *  quartile3: number,\n     *  median: number,\n     *  mean: number,\n     *  iqr: number,\n     *  quartile1: number,\n     *  lower_fence: number,\n     *  min: number,\n     * }}}\n     * @private\n     */\n    this._metrics = {}\n    for (const [name, values] of Object.entries(data)) {\n        this._metrics[name] = calc_metrics(values)\n    }\n    /**\n     * Outliers per group name\n     * @type {{[group_name: string]: number[]}}\n     * @private\n     */\n    this._outliers = {}\n    for (const [name, values] of Object.entries(this._data)) {\n        this._outliers[name] = values.filter(\n            (v) => v < this._metrics[name].lower_fence || v > this._metrics[name].upper_fence\n        )\n    }\n    /**\n     * Maximum and minimum of the input data\n     * @type {[number, number]}\n     */\n    this._data_extent = d3.extent(Object.values(this._data).flat())\n    /**\n     * Full width of svg\n     * @type {number}\n     */\n    this._full_width = 960\n    /**\n     * Full height of svg\n     * @type {number}\n     */\n    this._full_height = 420\n    /**\n     * Non-graphic components of the chart: setting, scales, etc.\n     * @private\n     */\n    this._chart = {}\n    this._chart.margin = { top: 15, right: 3, bottom: 23, left: 50 }\n    this._chart.width = this._full_width - this._chart.margin.left - this._chart.margin.right\n    this._chart.height = this._full_height - this._chart.margin.top - this._chart.margin.bottom\n    this._chart.yscale = d3.scaleLinear()\n        .range([this._chart.height, 0])\n        .domain(this._data_extent)\n        .clamp(true)  // when input outside of domain, its output is clamped to range\n    this._chart.yaxis = d3.axisLeft(this._chart.yscale)\n    this._chart.violin_scale_default = 0.8\n    this._chart.violin_scale = this._chart.violin_scale_default\n    this._chart.box_scale_default = 0.3\n    this._chart.box_scale = this._chart.box_scale_default\n    this._chart.xscale = d3.scaleBand()\n        .domain(Object.keys(this._data))\n        .range([0, this._chart.width])\n        // .padding(1-this._chart.violin_scale)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n    this._chart.xaxis = d3.axisBottom(this._chart.xscale)\n    this._chart.n_bins_default = 15\n    this._chart.n_bins = this._chart.n_bins_default\n    this._chart.max_bins_multiplier = 3\n    this._chart.histogram = d3.bin()\n        .domain(this._chart.yscale.domain())\n        // TODO: compute number of bins automatically depending on the range of the data\n        .thresholds(\n            linspace(this._data_extent[0], this._data_extent[1], this._chart.n_bins+1)\n        )\n        .value((d) => d)\n    this._chart.bins = Object.entries(this._data).map(\n        ([name, values]) => {return {key: name, value: this._chart.histogram(values)}}\n    )\n    /**\n     * Graphic components of the chart: d3 selection objects\n     * @private\n     * @type {{[name: string]: d3.selection}}\n     */\n    this._graphics = {\n        root_g: null,\n        violins_g: null,\n        boxes_g: null,\n        outliers: {},\n    }\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Set a new number of bins for the violin plot\n * @function\n * @param {number} n_bins the number of bins\n * @name boxvio_chart_wrapper#set_n_bins\n */\nboxvio_chart_wrapper.prototype.set_n_bins = function (n_bins) {\n    this._chart.n_bins = n_bins\n    this._chart.histogram.thresholds(\n        linspace(this._data_extent[0], this._data_extent[1], n_bins+1)\n    )\n    this._chart.bins = Object.entries(this._data).map(\n        ([name, values]) => {return {key: name, value: this._chart.histogram(values)}}\n    )\n    // Remove the violin graphics, only leaving its root g tag (violins_g)\n    this._graphics.violins_g.selectAll('*').remove()\n    this._render_violins(true)\n}\n\n/**\n * Set the scale for the violins\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_violin_scale\n */\nboxvio_chart_wrapper.prototype.set_violin_scale = function (scale) {\n    this._chart.violin_scale = scale\n    // Remove the violin graphics, only leaving its root g tag (violins_g)\n    this._graphics.violins_g.selectAll('*').remove()\n    this._render_violins(true)\n}\n\n/**\n * Set the scale for the boxes\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_box_scale\n */\n boxvio_chart_wrapper.prototype.set_box_scale = function (scale) {\n    this._chart.box_scale = scale\n    // Remove the box graphics, only leaving its root g tag (boxes_g)\n    this._graphics.boxes_g.selectAll('*').remove()\n    this._render_boxes(true)\n}\n\n/**\n * Render the chart and the control panel\n * @function\n * @name boxvio_chart_wrapper#render\n */\nboxvio_chart_wrapper.prototype.render = function () {\n    // Call super render method\n    d3_chart_wrapper.prototype.render.call(this)\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_chart\n */\nboxvio_chart_wrapper.prototype._render_chart = function () {\n\n    // Set viewBox of svg\n    this.svg.attr('viewBox', `0 0 ${this._full_width} ${this._full_height}`)\n\n    // Root g tag\n    this._graphics.root_g = this.svg.append('g')\n        .attr('transform', `translate(${this._chart.margin.left},${this._chart.margin.top})`)\n\n    this._render_axis()\n    this._render_violins()\n    this._render_boxes()\n\n}\n\n/**\n * Render the axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_axis\n */\nboxvio_chart_wrapper.prototype._render_axis = function () {\n    const g = this._graphics.root_g\n    // Render x axis\n    g.append('g')\n        .attr('transform', `translate(0,${this._chart.height})`)\n        .call(this._chart.xaxis)\n    // Render y axis\n    g.append('g')\n        .call(this._chart.yaxis)\n\n    // Render Y axis label\n    g.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', -this._chart.margin.left + 20)\n        .attr('x', -this._chart.height / 2)\n        .text(this._ylabel);\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violins = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Get the largest count in a bin, as it will be the maximum width\n    let max_count = 0\n    for (const group of chart.bins) {\n        const longest = d3.max(group.value.map((v) => v.length))\n        if (longest > max_count) {\n            max_count = longest\n        }\n    }\n\n    // Make a scale linear to map bin counts to bandwidth\n    const xNum = d3.scaleLinear()\n        .range([0, chart.xscale.bandwidth()])\n        .domain([-max_count, max_count])\n\n    // Render\n    if (!is_g_ready) {\n        this._graphics.violins_g = g.append('g')\n    }\n    this._graphics.violins_g\n        .selectAll('violin')\n        .data(chart.bins)\n        .enter()  // Working per group now\n        .append('g')\n            .attr('transform', (d) => `translate(${chart.xscale(d.key)},0)`)\n        .append('path')\n            .datum((d) => d.value)  // Working per bin within a group\n            .style('stroke', 'gray')\n            .style('stroke-width', 0.4)\n            .style('fill', 'ghostwhite')\n            .attr('d', d3.area()\n                .x0((d) => xNum(-d.length*chart.violin_scale))\n                .x1((d) => xNum(d.length*chart.violin_scale))\n                .y((d) => chart.yscale(d.x0))\n                .curve(d3.curveCatmullRom)\n        )\n\n}\n\n/**\n * Render the boxes (including whiskers and outliers)\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for boxes is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_boxes\n */\nboxvio_chart_wrapper.prototype._render_boxes = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Draw\n    if (!is_g_ready) {\n        this._graphics.boxes_g = g.append('g')\n    }\n    const boxes = this._graphics.boxes_g\n    const bandwidth = chart.xscale.bandwidth()\n    const box_width = this._chart.box_scale * bandwidth\n\n    const whiskers_lw = 2\n    const median_lw = 3\n\n    // Iterate over the groups\n    for (const [i, name] of Object.entries(Object.keys(this._data))) {\n\n        const metrics = this._metrics[name]\n        const color = COLOR_PALETTE[i % COLOR_PALETTE.length]  // loop around!\n\n        const group_box = boxes.append('g')\n            .attr('transform', `translate(${chart.xscale(name) + bandwidth / 2},0)`)\n\n        // Draw outliers\n        this._graphics.outliers[name] = group_box.append('g')\n        const outliers = this._graphics.outliers[name]\n        for (const outlier of this._outliers[name]) {\n            outliers.append('circle')\n                .attr('cx', 0)\n                .attr('cy', chart.yscale(outlier))\n                .attr('r', 0.027*bandwidth)\n                .style('fill', color)\n                .style('opacity', 0.7)\n        }\n\n        // Draw whiskers\n        const whiskers = group_box.append('g')\n        whiskers.append('line')  // vertical line\n            .attr('x1', 0)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', 0)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // lower horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.lower_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // upper horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.upper_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n\n        // Draw IQR box\n        const iqr = group_box.append('g')\n        iqr.append('rect')  // iqr rect\n            .attr('x', -box_width / 2)\n            .attr('y', chart.yscale(metrics.quartile3))\n            .attr('width', box_width)\n            .attr('height', chart.yscale(metrics.quartile1) - chart.yscale(metrics.quartile3))\n            .attr('fill', color)\n        iqr.append('line')  // median line\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.median))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.median))\n            .attr('stroke', 'black')\n            .attr('stroke-width', median_lw)\n        iqr.append('circle')  // median dot\n            .attr('cx', 0)\n            .attr('cy', chart.yscale(metrics.median))\n            .attr('r', 4.5)\n            .style('fill', 'white')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 2)\n    }\n\n}\n\n\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_control_panel\n */\nboxvio_chart_wrapper.prototype._render_control_panel = function () {\n\n    // Create controls container\n    const controls_container_id = `${this.id_string()}_controls`\n    this.controls_container = common.create_dom_element({\n        element_type: 'div',\n        id: controls_container_id,\n        class_name: 'o-green',\n        parent: this.div_wrapper,\n    })\n\n    /**\n     * Slider for number of bins\n     * @type {Element}\n     */\n    const n_bins_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        value: this._chart.n_bins_default,\n        parent: this.controls_container,\n    })\n    n_bins_slider.setAttribute('min', 1)\n    n_bins_slider.setAttribute('max', this._chart.max_bins_multiplier * this._chart.n_bins_default)\n    n_bins_slider.addEventListener('input', () => {\n        this.set_n_bins(Number(n_bins_slider.value))\n    })\n    /**\n     * Reset button for the n_bins_slider\n     * @type {Element}\n     */\n    const n_bins_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    n_bins_slider_reset.addEventListener('click', () => {\n        n_bins_slider.value = this._chart.n_bins_default\n        this.set_n_bins(Number(n_bins_slider.value))\n    })\n\n    const show_violins_checkbox_id = `${this.id_string()}_show_violins_checkbox`\n    /**\n     * Checkbox for showing violins\n     * @type {Element}\n     */\n    const show_violins_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_violins_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_violins_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_violins_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show violins',\n        parent: this.controls_container,\n    })\n    show_violins_label.setAttribute('for', show_violins_checkbox_id)\n    show_violins_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.violins_g)\n    })\n\n    const show_boxes_checkbox_id = `${this.id_string()}_show_boxes_checkbox`\n    /**\n     * Checkbox for showing boxes\n     * @type {Element}\n     */\n     const show_boxes_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_boxes_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_boxes_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_boxes_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show boxes',\n        parent: this.controls_container,\n    })\n    show_boxes_label.setAttribute('for', show_boxes_checkbox_id)\n    show_boxes_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.boxes_g)\n    })\n\n    const show_outliers_checkbox_id = `${this.id_string()}_show_outliers_checkbox`\n    /**\n     * Checkbox for showing outliers\n     * @type {Element}\n     */\n    const show_outliers_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_outliers_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_outliers_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_outliers_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show outliers',\n        parent: this.controls_container,\n    })\n    show_outliers_label.setAttribute('for', show_outliers_checkbox_id)\n    show_outliers_checkbox.addEventListener('change', () => {\n        for (const group of Object.values(this._graphics.outliers)) {\n            toggle_visibility(group)\n        }\n    })\n\n    /**\n     * Slider for violin scale\n     * @type {Element}\n     */\n    const violin_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.violin_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    violin_scale_slider.setAttribute('min', 0)\n    violin_scale_slider.setAttribute('max', 1)\n    violin_scale_slider.setAttribute('step', 0.05)\n    violin_scale_slider.value = this._chart.violin_scale_default\n    violin_scale_slider.addEventListener('input', () => {\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n    /**\n     * Reset button for the violin_scale_slider\n     * @type {Element}\n     */\n    const violin_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    violin_scale_slider_reset.addEventListener('click', () => {\n        violin_scale_slider.value = this._chart.violin_scale_default\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n\n    /**\n     * Slider for box scale\n     * @type {Element}\n     */\n    const box_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.box_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    box_scale_slider.setAttribute('min', 0)\n    box_scale_slider.setAttribute('max', 1)\n    box_scale_slider.setAttribute('step', 0.05)\n    box_scale_slider.value = this._chart.box_scale_default\n    box_scale_slider.addEventListener('input', () => {\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n    /**\n     * Reset button for the box_scale_slider\n     * @type {Element}\n     */\n    const box_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    box_scale_slider_reset.addEventListener('click', () => {\n        box_scale_slider.value = this._chart.box_scale_default\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n\n}\n\n// HELPER FUNCTIONS\n\n/**\n * Compute (boxplot) metrics for the data\n * @param {number[]} values the data values\n * @returns {{\n *  max: number,\n *  upper_fence: number,\n *  quartile3: number,\n *  median: number,\n *  mean: number,\n *  iqr: number,\n *  quartile1: number,\n *  lower_fence: number,\n *  min: number,\n * }}\n */\nfunction calc_metrics(values) {\n    const metrics = {\n        max: null,\n        upper_fence: null,\n        quartile3: null,\n        median: null,\n        mean: null,\n        iqr: null,\n        quartile1: null,\n        lower_fence: null,\n        min: null,\n    }\n\n    metrics.min = d3.min(values)\n    metrics.quartile1 = d3.quantile(values, 0.25)\n    metrics.median = d3.median(values)\n    metrics.mean = d3.mean(values)\n    metrics.quartile3 = d3.quantile(values, 0.75)\n    metrics.max = d3.max(values)\n    metrics.iqr = metrics.quartile3 - metrics.quartile1\n    metrics.lower_fence = metrics.quartile1 - 1.5 * metrics.iqr\n    metrics.upper_fence = metrics.quartile3 + 1.5 * metrics.iqr\n\n    return metrics\n}","/*global tstring, page_globals, Promise, data_manager, common */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"../../lib/charts/chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"../../lib/charts/d3/boxvio-chart-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t\t: null,\n\tform_items_container\t\t: null,\n\tdiameter_chart_container\t: null,\n\tweight_chart_container\t\t: null,\n\n\t/**\n\t * Chart wrapper instance for diameter\n\t * @type {chart_wrapper}\n\t */\n\tdiameter_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for weight\n\t * @type {chart_wrapper}\n\t */\n\tweight_chart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.diameter_chart_container\t= options.diameter_chart_container\n\t\t\tself.weight_chart_container\t\t= options.weight_chart_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// number\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"number\",\n\t\t\t\tname \t\t: \"number\",\n\t\t\t\tq_column \t: \"term\",\n\t\t\t\tq_table \t: \"types\",\n\t\t\t\tlabel\t\t: tstring.number_key || \"Number & Key\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// denomination\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"denomination\",\n\t\t\t\tname \t\t: \"denomination\",\n\t\t\t\tq_column \t: \"ref_type_denomination\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.denomination || \"denomination\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\t\t\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\t\t\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// scroll to head result\n\t\t\tif (scroll_result) {\n\t\t\t\tthis.diameter_chart_container.scrollIntoView(\n\t\t\t\t\t{behavior: \"smooth\", block: \"start\", inline: \"nearest\"}\n\t\t\t\t);\n\t\t\t}\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\tconsole.log(parsed_data)\n\n\t\t\t\t// const diameters = parsed_data\n\t\t\t\t// \t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t// \t.flat()\n\t\t\t\t// \t.filter((v) => v)\n\t\t\t\t// console.log(diameters)\n\n\t\t\t\t// this.chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.chart_wrapper_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t'Diameter'\n\t\t\t\t// )\n\t\t\t\t// this.chart_wrapper.render()\n\n\t\t\t\tconst data = {}\n\t\t\t\tfor (const ele of parsed_data) {\n\t\t\t\t\tconst name = ele.term.split(',')[0]\n\t\t\t\t\tif (!['12', '59', '62', '18','11a','14'].includes(name)) continue\n\t\t\t\t\t// if (!['59', '62'].includes(name)) continue\n\t\t\t\t\tconst tmpData = {}\n\t\t\t\t\tconst calculable = ele.full_coins_reference_calculable\n\t\t\t\t\tconst diameter_max = ele.full_coins_reference_diameter_max\n\t\t\t\t\tconst diameter_min = ele.full_coins_reference_diameter_min\n\t\t\t\t\tconst weight = ele.full_coins_reference_weight\n\t\t\t\t\tif (diameter_max && diameter_max.length) {\n\t\t\t\t\t\ttmpData.diameter_max = diameter_max.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (diameter_min && diameter_min.length) {\n\t\t\t\t\t\ttmpData.diameter_min = diameter_min.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (weight && weight.length) {\n\t\t\t\t\t\ttmpData.weight = weight.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(tmpData).length) {\n\t\t\t\t\t\tdata[name] = tmpData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(data)\n\n\t\t\t\t// Diameters\n\t\t\t\tconst diameters = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tdiameters[name] = props.diameter_max\n\t\t\t\t}\n\t\t\t\tthis.diameter_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.diameter_chart_container,\n\t\t\t\t\tdiameters,\n\t\t\t\t\t'Diameter'\n\t\t\t\t)\n\t\t\t\tthis.diameter_chart_wrapper.render()\n\n\t\t\t\t// Diameters\n\t\t\t\tconst weights = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tweights[name] = props.weight\n\t\t\t\t}\n\t\t\t\tthis.weight_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.weight_chart_container,\n\t\t\t\t\tweights,\n\t\t\t\t\t'Weight'\n\t\t\t\t)\n\t\t\t\tthis.weight_chart_wrapper.render()\n\n\t\t\t})\n\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load json data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 30\n\t\t\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\n\t},\n\n}//end analysis\n\n"],"mappings":"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"}