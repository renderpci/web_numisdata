{"version":3,"names":["COLOR_PALETTE","chart_wrapper","div_wrapper","this","constructor","Error","_n_charts_created","id","download_chart_container","undefined","controls_container","d3_chart_wrapper","call","svg","toggle_visibility","element","attr","transition","linspace","start","stop","nsteps","delta","d3","range","map","i","compute_n_bins","boxvio_chart_wrapper","data","ylabel","_data","_ylabel","_metrics","name","values","Object","entries","calc_metrics","_outliers","filter","v","lower_fence","upper_fence","_data_extent","extent","flat","_full_width","_full_height","_chart","margin","top","right","bottom","left","width","height","yscale","scaleLinear","domain","clamp","yaxis","axisLeft","violin_scale_default","violin_scale","box_scale_default","box_scale","xscale","scaleBand","keys","xaxis","axisBottom","histogram","bin","thresholds","sturges","value","d","bins","key","_graphics","root_g","violins_g","boxes_g","outliers","metrics","max","quartile3","median","mean","iqr","quartile1","min","quantile","prototype","id_string","render","self","replaceChildren","common","create_dom_element","element_type","class_name","style","display","parent","format_select","format","get_supported_export_formats","text_content","toUpperCase","addEventListener","download_chart","filename","download_func_name","setPrototypeOf","select","append","download_chart_as_svg","svg_data","node","outerHTML","svg_blob","Blob","type","url","URL","createObjectURL","tmpLink","href","setAttribute","click","remove","revokeObjectURL","sqrt","Math","ceil","length","log2","rice","pow","doane","n","sigma","std","deviation","sum","skew","abs","scott","freedman_diaconis","set_violin_scale","scale","selectAll","_render_violins","set_box_scale","_render_boxes","_render_chart","_render_control_panel","_render_axis","g","text","is_g_ready","chart","x_num","ele","bandwidth","bin_obj","datum","area","x0","x1","y","curve","curveCatmullRom","boxes","box_width","color","group_box","outlier","whiskers","controls_container_id","show_violins_checkbox_id","show_violins_checkbox","checked","show_boxes_checkbox_id","show_boxes_checkbox","show_outliers_checkbox_id","show_outliers_checkbox","group","violin_scale_slider","Number","box_scale_slider","analysis","form","area_name","row","export_data_container","form_items_container","diameter_chart_container","weight_chart_container","diameter_chart_wrapper","weight_chart_wrapper","set_up","options","form_node","render_form","appendChild","fragment","DocumentFragment","form_factory","form_row","item_factory","label","tstring","mint","q_column","value_wrapper","eq","eq_in","eq_out","is_term","callback","form_item","activate_autocomplete","table","q_table","number_key","group_op","denomination","submit_group","search","e","preventDefault","form_submit","reset","window","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","scrollIntoView","behavior","block","inline","search_rows","limit","process_result","fn","columns","then","parsed_data","event_manager","publish","console","log","ref_type_number","includes","tmpData","calculable","full_coins_reference_calculable","diameter_max","full_coins_reference_diameter_max","diameter_min","full_coins_reference_diameter_min","weight","full_coins_reference_weight","diameters","props","weights","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","Promise","resolve","sql_filter","parse_sql_filter","request_body","dedalo_get","join","count","data_manager","request","body","response","page","parse_catalog_data","result"],"sources":["../../lib/charts/chart-wrapper.js","../../lib/charts/d3/d3-chart-wrapper.js","../../lib/charts/d3/utils.js","../../lib/charts/compute-n-bins.js","../../lib/charts/d3/boxvio-chart-wrapper.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Color palette, totally stolen from matplotlib\n * @type {string[]}\n */\nexport const COLOR_PALETTE = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']\n\n\n/**\n * Chart wrapper class\n * \n * It clears the container div during render, so subclasses should work with the dom\n * after the render method of this superclass has been called\n * @class\n * @abstract\n * @param {Element} div_wrapper \n */\nexport function chart_wrapper(div_wrapper) {\n    if (this.constructor === chart_wrapper) {\n        throw new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper._n_charts_created++;\n    /**\n     * Unique identifier for the chart.\n     * \n     * Subclasses MUST use this in order to assing IDs\n     * to DOM elements, in order to avoid bugs and cross-chart events\n     * @type {number}\n     */\n    this.id = chart_wrapper._n_charts_created\n    /**\n     * Div element wrapping the chart itself and\n     * the controls\n     * @type {Element}\n     * @protected\n     */\n    this.div_wrapper = div_wrapper\n    /**\n     * Div container for chart download\n     * @type {Element}\n     * @protected\n     */\n    this.download_chart_container = undefined\n    /**\n     * Div container for user controls\n     * Used freely by each subclass\n     * @type {Element}\n     * @protected\n     */\n    this.controls_container = undefined\n}\n\n/**\n * Amount of created charts\n * @type {number}\n * @static\n * @private\n */\nchart_wrapper._n_charts_created = 0;\n\n/**\n * Get a string representing the ID of the chart\n * @returns {string} the id as a string\n *          (`'chart1'`, `'chart2'`, ...)\n */\nchart_wrapper.prototype.id_string = function () {\n    return `chart${this.id}`\n}\n\n/**\n * Render the chart and controls\n * \n * Empties the div wrapper and resets properties\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n */\nchart_wrapper.prototype.render = function () {\n    // Save this chart_wrapper intance\n    /**\n     * This chart_wrapper intance\n     * @type {chart_wrapper}\n     */\n    const self = this\n    // Remove all children in the div_wrapper\n    this.div_wrapper.replaceChildren()\n    // Set controls container to undefined\n    this.controls_container = undefined\n    // Create the chart download section\n    this.download_chart_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'download_chart_container',\n        class_name: 'o-purple',\n        style: {\n            'display': 'flex',\n            'flex-direction': 'row',\n            'justify-content': 'center',\n        },\n        parent: this.div_wrapper,\n    })\n    const format_select = common.create_dom_element({\n        element_type: 'select',\n        id: 'chart_export_format',\n        style: {\n            'width': '80%',\n        },\n        parent: this.download_chart_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const format of this.get_supported_export_formats()) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: format,\n            text_content: format.toUpperCase(),\n            parent: format_select,\n        })\n    }\n    const chart_download_button = common.create_dom_element({\n        element_type: 'button',\n        text_content: 'Download',\n        style: {\n            'width': '20%',\n        },\n        parent: this.download_chart_container,\n    })\n    chart_download_button.addEventListener('click', () => {\n        self.download_chart(format_select.value)\n    })\n}\n\n/**\n * Download the chart as an image\n * \n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n    /**\n     * File name for the chart\n     * @type {string}\n     */\n    const filename = `${DEFAULT_CHART_NAME}.${format}`\n    /**\n     * Function name for downloading with the particular format\n     * @type {string}\n     */\n    const download_func_name = `download_chart_as_${format}`\n    if (this[download_func_name] === undefined) {\n        throw new Error(`${download_func_name} is not implemented!`)\n    }\n    this[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n * \n * Subclasses must return their own supported formats, e.g.,\n * `['png', 'jpg', 'eps']`\n * @function\n * @returns {string[]} the supported formats\n * @abstract\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n    throw new Error(`Abstract method 'chart_wrapper.download_chart' cannot be called`)\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div, so that it spans all width\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * @param {Element} div_wrapper the div containing the chart\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper) {\n    if (this.constructor === d3_chart_wrapper) {\n        throw new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper.call(this, div_wrapper)\n    /**\n     * D3 selection object for the root `svg` tag\n     * @protected\n     */\n    this.svg = undefined\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the chart (d3) and controls\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name d3_chart_wrapper#render\n * @function\n */\nd3_chart_wrapper.prototype.render = function () {\n    chart_wrapper.prototype.render.call(this)\n\n    this.svg = d3.select(this.div_wrapper)\n        .append('svg')\n        .attr('version', '1.1') // When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n        .attr('xmlns', 'http://www.w3.org/2000/svg')\n        .attr('width', '100%')\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n    return ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n    const svg_data = this.svg.node().outerHTML\n    const svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n    const url = URL.createObjectURL(svg_blob)\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    const tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: url,\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n    URL.revokeObjectURL(url)\n}","/**\n * Toggle visibility of a d3 selection element\n * @param {d3.selection} element the elememt\n */\nexport function toggle_visibility(element) {\n    if (element.attr('opacity') == 0) {\n        element.transition().attr('opacity', 1)\n    } else {\n        element.transition().attr('opacity', 0)\n    }\n}\n\n/**\n * Get an array of values, evenly spaced over an\n * interval\n * \n * https://gist.github.com/davebiagioni/1ac21feb1c2db04be4e6\n * @param {number} start start value\n * @param {number} stop stop value\n * @param {number} nsteps amount of spets\n * @returns {number[]} the values\n */\nexport function linspace(start, stop, nsteps){\n    const delta = (stop-start)/(nsteps-1)\n    return d3.range(nsteps).map((i) => start+i*delta)\n}","/**\n * Implements methods for computing the number of\n * bins based on the data values\n * \n * Each method takes an array of data values as input\n * and outputs the number of bins\n * @class\n */\nexport function compute_n_bins() {}\n\n/**\n * Compute number of bins with the square root rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sqrt = function (values) {\n\treturn Math.ceil(Math.sqrt(values.length))\n}\n\n/**\n * Compute number of bins with the Sturges rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sturges = function (values) {\n\treturn Math.ceil(Math.log2(values.length)) + 1\n}\n\n/**\n * Compute number of bins with the Rice rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.rice = function (values) {\n\treturn Math.ceil(2*Math.pow(values.length, 1/3))\n}\n\n/**\n * Compute number of bins with Doane's formula\n * \n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.doane = function (values) {\n\tconst n = values.length\n\tif (n < 2) {\n\t\tthrow new Error(\"Doane's rule needs at least 2 datapoints\")\n\t}\n\tconst sigma = Math.sqrt(6*(n-2)/((n+1)*(n+3)))\n\tconst std = d3.deviation(values)\n\tconst mean = d3.mean(values)\n\tconst sum = d3.sum(values)\n\t// The adjusted Fisher-Pearson skewness coefficient\n\t// https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/skewness.htm\n\tconst skew = (Math.sqrt(n*(n+1))/(n-2))*((sum-n*mean)/(n*Math.pow(std, 3)))\n\treturn 1 + Math.ceil(Math.log2(n)) + Math.ceil(Math.log2(1+Math.abs(skew)/sigma))\n}\n\n/**\n * Compute number of bins with Scott's normal\n * reference rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.scott = function (values) {\n\tif (values.length < 2) {\n\t\tthrow new Error(\n\t\t\t\"Cannot compute standard deviation of an array with less than 2 values\"\n\t\t)\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(3.49*d3.deviation(values))\n\t)\n}\n\n/**\n * Compute number of bins with Freedman-Diaconis' choice\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.freedman_diaconis = function (values) {\n\tconst quartile3 = d3.quantile(values, 0.75)\n\tconst quartile1 = d3.quantile(values, 0.25)\n\tconst iqr =  quartile3 - quartile1\n\tif (quartile1 === quartile3) {\n\t\tthrow new Error(\"IQR is 0!\")\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(2*iqr)\n\t)\n}\n","\"use strict\";\n\nimport { d3_chart_wrapper } from \"./d3-chart-wrapper\";\nimport { COLOR_PALETTE } from \"../chart-wrapper\";\nimport { toggle_visibility, linspace } from \"./utils\";\nimport { compute_n_bins } from \"../compute-n-bins\";\n\n\n/**\n * Boxplot + violin chart wrapper\n * \n * Inspired in http://bl.ocks.org/asielen/d15a4f16fa618273e10f\n * \n * @param {Element}  div_wrapper the div to work in\n * @param {{[group_name: string]: number[]}} data the input data: group name\n *        and array of values\n * @param {string} ylabel the y label\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper, data, ylabel) {\n    d3_chart_wrapper.call(this, div_wrapper)\n    /**\n     * Data: group name to array of values\n     * @type {Object.<string, number[]>}\n     * @private\n     */\n    this._data = data\n    /**\n     * The label for the y axis\n     * @type {string}\n     * @private\n     */\n    this._ylabel = ylabel\n    /**\n     * Boxplot metrics for each group name\n     * @type {{[group_name: string]: {\n     *  max: number,\n     *  upper_fence: number,\n     *  quartile3: number,\n     *  median: number,\n     *  mean: number,\n     *  iqr: number,\n     *  quartile1: number,\n     *  lower_fence: number,\n     *  min: number,\n     * }}}\n     * @private\n     */\n    this._metrics = {}\n    for (const [name, values] of Object.entries(data)) {\n        this._metrics[name] = calc_metrics(values)\n    }\n    /**\n     * Outliers per group name\n     * @type {{[group_name: string]: number[]}}\n     * @private\n     */\n    this._outliers = {}\n    for (const [name, values] of Object.entries(data)) {\n        this._outliers[name] = values.filter(\n            (v) => v < this._metrics[name].lower_fence || v > this._metrics[name].upper_fence\n        )\n    }\n    /**\n     * Maximum and minimum of the input data\n     * @type {[number, number]}\n     */\n    this._data_extent = d3.extent(Object.values(data).flat())\n    /**\n     * Full width of svg\n     * @type {number}\n     */\n    this._full_width = 960\n    /**\n     * Full height of svg\n     * @type {number}\n     */\n    this._full_height = 420\n    /**\n     * Non-graphic components of the chart: setting, scales, etc.\n     * @private\n     */\n    this._chart = {}\n    this._chart.margin = { top: 15, right: 3, bottom: 23, left: 50 }\n    this._chart.width = this._full_width - this._chart.margin.left - this._chart.margin.right\n    this._chart.height = this._full_height - this._chart.margin.top - this._chart.margin.bottom\n    this._chart.yscale = d3.scaleLinear()\n        .range([this._chart.height, 0])\n        .domain(this._data_extent)\n        .clamp(true)  // when input outside of domain, its output is clamped to range\n    this._chart.yaxis = d3.axisLeft(this._chart.yscale)\n    this._chart.violin_scale_default = 0.8\n    this._chart.violin_scale = this._chart.violin_scale_default\n    this._chart.box_scale_default = 0.3\n    this._chart.box_scale = this._chart.box_scale_default\n    this._chart.xscale = d3.scaleBand()\n        .domain(Object.keys(this._data))\n        .range([0, this._chart.width])\n        // .padding(1-this._chart.violin_scale)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n    this._chart.xaxis = d3.axisBottom(this._chart.xscale)\n    // this._chart.n_bins_default = 15\n    // this._chart.n_bins = this._chart.n_bins_default\n    // this._chart.max_bins_multiplier = 3\n    this._chart.histogram = {}\n    for (const [name, values] of Object.entries(data)) {\n        const extent = d3.extent(values)\n        this._chart.histogram[name] = d3.bin()\n            .domain(extent)\n            .thresholds(\n                linspace(extent[0], extent[1], compute_n_bins.sturges(values))\n            )\n            .value((d) => d)\n    }\n    this._chart.bins = Object.entries(data).map(\n        ([name, values]) => {return {key: name, value: this._chart.histogram[name](values)}}\n    )\n    /**\n     * Graphic components of the chart: d3 selection objects\n     * @private\n     * @type {{[name: string]: d3.selection}}\n     */\n    this._graphics = {\n        root_g: null,\n        violins_g: null,\n        boxes_g: null,\n        outliers: {},\n    }\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Set the scale for the violins\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_violin_scale\n */\nboxvio_chart_wrapper.prototype.set_violin_scale = function (scale) {\n    this._chart.violin_scale = scale\n    // Remove the violin graphics, only leaving its root g tag (violins_g)\n    this._graphics.violins_g.selectAll('*').remove()\n    this._render_violins(true)\n}\n\n/**\n * Set the scale for the boxes\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_box_scale\n */\n boxvio_chart_wrapper.prototype.set_box_scale = function (scale) {\n    this._chart.box_scale = scale\n    // Remove the box graphics, only leaving its root g tag (boxes_g)\n    this._graphics.boxes_g.selectAll('*').remove()\n    this._render_boxes(true)\n}\n\n/**\n * Render the chart and the control panel\n * @function\n * @name boxvio_chart_wrapper#render\n */\nboxvio_chart_wrapper.prototype.render = function () {\n    // Call super render method\n    d3_chart_wrapper.prototype.render.call(this)\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_chart\n */\nboxvio_chart_wrapper.prototype._render_chart = function () {\n\n    // Set viewBox of svg\n    this.svg.attr('viewBox', `0 0 ${this._full_width} ${this._full_height}`)\n\n    // Root g tag\n    this._graphics.root_g = this.svg.append('g')\n        .attr('transform', `translate(${this._chart.margin.left},${this._chart.margin.top})`)\n\n    this._render_axis()\n    this._render_violins()\n    this._render_boxes()\n\n}\n\n/**\n * Render the axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_axis\n */\nboxvio_chart_wrapper.prototype._render_axis = function () {\n    const g = this._graphics.root_g\n    // Render x axis\n    g.append('g')\n        .attr('transform', `translate(0,${this._chart.height})`)\n        .call(this._chart.xaxis)\n    // Render y axis\n    g.append('g')\n        .call(this._chart.yaxis)\n\n    // Render Y axis label\n    g.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', -this._chart.margin.left + 20)\n        .attr('x', -this._chart.height / 2)\n        .text(this._ylabel);\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violins = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Get the largest count in a bin for each group,\n    // as it will be maximum width\n    const max_count = chart.bins.map((v) => d3.max(v.value, (ele) => ele.length))\n    // Make a linear scales to map bin counts to bandwidth\n    const x_num = max_count.map(\n        (v) => d3\n            .scaleLinear()\n            .range([0, chart.xscale.bandwidth()])\n            .domain([-v, v])\n    )\n\n    // Render\n    if (!is_g_ready) {\n        this._graphics.violins_g = g.append('g')\n    }\n    const violins_g = this._graphics.violins_g\n    for (const [i, bin_obj] of Object.entries(chart.bins)) {\n        violins_g\n            .append('g')\n                .attr('transform', `translate(${chart.xscale(bin_obj.key)},0)`)\n            .append('path')\n            .datum(bin_obj.value)\n                .style('stroke', 'gray')\n                .style('stroke-width', 0.4)\n                .style('fill', 'ghostwhite')\n                .attr('d', d3.area()\n                    .x0((d) => x_num[i](-d.length*chart.violin_scale))\n                    .x1((d) => x_num[i](d.length*chart.violin_scale))\n                    .y((d) => chart.yscale(d.x0))\n                    .curve(d3.curveCatmullRom)\n                )\n    }\n\n}\n\n/**\n * Render the boxes (including whiskers and outliers)\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for boxes is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_boxes\n */\nboxvio_chart_wrapper.prototype._render_boxes = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Draw\n    if (!is_g_ready) {\n        this._graphics.boxes_g = g.append('g')\n    }\n    const boxes = this._graphics.boxes_g\n    const bandwidth = chart.xscale.bandwidth()\n    const box_width = this._chart.box_scale * bandwidth\n\n    const whiskers_lw = 2\n    const median_lw = 3\n\n    // Iterate over the groups\n    for (const [i, name] of Object.entries(Object.keys(this._data))) {\n\n        const metrics = this._metrics[name]\n        const color = COLOR_PALETTE[i % COLOR_PALETTE.length]  // loop around!\n\n        const group_box = boxes.append('g')\n            .attr('transform', `translate(${chart.xscale(name) + bandwidth / 2},0)`)\n\n        // Draw outliers\n        this._graphics.outliers[name] = group_box.append('g')\n        const outliers = this._graphics.outliers[name]\n        for (const outlier of this._outliers[name]) {\n            outliers.append('circle')\n                .attr('cx', 0)\n                .attr('cy', chart.yscale(outlier))\n                .attr('r', 4)\n                .style('fill', color)\n                .style('opacity', 0.7)\n        }\n\n        // Draw whiskers\n        const whiskers = group_box.append('g')\n        whiskers.append('line')  // vertical line\n            .attr('x1', 0)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', 0)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // lower horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.lower_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // upper horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.upper_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n\n        // Draw IQR box\n        const iqr = group_box.append('g')\n        iqr.append('rect')  // iqr rect\n            .attr('x', -box_width / 2)\n            .attr('y', chart.yscale(metrics.quartile3))\n            .attr('width', box_width)\n            .attr('height', chart.yscale(metrics.quartile1) - chart.yscale(metrics.quartile3))\n            .attr('fill', color)\n        iqr.append('line')  // median line\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.median))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.median))\n            .attr('stroke', 'black')\n            .attr('stroke-width', median_lw)\n        iqr.append('circle')  // median dot\n            .attr('cx', 0)\n            .attr('cy', chart.yscale(metrics.median))\n            .attr('r', 4.5)\n            .style('fill', 'white')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 2)\n    }\n\n}\n\n\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_control_panel\n */\nboxvio_chart_wrapper.prototype._render_control_panel = function () {\n\n    // Create controls container\n    const controls_container_id = `${this.id_string()}_controls`\n    this.controls_container = common.create_dom_element({\n        element_type: 'div',\n        id: controls_container_id,\n        class_name: 'o-green',\n        parent: this.div_wrapper,\n    })\n\n    const show_violins_checkbox_id = `${this.id_string()}_show_violins_checkbox`\n    /**\n     * Checkbox for showing violins\n     * @type {Element}\n     */\n    const show_violins_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_violins_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_violins_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_violins_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show violins',\n        parent: this.controls_container,\n    })\n    show_violins_label.setAttribute('for', show_violins_checkbox_id)\n    show_violins_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.violins_g)\n    })\n\n    const show_boxes_checkbox_id = `${this.id_string()}_show_boxes_checkbox`\n    /**\n     * Checkbox for showing boxes\n     * @type {Element}\n     */\n     const show_boxes_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_boxes_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_boxes_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_boxes_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show boxes',\n        parent: this.controls_container,\n    })\n    show_boxes_label.setAttribute('for', show_boxes_checkbox_id)\n    show_boxes_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.boxes_g)\n    })\n\n    const show_outliers_checkbox_id = `${this.id_string()}_show_outliers_checkbox`\n    /**\n     * Checkbox for showing outliers\n     * @type {Element}\n     */\n    const show_outliers_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_outliers_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_outliers_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_outliers_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show outliers',\n        parent: this.controls_container,\n    })\n    show_outliers_label.setAttribute('for', show_outliers_checkbox_id)\n    show_outliers_checkbox.addEventListener('change', () => {\n        for (const group of Object.values(this._graphics.outliers)) {\n            toggle_visibility(group)\n        }\n    })\n\n    /**\n     * Slider for violin scale\n     * @type {Element}\n     */\n    const violin_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.violin_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    violin_scale_slider.setAttribute('min', 0)\n    violin_scale_slider.setAttribute('max', 1)\n    violin_scale_slider.setAttribute('step', 0.05)\n    violin_scale_slider.value = this._chart.violin_scale_default\n    violin_scale_slider.addEventListener('input', () => {\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n    /**\n     * Reset button for the violin_scale_slider\n     * @type {Element}\n     */\n    const violin_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    violin_scale_slider_reset.addEventListener('click', () => {\n        violin_scale_slider.value = this._chart.violin_scale_default\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n\n    /**\n     * Slider for box scale\n     * @type {Element}\n     */\n    const box_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.box_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    box_scale_slider.setAttribute('min', 0)\n    box_scale_slider.setAttribute('max', 1)\n    box_scale_slider.setAttribute('step', 0.05)\n    box_scale_slider.value = this._chart.box_scale_default\n    box_scale_slider.addEventListener('input', () => {\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n    /**\n     * Reset button for the box_scale_slider\n     * @type {Element}\n     */\n    const box_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    box_scale_slider_reset.addEventListener('click', () => {\n        box_scale_slider.value = this._chart.box_scale_default\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n\n}\n\n// HELPER FUNCTIONS\n\n/**\n * Compute (boxplot) metrics for the data\n * @param {number[]} values the data values\n * @returns {{\n *  max: number,\n *  upper_fence: number,\n *  quartile3: number,\n *  median: number,\n *  mean: number,\n *  iqr: number,\n *  quartile1: number,\n *  lower_fence: number,\n *  min: number,\n * }}\n */\nfunction calc_metrics(values) {\n    const metrics = {\n        max: null,\n        upper_fence: null,\n        quartile3: null,\n        median: null,\n        mean: null,\n        iqr: null,\n        quartile1: null,\n        lower_fence: null,\n        min: null,\n    }\n\n    metrics.min = d3.min(values)\n    metrics.quartile1 = d3.quantile(values, 0.25)\n    metrics.median = d3.median(values)\n    metrics.mean = d3.mean(values)\n    metrics.quartile3 = d3.quantile(values, 0.75)\n    metrics.max = d3.max(values)\n    metrics.iqr = metrics.quartile3 - metrics.quartile1\n    metrics.lower_fence = metrics.quartile1 - 1.5 * metrics.iqr\n    metrics.upper_fence = metrics.quartile3 + 1.5 * metrics.iqr\n\n    return metrics\n}","/*global tstring, page_globals, Promise, data_manager, common */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"../../lib/charts/chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"../../lib/charts/d3/boxvio-chart-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t\t: null,\n\tform_items_container\t\t: null,\n\tdiameter_chart_container\t: null,\n\tweight_chart_container\t\t: null,\n\n\t/**\n\t * Chart wrapper instance for diameter\n\t * @type {chart_wrapper}\n\t */\n\tdiameter_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for weight\n\t * @type {chart_wrapper}\n\t */\n\tweight_chart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.diameter_chart_container\t= options.diameter_chart_container\n\t\t\tself.weight_chart_container\t\t= options.weight_chart_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// number\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"number\",\n\t\t\t\tname \t\t: \"number\",\n\t\t\t\tq_column \t: \"term\",\n\t\t\t\tq_table \t: \"types\",\n\t\t\t\tlabel\t\t: tstring.number_key || \"Number & Key\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tgroup_op \t: '$or',\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// denomination\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"denomination\",\n\t\t\t\tname \t\t: \"denomination\",\n\t\t\t\tq_column \t: \"ref_type_denomination\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.denomination || \"denomination\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\t\t\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\t\t\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// scroll to head result\n\t\t\tif (scroll_result) {\n\t\t\t\tthis.diameter_chart_container.scrollIntoView(\n\t\t\t\t\t{behavior: \"smooth\", block: \"start\", inline: \"nearest\"}\n\t\t\t\t);\n\t\t\t}\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tprocess_result\t: {\n\t\t\t\t\tfn\t\t: 'process_result::add_parents_and_children_recursive',\n\t\t\t\t\tcolumns\t: [{name : \"parents\"}]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\tconsole.log(parsed_data)\n\n\t\t\t\t// const diameters = parsed_data\n\t\t\t\t// \t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t// \t.flat()\n\t\t\t\t// \t.filter((v) => v)\n\t\t\t\t// console.log(diameters)\n\n\t\t\t\t// this.chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.chart_wrapper_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t'Diameter'\n\t\t\t\t// )\n\t\t\t\t// this.chart_wrapper.render()\n\n\t\t\t\tconst data = {}\n\t\t\t\tfor (const ele of parsed_data) {\n\t\t\t\t\tconst name = ele.ref_type_number\n\t\t\t\t\tif (!['12', '59', '62', '18','11a','14'].includes(name)) continue\n\t\t\t\t\t// if (!['59', '62'].includes(name)) continue\n\t\t\t\t\tconst tmpData = {}\n\t\t\t\t\tconst calculable = ele.full_coins_reference_calculable\n\t\t\t\t\tconst diameter_max = ele.full_coins_reference_diameter_max\n\t\t\t\t\tconst diameter_min = ele.full_coins_reference_diameter_min\n\t\t\t\t\tconst weight = ele.full_coins_reference_weight\n\t\t\t\t\tif (diameter_max && diameter_max.length) {\n\t\t\t\t\t\ttmpData.diameter_max = diameter_max.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (diameter_min && diameter_min.length) {\n\t\t\t\t\t\ttmpData.diameter_min = diameter_min.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (weight && weight.length) {\n\t\t\t\t\t\ttmpData.weight = weight.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(tmpData).length) {\n\t\t\t\t\t\tdata[name] = tmpData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(data)\n\n\t\t\t\t// Diameters\n\t\t\t\tconst diameters = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tdiameters[name] = props.diameter_max\n\t\t\t\t}\n\t\t\t\tthis.diameter_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.diameter_chart_container,\n\t\t\t\t\tdiameters,\n\t\t\t\t\t'Diameter'\n\t\t\t\t)\n\t\t\t\tthis.diameter_chart_wrapper.render()\n\n\t\t\t\t// Diameters\n\t\t\t\tconst weights = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tweights[name] = props.weight\n\t\t\t\t}\n\t\t\t\tthis.weight_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.weight_chart_container,\n\t\t\t\t\tweights,\n\t\t\t\t\t'Weight'\n\t\t\t\t)\n\t\t\t\tthis.weight_chart_wrapper.render()\n\n\t\t\t})\n\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load json data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 30\n\t\t\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\n\t},\n\n}//end analysis\n\n"],"mappings":"gDAaA,MAMaA,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAY1H,SAASC,EAAcC,GAC1B,GAAIC,KAAKC,cAAgBH,EACrB,MAAM,IAAII,MAAM,yDAEpBJ,EAAcK,oBAQdH,KAAKI,GAAKN,EAAcK,kBAOxBH,KAAKD,YAAcA,EAMnBC,KAAKK,8BAA2BC,EAOhCN,KAAKO,wBAAqBD,CAC9B,CCjDO,SAASE,EAAiBT,GAC7B,GAAIC,KAAKC,cAAgBO,EACrB,MAAM,IAAIN,MAAM,4DAEpBJ,EAAcW,KAAKT,KAAMD,GAKzBC,KAAKU,SAAMJ,CAEf,CCtBO,SAASK,EAAkBC,GACC,GAA3BA,EAAQC,KAAK,WACbD,EAAQE,aAAaD,KAAK,UAAW,GAErCD,EAAQE,aAAaD,KAAK,UAAW,EAE7C,CAYO,SAASE,EAASC,EAAOC,EAAMC,GAClC,MAAMC,GAASF,EAAKD,IAAQE,EAAO,GACnC,OAAOE,GAAGC,MAAMH,GAAQI,KAAKC,GAAMP,EAAMO,EAAEJ,GAC/C,CCjBO,SAASK,IAAiB,CCY1B,SAASC,EAAqB1B,EAAa2B,EAAMC,GACpDnB,EAAiBC,KAAKT,KAAMD,GAM5BC,KAAK4B,MAAQF,EAMb1B,KAAK6B,QAAUF,EAgBf3B,KAAK8B,SAAW,GAChB,IAAK,MAAOC,EAAMC,KAAWC,OAAOC,QAAQR,GACxC1B,KAAK8B,SAASC,GAAQI,EAAaH,GAOvChC,KAAKoC,UAAY,GACjB,IAAK,MAAOL,EAAMC,KAAWC,OAAOC,QAAQR,GACxC1B,KAAKoC,UAAUL,GAAQC,EAAOK,QACzBC,GAAMA,EAAItC,KAAK8B,SAASC,GAAMQ,aAAeD,EAAItC,KAAK8B,SAASC,GAAMS,cAO9ExC,KAAKyC,aAAerB,GAAGsB,OAAOT,OAAOD,OAAON,GAAMiB,QAKlD3C,KAAK4C,YAAc,IAKnB5C,KAAK6C,aAAe,IAKpB7C,KAAK8C,OAAS,GACd9C,KAAK8C,OAAOC,OAAS,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,IAC5DnD,KAAK8C,OAAOM,MAAQpD,KAAK4C,YAAc5C,KAAK8C,OAAOC,OAAOI,KAAOnD,KAAK8C,OAAOC,OAAOE,MACpFjD,KAAK8C,OAAOO,OAASrD,KAAK6C,aAAe7C,KAAK8C,OAAOC,OAAOC,IAAMhD,KAAK8C,OAAOC,OAAOG,OACrFlD,KAAK8C,OAAOQ,OAASlC,GAAGmC,cACnBlC,MAAM,CAACrB,KAAK8C,OAAOO,OAAQ,IAC3BG,OAAOxD,KAAKyC,cACZgB,OAAM,GACXzD,KAAK8C,OAAOY,MAAQtC,GAAGuC,SAAS3D,KAAK8C,OAAOQ,QAC5CtD,KAAK8C,OAAOc,qBAAuB,GACnC5D,KAAK8C,OAAOe,aAAe7D,KAAK8C,OAAOc,qBACvC5D,KAAK8C,OAAOgB,kBAAoB,GAChC9D,KAAK8C,OAAOiB,UAAY/D,KAAK8C,OAAOgB,kBACpC9D,KAAK8C,OAAOkB,OAAS5C,GAAG6C,YACnBT,OAAOvB,OAAOiC,KAAKlE,KAAK4B,QACxBP,MAAM,CAAC,EAAGrB,KAAK8C,OAAOM,QAE3BpD,KAAK8C,OAAOqB,MAAQ/C,GAAGgD,WAAWpE,KAAK8C,OAAOkB,QAI9ChE,KAAK8C,OAAOuB,UAAY,GACxB,IAAK,MAAOtC,EAAMC,KAAWC,OAAOC,QAAQR,GAAO,CAC/C,MAAMgB,EAAStB,GAAGsB,OAAOV,GACzBhC,KAAK8C,OAAOuB,UAAUtC,GAAQX,GAAGkD,MAC5Bd,OAAOd,GACP6B,WACGxD,EAAS2B,EAAO,GAAIA,EAAO,GAAIlB,EAAegD,QAAQxC,KAEzDyC,OAAOC,GAAMA,GAC1B,CACI1E,KAAK8C,OAAO6B,KAAO1C,OAAOC,QAAQR,GAAMJ,KACpC,EAAES,EAAMC,MAAoB,CAAC4C,IAAK7C,EAAM0C,MAAOzE,KAAK8C,OAAOuB,UAAUtC,GAAMC,OAO/EhC,KAAK6E,UAAY,CACbC,OAAQ,KACRC,UAAW,KACXC,QAAS,KACTC,SAAU,GAElB,CA+ZA,SAAS9C,EAAaH,GAClB,MAAMkD,EAAU,CACZC,IAAK,KACL3C,YAAa,KACb4C,UAAW,KACXC,OAAQ,KACRC,KAAM,KACNC,IAAK,KACLC,UAAW,KACXjD,YAAa,KACbkD,IAAK,MAaT,OAVAP,EAAQO,IAAMrE,GAAGqE,IAAIzD,GACrBkD,EAAQM,UAAYpE,GAAGsE,SAAS1D,EAAQ,KACxCkD,EAAQG,OAASjE,GAAGiE,OAAOrD,GAC3BkD,EAAQI,KAAOlE,GAAGkE,KAAKtD,GACvBkD,EAAQE,UAAYhE,GAAGsE,SAAS1D,EAAQ,KACxCkD,EAAQC,IAAM/D,GAAG+D,IAAInD,GACrBkD,EAAQK,IAAML,EAAQE,UAAYF,EAAQM,UAC1CN,EAAQ3C,YAAc2C,EAAQM,UAAY,IAAMN,EAAQK,IACxDL,EAAQ1C,YAAc0C,EAAQE,UAAY,IAAMF,EAAQK,IAEjDL,CACX,CJ/eApF,EAAcK,kBAAoB,EAOlCL,EAAc6F,UAAUC,UAAY,WAChC,MAAO,QAAQ5F,KAAKI,IACxB,EAYAN,EAAc6F,UAAUE,OAAS,WAM7B,MAAMC,EAAO9F,KAEbA,KAAKD,YAAYgG,kBAEjB/F,KAAKO,wBAAqBD,EAE1BN,KAAKK,yBAA2B2F,OAAOC,mBAAmB,CACtDC,aAAc,MACd9F,GAAI,2BACJ+F,WAAY,WACZC,MAAO,CACHC,QAAW,OACX,iBAAkB,MAClB,kBAAmB,UAEvBC,OAAQtG,KAAKD,cAEjB,MAAMwG,EAAgBP,OAAOC,mBAAmB,CAC5CC,aAAc,SACd9F,GAAI,sBACJgG,MAAO,CACHhD,MAAS,OAEbkD,OAAQtG,KAAKK,2BAGjB,IAAK,MAAMmG,KAAUxG,KAAKyG,+BACtBT,OAAOC,mBAAmB,CACtBC,aAAc,SACdzB,MAAO+B,EACPE,aAAcF,EAAOG,cACrBL,OAAQC,IAGcP,OAAOC,mBAAmB,CACpDC,aAAc,SACdQ,aAAc,WACdN,MAAO,CACHhD,MAAS,OAEbkD,OAAQtG,KAAKK,2BAEKuG,iBAAiB,SAAS,KAC5Cd,EAAKe,eAAeN,EAAc9B,MAAK,GAE/C,EAcA3E,EAAc6F,UAAUkB,eAAiB,SAAUL,GAK/C,MAAMM,EAAW,SAAyBN,IAKpCO,EAAqB,qBAAqBP,IAChD,QAAiClG,IAA7BN,KAAK+G,GACL,MAAM,IAAI7G,MAAM,GAAG6G,yBAEvB/G,KAAK+G,GAAoBD,EAC7B,EAYAhH,EAAc6F,UAAUc,6BAA+B,WACnD,MAAM,IAAIvG,MAAM,kEACpB,EC/JA+B,OAAO+E,eAAexG,EAAiBmF,UAAW7F,EAAc6F,WAUhEnF,EAAiBmF,UAAUE,OAAS,WAChC/F,EAAc6F,UAAUE,OAAOpF,KAAKT,MAEpCA,KAAKU,IAAMU,GAAG6F,OAAOjH,KAAKD,aACrBmH,OAAO,OACPrG,KAAK,UAAW,OAChBA,KAAK,QAAS,8BACdA,KAAK,QAAS,OACvB,EAQAL,EAAiBmF,UAAUc,6BAA+B,WACtD,MAAO,CAAC,MACZ,EAQAjG,EAAiBmF,UAAUwB,sBAAwB,SAAUL,GACzD,MAAMM,EAAWpH,KAAKU,IAAI2G,OAAOC,UAC3BC,EAAW,IAAIC,KAAK,CAACJ,GAAW,CAAEK,KAAM,gCACxCC,EAAMC,IAAIC,gBAAgBL,GAK1BM,EAAU7B,OAAOC,mBAAmB,CACtCC,aAAc,IACd4B,KAAMJ,IAEVG,EAAQE,aAAa,WAAYjB,GACjCe,EAAQG,QACRH,EAAQI,SACRN,IAAIO,gBAAgBR,EACxB,EEjEAlG,EAAe2G,KAAO,SAAUnG,GAC/B,OAAOoG,KAAKC,KAAKD,KAAKD,KAAKnG,EAAOsG,QACnC,EAOA9G,EAAegD,QAAU,SAAUxC,GAClC,OAAOoG,KAAKC,KAAKD,KAAKG,KAAKvG,EAAOsG,SAAW,CAC9C,EAOA9G,EAAegH,KAAO,SAAUxG,GAC/B,OAAOoG,KAAKC,KAAK,EAAED,KAAKK,IAAIzG,EAAOsG,OAAQ,EAAE,GAC9C,EAQA9G,EAAekH,MAAQ,SAAU1G,GAChC,MAAM2G,EAAI3G,EAAOsG,OACjB,GAAIK,EAAI,EACP,MAAM,IAAIzI,MAAM,4CAEjB,MAAM0I,EAAQR,KAAKD,KAAK,GAAGQ,EAAE,KAAKA,EAAE,IAAIA,EAAE,KACpCE,EAAMzH,GAAG0H,UAAU9G,GACnBsD,EAAOlE,GAAGkE,KAAKtD,GACf+G,EAAM3H,GAAG2H,IAAI/G,GAGbgH,EAAQZ,KAAKD,KAAKQ,GAAGA,EAAE,KAAKA,EAAE,KAAMI,EAAIJ,EAAErD,IAAOqD,EAAEP,KAAKK,IAAII,EAAK,KACvE,OAAO,EAAIT,KAAKC,KAAKD,KAAKG,KAAKI,IAAMP,KAAKC,KAAKD,KAAKG,KAAK,EAAEH,KAAKa,IAAID,GAAMJ,GAC3E,EAQApH,EAAe0H,MAAQ,SAAUlH,GAChC,GAAIA,EAAOsG,OAAS,EACnB,MAAM,IAAIpI,MACT,yEAGF,OAAOkI,KAAKC,MACVjH,GAAG+D,IAAInD,GAAQZ,GAAGqE,IAAIzD,IAASoG,KAAKK,IAAIzG,EAAOsG,OAAQ,EAAE,IAAI,KAAKlH,GAAG0H,UAAU9G,IAElF,EAOAR,EAAe2H,kBAAoB,SAAUnH,GAC5C,MAAMoD,EAAYhE,GAAGsE,SAAS1D,EAAQ,KAChCwD,EAAYpE,GAAGsE,SAAS1D,EAAQ,KAChCuD,EAAOH,EAAYI,EACzB,GAAIA,IAAcJ,EACjB,MAAM,IAAIlF,MAAM,aAEjB,OAAOkI,KAAKC,MACVjH,GAAG+D,IAAInD,GAAQZ,GAAGqE,IAAIzD,IAASoG,KAAKK,IAAIzG,EAAOsG,OAAQ,EAAE,IAAI,EAAE/C,GAElE,ECwCAtD,OAAO+E,eAAevF,EAAqBkE,UAAWnF,EAAiBmF,WAQvElE,EAAqBkE,UAAUyD,iBAAmB,SAAUC,GACxDrJ,KAAK8C,OAAOe,aAAewF,EAE3BrJ,KAAK6E,UAAUE,UAAUuE,UAAU,KAAKrB,SACxCjI,KAAKuJ,iBAAgB,EACzB,EAQC9H,EAAqBkE,UAAU6D,cAAgB,SAAUH,GACtDrJ,KAAK8C,OAAOiB,UAAYsF,EAExBrJ,KAAK6E,UAAUG,QAAQsE,UAAU,KAAKrB,SACtCjI,KAAKyJ,eAAc,EACvB,EAOAhI,EAAqBkE,UAAUE,OAAS,WAEpCrF,EAAiBmF,UAAUE,OAAOpF,KAAKT,MAEvCA,KAAK0J,gBAEL1J,KAAK2J,uBACT,EAQAlI,EAAqBkE,UAAU+D,cAAgB,WAG3C1J,KAAKU,IAAIG,KAAK,UAAW,OAAOb,KAAK4C,eAAe5C,KAAK6C,gBAGzD7C,KAAK6E,UAAUC,OAAS9E,KAAKU,IAAIwG,OAAO,KACnCrG,KAAK,YAAa,aAAab,KAAK8C,OAAOC,OAAOI,QAAQnD,KAAK8C,OAAOC,OAAOC,QAElFhD,KAAK4J,eACL5J,KAAKuJ,kBACLvJ,KAAKyJ,eAET,EAQAhI,EAAqBkE,UAAUiE,aAAe,WAC1C,MAAMC,EAAI7J,KAAK6E,UAAUC,OAEzB+E,EAAE3C,OAAO,KACJrG,KAAK,YAAa,eAAeb,KAAK8C,OAAOO,WAC7C5C,KAAKT,KAAK8C,OAAOqB,OAEtB0F,EAAE3C,OAAO,KACJzG,KAAKT,KAAK8C,OAAOY,OAGtBmG,EAAE3C,OAAO,QACJrG,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBA,KAAK,IAAgC,GAA1Bb,KAAK8C,OAAOC,OAAOI,MAC9BtC,KAAK,KAAMb,KAAK8C,OAAOO,OAAS,GAChCyG,KAAK9J,KAAK6B,QACnB,EAUAJ,EAAqBkE,UAAU4D,gBAAkB,SAAUQ,GAAW,GAElE,MAAMC,EAAQhK,KAAK8C,OACb+G,EAAI7J,KAAK6E,UAAUC,OAMnBmF,EAFYD,EAAMrF,KAAKrD,KAAKgB,GAAMlB,GAAG+D,IAAI7C,EAAEmC,OAAQyF,GAAQA,EAAI5B,WAE7ChH,KACnBgB,GAAMlB,GACFmC,cACAlC,MAAM,CAAC,EAAG2I,EAAMhG,OAAOmG,cACvB3G,OAAO,EAAElB,EAAGA,MAIhByH,IACD/J,KAAK6E,UAAUE,UAAY8E,EAAE3C,OAAO,MAExC,MAAMnC,EAAY/E,KAAK6E,UAAUE,UACjC,IAAK,MAAOxD,EAAG6I,KAAYnI,OAAOC,QAAQ8H,EAAMrF,MAC5CI,EACKmC,OAAO,KACHrG,KAAK,YAAa,aAAamJ,EAAMhG,OAAOoG,EAAQxF,WACxDsC,OAAO,QACPmD,MAAMD,EAAQ3F,OACV2B,MAAM,SAAU,QAChBA,MAAM,eAAgB,IACtBA,MAAM,OAAQ,cACdvF,KAAK,IAAKO,GAAGkJ,OACTC,IAAI7F,GAAMuF,EAAM1I,IAAImD,EAAE4D,OAAO0B,EAAMnG,gBACnC2G,IAAI9F,GAAMuF,EAAM1I,GAAGmD,EAAE4D,OAAO0B,EAAMnG,gBAClC4G,GAAG/F,GAAMsF,EAAM1G,OAAOoB,EAAE6F,MACxBG,MAAMtJ,GAAGuJ,iBAI9B,EAUAlJ,EAAqBkE,UAAU8D,cAAgB,SAAUM,GAAW,GAEhE,MAAMC,EAAQhK,KAAK8C,OACb+G,EAAI7J,KAAK6E,UAAUC,OAGpBiF,IACD/J,KAAK6E,UAAUG,QAAU6E,EAAE3C,OAAO,MAEtC,MAAM0D,EAAQ5K,KAAK6E,UAAUG,QACvBmF,EAAYH,EAAMhG,OAAOmG,YACzBU,EAAY7K,KAAK8C,OAAOiB,UAAYoG,EAM1C,IAAK,MAAO5I,EAAGQ,KAASE,OAAOC,QAAQD,OAAOiC,KAAKlE,KAAK4B,QAAS,CAE7D,MAAMsD,EAAUlF,KAAK8B,SAASC,GACxB+I,EAAQjL,EAAc0B,EAAI1B,EAAcyI,QAExCyC,EAAYH,EAAM1D,OAAO,KAC1BrG,KAAK,YAAa,aAAamJ,EAAMhG,OAAOjC,GAAQoI,EAAY,QAGrEnK,KAAK6E,UAAUI,SAASlD,GAAQgJ,EAAU7D,OAAO,KACjD,MAAMjC,EAAWjF,KAAK6E,UAAUI,SAASlD,GACzC,IAAK,MAAMiJ,KAAWhL,KAAKoC,UAAUL,GACjCkD,EAASiC,OAAO,UACXrG,KAAK,KAAM,GACXA,KAAK,KAAMmJ,EAAM1G,OAAO0H,IACxBnK,KAAK,IAAK,GACVuF,MAAM,OAAQ0E,GACd1E,MAAM,UAAW,IAI1B,MAAM6E,EAAWF,EAAU7D,OAAO,KAClC+D,EAAS/D,OAAO,QACXrG,KAAK,KAAM,GACXA,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ3C,cAChC1B,KAAK,KAAM,GACXA,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ1C,cAChC3B,KAAK,SAAUiK,GACfjK,KAAK,eAhCM,GAiChBoK,EAAS/D,OAAO,QACXrG,KAAK,MAAOgK,EAAY,GACxBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ3C,cAChC1B,KAAK,KAAMgK,EAAY,GACvBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ3C,cAChC1B,KAAK,SAAUiK,GACfjK,KAAK,eAvCM,GAwChBoK,EAAS/D,OAAO,QACXrG,KAAK,MAAOgK,EAAY,GACxBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ1C,cAChC3B,KAAK,KAAMgK,EAAY,GACvBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQ1C,cAChC3B,KAAK,SAAUiK,GACfjK,KAAK,eA9CM,GAiDhB,MAAM0E,EAAMwF,EAAU7D,OAAO,KAC7B3B,EAAI2B,OAAO,QACNrG,KAAK,KAAMgK,EAAY,GACvBhK,KAAK,IAAKmJ,EAAM1G,OAAO4B,EAAQE,YAC/BvE,KAAK,QAASgK,GACdhK,KAAK,SAAUmJ,EAAM1G,OAAO4B,EAAQM,WAAawE,EAAM1G,OAAO4B,EAAQE,YACtEvE,KAAK,OAAQiK,GAClBvF,EAAI2B,OAAO,QACNrG,KAAK,MAAOgK,EAAY,GACxBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQG,SAChCxE,KAAK,KAAMgK,EAAY,GACvBhK,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQG,SAChCxE,KAAK,SAAU,SACfA,KAAK,eA7DI,GA8Dd0E,EAAI2B,OAAO,UACNrG,KAAK,KAAM,GACXA,KAAK,KAAMmJ,EAAM1G,OAAO4B,EAAQG,SAChCxE,KAAK,IAAK,KACVuF,MAAM,OAAQ,SACdvF,KAAK,SAAU,SACfA,KAAK,eAAgB,EAClC,CAEA,EAUAY,EAAqBkE,UAAUgE,sBAAwB,WAGnD,MAAMuB,EAAwB,GAAGlL,KAAK4F,uBACtC5F,KAAKO,mBAAqByF,OAAOC,mBAAmB,CAChDC,aAAc,MACd9F,GAAI8K,EACJ/E,WAAY,UACZG,OAAQtG,KAAKD,cAGjB,MAAMoL,EAA2B,GAAGnL,KAAK4F,oCAKnCwF,EAAwBpF,OAAOC,mBAAmB,CACpDC,aAAc,QACduB,KAAM,WACNrH,GAAI+K,EACJ7E,OAAQtG,KAAKO,qBAEjB6K,EAAsBC,SAAU,EAKLrF,OAAOC,mBAAmB,CACjDC,aAAc,QACdQ,aAAc,eACdJ,OAAQtG,KAAKO,qBAEEwH,aAAa,MAAOoD,GACvCC,EAAsBxE,iBAAiB,UAAU,KAC7CjG,EAAkBX,KAAK6E,UAAUE,UAAS,IAG9C,MAAMuG,EAAyB,GAAGtL,KAAK4F,kCAKhC2F,EAAsBvF,OAAOC,mBAAmB,CACnDC,aAAc,QACduB,KAAM,WACNrH,GAAIkL,EACJhF,OAAQtG,KAAKO,qBAEjBgL,EAAoBF,SAAU,EAKLrF,OAAOC,mBAAmB,CAC/CC,aAAc,QACdQ,aAAc,aACdJ,OAAQtG,KAAKO,qBAEAwH,aAAa,MAAOuD,GACrCC,EAAoB3E,iBAAiB,UAAU,KAC3CjG,EAAkBX,KAAK6E,UAAUG,QAAO,IAG5C,MAAMwG,EAA4B,GAAGxL,KAAK4F,qCAKpC6F,EAAyBzF,OAAOC,mBAAmB,CACrDC,aAAc,QACduB,KAAM,WACNrH,GAAIoL,EACJlF,OAAQtG,KAAKO,qBAEjBkL,EAAuBJ,SAAU,EAKLrF,OAAOC,mBAAmB,CAClDC,aAAc,QACdQ,aAAc,gBACdJ,OAAQtG,KAAKO,qBAEGwH,aAAa,MAAOyD,GACxCC,EAAuB7E,iBAAiB,UAAU,KAC9C,IAAK,MAAM8E,KAASzJ,OAAOD,OAAOhC,KAAK6E,UAAUI,UAC7CtE,EAAkB+K,EAC9B,IAOI,MAAMC,EAAsB3F,OAAOC,mBAAmB,CAClDC,aAAc,QACduB,KAAM,QAENnB,OAAQtG,KAAKO,qBAEjBoL,EAAoB5D,aAAa,MAAO,GACxC4D,EAAoB5D,aAAa,MAAO,GACxC4D,EAAoB5D,aAAa,OAAQ,KACzC4D,EAAoBlH,MAAQzE,KAAK8C,OAAOc,qBACxC+H,EAAoB/E,iBAAiB,SAAS,KAC1C5G,KAAKoJ,iBAAiBwC,OAAOD,EAAoBlH,OAAM,IAMzBuB,OAAOC,mBAAmB,CACxDC,aAAc,SACduB,KAAM,SACNf,aAAc,QACdJ,OAAQtG,KAAKO,qBAESqG,iBAAiB,SAAS,KAChD+E,EAAoBlH,MAAQzE,KAAK8C,OAAOc,qBACxC5D,KAAKoJ,iBAAiBwC,OAAOD,EAAoBlH,OAAM,IAO3D,MAAMoH,EAAmB7F,OAAOC,mBAAmB,CAC/CC,aAAc,QACduB,KAAM,QAENnB,OAAQtG,KAAKO,qBAEjBsL,EAAiB9D,aAAa,MAAO,GACrC8D,EAAiB9D,aAAa,MAAO,GACrC8D,EAAiB9D,aAAa,OAAQ,KACtC8D,EAAiBpH,MAAQzE,KAAK8C,OAAOgB,kBACrC+H,EAAiBjF,iBAAiB,SAAS,KACvC5G,KAAKwJ,cAAcoC,OAAOC,EAAiBpH,OAAM,IAMtBuB,OAAOC,mBAAmB,CACrDC,aAAc,SACduB,KAAM,SACNf,aAAc,QACdJ,OAAQtG,KAAKO,qBAEMqG,iBAAiB,SAAS,KAC7CiF,EAAiBpH,MAAQzE,KAAK8C,OAAOgB,kBACrC9D,KAAKwJ,cAAcoC,OAAOC,EAAiBpH,OAAM,GAGzD,EClgBY,MAACqH,EAAY,CAGxBC,KAAM,KAENC,UAAe,KACfC,IAAW,KAGXC,sBAAyB,KACzBC,qBAAwB,KACxBC,yBAA2B,KAC3BC,uBAA0B,KAM1BC,uBAAwB,KAKxBC,qBAAsB,KAGtBC,OAAS,SAASC,GAEjB,MAAM3G,EAAO9F,KAGZ8F,EAAKkG,UAAgBS,EAAQT,UAC7BlG,EAAKoG,sBAAyBO,EAAQP,sBACtCpG,EAAKmG,IAAWQ,EAAQR,IACxBnG,EAAKqG,qBAAwBM,EAAQN,qBACrCrG,EAAKsG,yBAA2BK,EAAQL,yBACxCtG,EAAKuG,uBAA0BI,EAAQJ,uBAGxC,MAAMK,EAAY5G,EAAK6G,cAGvB,OAFA7G,EAAKqG,qBAAqBS,YAAYF,IAE/B,CACT,EAKCC,YAAc,WAEb,MAAM7G,EAAO9F,KAGP6M,EAAW,IAAIC,iBAGpBhH,EAAKiG,KAAOjG,EAAKiG,MAAQ,IAAIgB,aAE9B,MAAMC,EAAWhH,OAAOC,mBAAmB,CAC1CC,aAAe,MACfC,WAAc,kBACdG,OAAWuG,IAIX/G,EAAKiG,KAAKkB,aAAa,CACtB7M,GAAQ,OACR2B,KAAS,OACTmL,MAAUC,QAAQC,MAAQ,OAC1BC,SAAY,SACZC,cAAgB,CAAC,KAAM,MACvBC,GAAQ,OACRC,MAAU,IACVC,OAAW,IACXC,SAAY,EACZpH,OAAW0G,EACXW,SAAY,SAASC,GACpB9H,EAAKiG,KAAK8B,sBAAsB,CAC/BD,UAAYA,EACZE,MAAS,WAEf,IAIGhI,EAAKiG,KAAKkB,aAAa,CACtB7M,GAAQ,SACR2B,KAAS,SACTsL,SAAY,OACZU,QAAW,QACXb,MAASC,QAAQa,YAAc,eAC/BN,SAAW,EACXpH,OAAU0G,EACViB,SAAY,MACZN,SAAW,SAASC,GACnB9H,EAAKiG,KAAK8B,sBAAsB,CAC/BD,UAAYA,EACZE,MAAS,WAEf,IAIGhI,EAAKiG,KAAKkB,aAAa,CACtB7M,GAAQ,eACR2B,KAAS,eACTsL,SAAY,wBACZU,QAAW,MACXb,MAASC,QAAQe,cAAgB,eACjCR,SAAW,EACXpH,OAAU0G,EACVW,SAAW,SAASC,GACnB9H,EAAKiG,KAAK8B,sBAAsB,CAC/BD,UAAYA,EACZE,MAAS,WAEf,IAIG,MAAMK,EAAenI,OAAOC,mBAAmB,CAC9CC,aAAe,MACfC,WAAc,iCACdG,OAAWuG,IAEU7G,OAAOC,mBAAmB,CAC/CC,aAAe,QACfuB,KAAS,SACTrH,GAAQ,SACRqE,MAAU0I,QAAQiB,QAAU,SAC5BjI,WAAc,kCACdG,OAAW6H,IAEEvH,iBAAiB,SAAS,SAAUyH,GACjDA,EAAEC,iBACFxI,EAAKyI,YAAYxC,EACrB,IAGwB/F,OAAOC,mBAAmB,CAC9CC,aAAe,QACfuB,KAAS,SACTrH,GAAQ,eACRqE,MAAU0I,QAAQqB,OAAS,QAC3BrI,WAAc,iDACdG,OAAW6H,IAECvH,iBAAiB,SAAS,SAAUyH,GAChDA,EAAEC,iBACFG,OAAOC,SAASC,QAAQF,OAAOC,SAASE,SAC5C,IAIG,MAAMC,EAAiB/I,EAAKiG,KAAK+C,uBACjCjC,EAASD,YAAaiC,GAGtB,MAAM9C,EAAO/F,OAAOC,mBAAmB,CACtCC,aAAe,OACf9F,GAAQ,cACR+F,WAAc,gBAKhB,OAHC4F,EAAKa,YAAYC,GAGXd,CACT,EAMCwC,YAAc,SAASQ,EAAUtC,EAAQ,IAExC,MAAM3G,EAAO9F,KAGNgP,EAA+C,kBAAxBvC,EAAQuC,eAA4BvC,EAAQuC,cACnEC,EAAaxC,EAAQwC,YAAcnJ,EAAKiG,KAAKkD,WAG7C5M,EAASyD,EAAKiG,KAAKmD,aAAa,CACrCD,WAAYA,IAIb,IAAK5M,GAAUA,EAAOiG,OAAO,EAC5B,OAAO,EAIJ0G,GACHhP,KAAKoM,yBAAyB+C,eAC7B,CAACC,SAAU,SAAUC,MAAO,QAASC,OAAQ,YAK5BxJ,EAAKyJ,YAAY,CACnClN,OAAWA,EACXmN,MAAU,EACVC,eAAiB,CAChBC,GAAM,qDACNC,QAAU,CAAC,CAAC5N,KAAO,eAGpB6N,MAAMC,IAENC,cAAcC,QAAQ,cAAeF,GAErCG,QAAQC,IAAIJ,GAeZ,MAAMnO,EAAO,GACb,IAAK,MAAMwI,KAAO2F,EAAa,CAC9B,MAAM9N,EAAOmI,EAAIgG,gBACjB,IAAK,CAAC,KAAM,KAAM,KAAM,KAAK,MAAM,MAAMC,SAASpO,GAAO,SAEzD,MAAMqO,EAAU,GACVC,EAAanG,EAAIoG,gCACjBC,EAAerG,EAAIsG,kCACnBC,EAAevG,EAAIwG,kCACnBC,EAASzG,EAAI0G,4BACfL,GAAgBA,EAAajI,SAChC8H,EAAQG,aAAeA,EAAalO,QAAO,CAACC,EAAGf,IAAMe,GAAK+N,EAAW9O,MAElEkP,GAAgBA,EAAanI,SAChC8H,EAAQK,aAAeA,EAAapO,QAAO,CAACC,EAAGf,IAAMe,GAAK+N,EAAW9O,MAElEoP,GAAUA,EAAOrI,SACpB8H,EAAQO,OAASA,EAAOtO,QAAO,CAACC,EAAGf,IAAMe,GAAK+N,EAAW9O,MAEtDU,OAAOiC,KAAKkM,GAAS9H,SACxB5G,EAAKK,GAAQqO,EAEnB,CACIJ,QAAQC,IAAIvO,GAGZ,MAAMmP,EAAY,GAClB,IAAK,MAAO9O,EAAM+O,KAAU7O,OAAOC,QAAQR,GAC1CmP,EAAU9O,GAAQ+O,EAAMP,aAEzBvQ,KAAKsM,uBAAyB,IAAI7K,EACjCzB,KAAKoM,yBACLyE,EACA,YAED7Q,KAAKsM,uBAAuBzG,SAG5B,MAAMkL,EAAU,GAChB,IAAK,MAAOhP,EAAM+O,KAAU7O,OAAOC,QAAQR,GAC1CqP,EAAQhP,GAAQ+O,EAAMH,OAEvB3Q,KAAKuM,qBAAuB,IAAI9K,EAC/BzB,KAAKqM,uBACL0E,EACA,UAED/Q,KAAKuM,qBAAqB1G,QAAM,GAIpC,EAMC0J,YAAc,SAAS9C,GAEtB,MAAM3G,EAAO9F,KAGNqC,EAAWoK,EAAQpK,QAAU,KAC7B2O,EAAcvE,EAAQuE,WAAa,CAAC,KACpCC,EAAWxE,EAAQwE,OAAS,aAC5BC,EAAUC,aAAaC,sBACvB3B,EAAiBhD,EAAQgD,gBAAkB,KAC3CD,EAA4BlP,MAAjBmM,EAAQ+C,MAChB/C,EAAQ+C,MACR,GAEV,OAAO,IAAI6B,SAAQ,SAASC,GAE1B,MAAM5F,EAAQ,GAER6F,EAAazL,EAAKiG,KAAKyF,iBAAiBnP,GAExCoP,EAAe,CACpBC,WAAc,UACd5D,MAAU,UACVkD,UAAaA,EACbE,KAASA,EACTK,WAAcA,EACd/B,MAAUA,EACV9D,MAAWA,EAAMpD,OAAO,EAAKoD,EAAMiG,KAAK,KAAO,KAC/CC,OAAU,EACVX,MAAUA,EACVxB,eAAiBA,GAElBoC,aAAaC,QAAQ,CACpBC,KAAON,IAEP7B,MAAMoC,IAEN,MAAMtQ,EAAOuQ,KAAKC,mBAAmBF,EAASG,QAE9Cb,EAAQ5P,EAAI,GAEjB,GAEA,G"}