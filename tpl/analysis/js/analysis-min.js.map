{"version":3,"names":["COLOR_PALETTE","chart_wrapper","div_wrapper","this","constructor","Error","_n_charts_created","id","download_chart_container","undefined","controls_container","d3_chart_wrapper","call","plot_div","svg","toggle_visibility","element","attr","transition","linspace","start","stop","nsteps","delta","d3","range","map","i","prototype","id_string","render","self","replaceChildren","common","create_dom_element","element_type","class_name","style","display","parent","format_select","width","format","get_supported_export_formats","value","text_content","toUpperCase","addEventListener","download_chart","filename","download_func_name","Object","setPrototypeOf","select","append","download_chart_as_svg","svg_data","node","outerHTML","svg_blob","Blob","type","url","URL","createObjectURL","tmpLink","href","setAttribute","click","remove","revokeObjectURL","CURVES","Basis","curveBasis","curveBasisClosed","curveBasisOpen","Bundle","curveBundle","curveBumpX","curveBumpY","Cardinal","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","Linear","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","Natural","curveNatural","Step","curveStep","curveStepAfter","curveStepBefore","compute_n_bins","sqrt","values","Math","ceil","length","sturges","log2","rice","pow","doane","n","sigma","std","deviation","mean","sum","skew","abs","scott","max","min","freedman_diaconis","quartile3","quantile","quartile1","iqr","boxvio_chart_wrapper","data","sort_xaxis","ylabel","obj","_data","_group_names","keys","sort","_colors","name","_ylabel","_metrics","fromEntries","entries","calc_metrics","_outliers","filter","v","lower_fence","upper_fence","_data_extents","extent","_data_extent","flat","_full_width","_full_height","_chart","margin","top","right","bottom","left","height","yscale","scaleLinear","domain","clamp","yaxis","axisLeft","violin_scale_default","violin_scale","box_scale_default","box_scale","xscale","scaleBand","xaxis","axisBottom","n_bins_default","n_bins","JSON","parse","stringify","histogram","bin","thresholds","bins","supported_curves","violin_curve","_graphics","root_g","violins_g","violins","boxes_g","outliers","_controls","max_bins_multiplier","metrics","median","set_violin_scale","scale","selectAll","_render_violins","set_n_bins","chart","_render_violin","set_violin_curve","curve_name","set_box_scale","_render_boxes","_render_chart","_render_control_panel","_render_axis","g","text","is_g_ready","bandwidth","max_count","x_num","datum","area","x0","d","x1","y","curve","boxes","box_width","color","group_box","outlier","whiskers","controls_container_id","_render_violin_curve_selector","_render_checkboxes","_render_scale_sliders","_render_n_bins_control","curve_select_id","curve_select","show_violins_checkbox_id","show_violins_checkbox","checked","show_boxes_checkbox_id","show_boxes_checkbox","show_outliers_checkbox_id","show_outliers_checkbox","group","violin_scale_slider","Number","box_scale_slider","group_select_id","group_select","violin_n_bins_slider","analysis","form","area_name","row","export_data_container","form_items_container","diameter_chart_container","weight_chart_container","diameter_chart_wrapper","weight_chart_wrapper","set_up","options","form_node","render_form","appendChild","fragment","DocumentFragment","form_factory","form_row","item_factory","label","tstring","mint","q_column","value_wrapper","eq","eq_in","eq_out","is_term","callback","form_item","activate_autocomplete","table","q_table","number_key","group_op","denomination","submit_group","search","e","preventDefault","form_submit","reset","window","location","replace","pathname","operators_node","build_operators_node","form_obj","scroll_result","form_items","build_filter","scrollIntoView","behavior","block","inline","search_rows","limit","process_result","fn","columns","then","parsed_data","event_manager","publish","console","log","ele","ref_type_number","tmpData","calculable","full_coins_reference_calculable","diameter_max","full_coins_reference_diameter_max","diameter_min","full_coins_reference_diameter_min","weight","full_coins_reference_weight","diameters","props","weights","ar_fields","order","lang","page_globals","WEB_CURRENT_LANG_CODE","Promise","resolve","sql_filter","parse_sql_filter","request_body","dedalo_get","join","count","data_manager","request","body","response","page","parse_catalog_data","result"],"sources":["../../lib/charts/chart-wrapper.js","../../lib/charts/d3/d3-chart-wrapper.js","../../lib/charts/d3/utils.js","../../lib/charts/compute-n-bins.js","../../lib/charts/d3/boxvio-chart-wrapper.js","../../lib/charts/utils.js","analysis.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Width (in pixels) of color picker\n * @type {number}\n */\nexport const COLOR_PICKER_WIDTH = 200\n\n/**\n * Default name for the chart -> when exporting,\n * `<name>.<format>`\n * @type {string}\n */\nconst DEFAULT_CHART_NAME = 'chart'\n\n/**\n * Color palette, totally stolen from matplotlib\n * @type {string[]}\n */\nexport const COLOR_PALETTE = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']\n\n\n/**\n * Chart wrapper class\n * \n * It clears the container div during render, so subclasses should work with the dom\n * after the render method of this superclass has been called\n * @class\n * @abstract\n * @param {Element} div_wrapper \n */\nexport function chart_wrapper(div_wrapper) {\n    if (this.constructor === chart_wrapper) {\n        throw new Error(\"Abstract class 'chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper._n_charts_created++;\n    /**\n     * Unique identifier for the chart.\n     * \n     * Subclasses MUST use this in order to assing IDs\n     * to DOM elements, in order to avoid bugs and cross-chart events\n     * @type {number}\n     */\n    this.id = chart_wrapper._n_charts_created\n    /**\n     * Div element wrapping the chart itself and\n     * the controls\n     * @type {Element}\n     * @protected\n     */\n    this.div_wrapper = div_wrapper\n    /**\n     * Div container for chart download\n     * @type {Element}\n     * @protected\n     */\n    this.download_chart_container = undefined\n    /**\n     * Div container for user controls\n     * Used freely by each subclass\n     * @type {Element}\n     * @protected\n     */\n    this.controls_container = undefined\n}\n\n/**\n * Amount of created charts\n * @type {number}\n * @static\n * @private\n */\nchart_wrapper._n_charts_created = 0;\n\n/**\n * Get a string representing the ID of the chart\n * @returns {string} the id as a string\n *          (`'chart1'`, `'chart2'`, ...)\n */\nchart_wrapper.prototype.id_string = function () {\n    return `chart${this.id}`\n}\n\n/**\n * Render the chart and controls\n * \n * Empties the div wrapper and resets properties\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name chart_wrapper#render\n * @function\n */\nchart_wrapper.prototype.render = function () {\n    // Save this chart_wrapper intance\n    /**\n     * This chart_wrapper intance\n     * @type {chart_wrapper}\n     */\n    const self = this\n    // Remove all children in the div_wrapper\n    this.div_wrapper.replaceChildren()\n    // Set controls container to undefined\n    this.controls_container = undefined\n    // Create the chart download section\n    this.download_chart_container = common.create_dom_element({\n        element_type: 'div',\n        id: 'download_chart_container',\n        class_name: 'o-purple',\n        style: {\n            'display': 'flex',\n            'flex-direction': 'row',\n            'justify-content': 'center',\n        },\n        parent: this.div_wrapper,\n    })\n    const format_select = common.create_dom_element({\n        element_type: 'select',\n        id: 'chart_export_format',\n        style: {\n            'width': '80%',\n        },\n        parent: this.download_chart_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const format of this.get_supported_export_formats()) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: format,\n            text_content: format.toUpperCase(),\n            parent: format_select,\n        })\n    }\n    const chart_download_button = common.create_dom_element({\n        element_type: 'button',\n        text_content: 'Download',\n        style: {\n            'width': '20%',\n        },\n        parent: this.download_chart_container,\n    })\n    chart_download_button.addEventListener('click', () => {\n        self.download_chart(format_select.value)\n    })\n}\n\n/**\n * Download the chart as an image\n * \n * For each supported format in the subclass,\n * @see chart_wrapper#get_supported_export_formats\n * the subclass must implement a method called\n * `download_chart_as_<format>`\n * @param {string} format the image format\n * @function\n * @abstract\n * @name chart_wrapper#download_chart\n */\nchart_wrapper.prototype.download_chart = function (format) {\n    /**\n     * File name for the chart\n     * @type {string}\n     */\n    const filename = `${DEFAULT_CHART_NAME}.${format}`\n    /**\n     * Function name for downloading with the particular format\n     * @type {string}\n     */\n    const download_func_name = `download_chart_as_${format}`\n    if (this[download_func_name] === undefined) {\n        throw new Error(`${download_func_name} is not implemented!`)\n    }\n    this[download_func_name](filename)\n}\n\n/**\n * Get the supported chart export formats\n * \n * Subclasses must return their own supported formats, e.g.,\n * `['png', 'jpg', 'eps']`\n * @function\n * @returns {string[]} the supported formats\n * @abstract\n * @name chart_wrapper#get_supported_export_formats\n */\nchart_wrapper.prototype.get_supported_export_formats = function () {\n    throw new Error(`Abstract method 'chart_wrapper.download_chart' cannot be called`)\n}","\"use strict\";\n\nimport { chart_wrapper } from \"../chart-wrapper\";\n\n/**\n * D3 chart wrapper class\n * \n * Appends an `svg` tag to the provided div, so that it spans all width\n * \n * Subclasses MUST specify the viewBox of the svg, so that it responds to window resizing\n * @param {Element} div_wrapper the div containing the chart\n * @class\n * @abstract\n * @extends chart_wrapper\n */\nexport function d3_chart_wrapper(div_wrapper) {\n    if (this.constructor === d3_chart_wrapper) {\n        throw new Error(\"Abstract class 'd3_chart_wrapper' cannot be instantiated\")\n    }\n    chart_wrapper.call(this, div_wrapper)\n    /**\n     * Div inside the div_wrapper, that just wraps the drawing\n     * @type {Element}\n     * @protected\n     */\n    this.plot_div = undefined\n    /**\n     * D3 selection object for the root `svg` tag\n     * @protected\n     */\n    this.svg = undefined\n\n}\n// Set prototype chain\nObject.setPrototypeOf(d3_chart_wrapper.prototype, chart_wrapper.prototype)\n\n/**\n * Render the chart (d3) and controls\n * \n * Subclasses must call this method at the top\n * of their own implementation\n * @name d3_chart_wrapper#render\n * @function\n */\nd3_chart_wrapper.prototype.render = function () {\n    chart_wrapper.prototype.render.call(this)\n    \n    this.plot_div = common.create_dom_element({\n        element_type: 'div',\n            class_name: 'o-purple plot_wrapper',\n            parent: this.div_wrapper,\n    })\n\n    this.svg = d3.select(this.plot_div)\n        .append('svg')\n        .attr('version', '1.1') // When drawing SVG to canvas with an `Image`, if we don't add version and xmlns the `Image` will never load :(\n        .attr('xmlns', 'http://www.w3.org/2000/svg')\n        .attr('width', '100%')\n}\n\n/**\n * Get the supported chart export formats\n * @function\n * @returns {string[]} the supported formats\n * @name d3_chart_wrapper#get_supported_export_formats\n */\nd3_chart_wrapper.prototype.get_supported_export_formats = function () {\n    return ['svg']\n}\n\n/**\n * Download the chart as svg\n * @param {string} filename the name of the file\n * @function\n * @name d3_chart_wrapper#_download_chart_as_svg\n */\nd3_chart_wrapper.prototype.download_chart_as_svg = function (filename) {\n    const svg_data = this.svg.node().outerHTML\n    const svg_blob = new Blob([svg_data], { type: \"image/svg+xml;charset=utf-8\" })\n    const url = URL.createObjectURL(svg_blob)\n    /**\n     * Temporary link\n     * @type {Element}\n     */\n    const tmpLink = common.create_dom_element({\n        element_type: 'a',\n        href: url,\n    })\n    tmpLink.setAttribute('download', filename)\n    tmpLink.click()\n    tmpLink.remove()\n    URL.revokeObjectURL(url)\n}","/**\n * Toggle visibility of a d3 selection element\n * @param {d3.selection} element the elememt\n */\nexport function toggle_visibility(element) {\n    if (element.attr('opacity') == 0) {\n        element.transition().attr('opacity', 1)\n    } else {\n        element.transition().attr('opacity', 0)\n    }\n}\n\n/**\n * Get an array of values, evenly spaced over an\n * interval\n * \n * https://gist.github.com/davebiagioni/1ac21feb1c2db04be4e6\n * @param {number} start start value\n * @param {number} stop stop value\n * @param {number} nsteps amount of spets\n * @returns {number[]} the values\n */\nexport function linspace(start, stop, nsteps){\n    const delta = (stop-start)/(nsteps-1)\n    return d3.range(nsteps).map((i) => start+i*delta)\n}\n\n/**\n * Map from name to d3 curve\n * https://github.com/d3/d3/blob/main/API.md#curves\n * @type {Object.<string, d3.curve>}\n */\nexport const CURVES = {\n    // cubic basis spline, repeating the end points\n    'Basis': d3.curveBasis,\n    // a closed cubic basis spline\n    'Basis closed': d3.curveBasisClosed,\n    // a cubic basis spline\n    'Basis open': d3.curveBasisOpen,\n    // a straightened cubic basis spline (works only with d3.line, not d3.area!)\n    'Bundle': d3.curveBundle,\n    // a cubic Bézier spline with horizontal tangents\n    'Bump X': d3.curveBumpX,\n    // a cubic Bézier spline with vertical tangents\n    'Bump Y': d3.curveBumpY,\n    // a cubic cardinal spline, with one-sided difference at each end\n    'Cardinal': d3.curveCardinal,\n    // a closed cubic cardinal spline\n    'Cardinal closed': d3.curveCardinalClosed,\n    // a cubic cardinal spline\n    'Cardinal open': d3.curveCardinalOpen,\n    // a cubic Catmull–Rom spline, with one-sided difference at each end\n    'Catmull-Rom': d3.curveCatmullRom,\n    // a closed cubic Catmull–Rom spline\n    'Catmull-Rom closed': d3.curveCatmullRomClosed,\n    // a cubic Catmull–Rom spline\n    'Catmull-Rom open': d3.curveCatmullRomOpen,\n    // a polyline\n    'Linear': d3.curveLinear,\n    // a closed polyline.\n    'Linear closed': d3.curveLinearClosed,\n    // a cubic spline that, given monotonicity in x, preserves it in y\n    'Monotone X': d3.curveMonotoneX,\n    // a cubic spline that, given monotonicity in y, preserves it in x\n    'Monotone Y': d3.curveMonotoneY,\n    // a natural cubic spline\n    'Natural': d3.curveNatural,\n    // a piecewise constant function\n    'Step': d3.curveStep,\n    // a piecewise constant function\n    'Step after': d3.curveStepAfter,\n    // a piecewise constant function\n    'Step before': d3.curveStepBefore,\n}\n","/**\n * Implements methods for computing the number of\n * bins based on the data values\n * \n * Each method takes an array of data values as input\n * and outputs the number of bins\n * @class\n */\nexport function compute_n_bins() {}\n\n/**\n * Compute number of bins with the square root rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sqrt = function (values) {\n\treturn Math.ceil(Math.sqrt(values.length))\n}\n\n/**\n * Compute number of bins with the Sturges rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.sturges = function (values) {\n\treturn Math.ceil(Math.log2(values.length)) + 1\n}\n\n/**\n * Compute number of bins with the Rice rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.rice = function (values) {\n\treturn Math.ceil(2*Math.pow(values.length, 1/3))\n}\n\n/**\n * Compute number of bins with Doane's formula\n * \n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.doane = function (values) {\n\tconst n = values.length\n\tif (n < 2) {\n\t\tthrow new Error(\"Doane's rule needs at least 2 datapoints\")\n\t}\n\tconst sigma = Math.sqrt(6*(n-2)/((n+1)*(n+3)))\n\tconst std = d3.deviation(values)\n\tconst mean = d3.mean(values)\n\tconst sum = d3.sum(values)\n\t// The adjusted Fisher-Pearson skewness coefficient\n\t// https://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/skewness.htm\n\tconst skew = (Math.sqrt(n*(n+1))/(n-2))*((sum-n*mean)/(n*Math.pow(std, 3)))\n\treturn 1 + Math.ceil(Math.log2(n)) + Math.ceil(Math.log2(1+Math.abs(skew)/sigma))\n}\n\n/**\n * Compute number of bins with Scott's normal\n * reference rule\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.scott = function (values) {\n\tif (values.length < 2) {\n\t\tthrow new Error(\n\t\t\t\"Cannot compute standard deviation of an array with less than 2 values\"\n\t\t)\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(3.49*d3.deviation(values))\n\t)\n}\n\n/**\n * Compute number of bins with Freedman-Diaconis' choice\n * @param {number[]} values the datapoints\n * @returns {number} the number of bins \n */\ncompute_n_bins.freedman_diaconis = function (values) {\n\tconst quartile3 = d3.quantile(values, 0.75)\n\tconst quartile1 = d3.quantile(values, 0.25)\n\tconst iqr =  quartile3 - quartile1\n\tif (quartile1 === quartile3) {\n\t\tthrow new Error(\"IQR is 0!\")\n\t}\n\treturn Math.ceil(\n\t\t(d3.max(values)-d3.min(values))*Math.pow(values.length, 1/3)/(2*iqr)\n\t)\n}\n","\"use strict\";\n\nimport { d3_chart_wrapper } from \"./d3-chart-wrapper\";\nimport { COLOR_PALETTE } from \"../chart-wrapper\";\nimport { toggle_visibility, linspace, CURVES } from \"./utils\";\nimport { compute_n_bins } from \"../compute-n-bins\";\nimport { deepcopy } from \"../utils\"\n\n\n/**\n * Padding for the y-axis, to fit the label\n * @type {number}\n */\nconst YAXIS_PADDING = 52;\n\n/**\n * Boxplot + violin chart wrapper\n * \n * Inspired in http://bl.ocks.org/asielen/d15a4f16fa618273e10f,\n * https://d3-graph-gallery.com/graph/violin_basicHist.html,\n * https://d3-graph-gallery.com/graph/boxplot_show_individual_points.html\n * \n * @param {Element}  div_wrapper the div to work in\n * @param {{[group_name: string]: number[]}} data the input data: group name\n *        and array of values\n * @param {boolen} sort_xaxis whether to sort the xaxis\n * @param {string} ylabel the y label\n * @class\n * @extends d3_chart_wrapper\n */\nexport function boxvio_chart_wrapper(div_wrapper, data, sort_xaxis, ylabel) {\n    d3_chart_wrapper.call(this, div_wrapper)\n    /**\n     * Data: group name to array of values\n     * @type {Object.<string, number[]>}\n     * @private\n     */\n    this._data = data\n    /**\n     * Group names\n     * @type {string[]}\n     * @private\n     */\n    this._group_names = sort_xaxis ? Object.keys(this._data).sort() : Object.keys(this._data)\n    /**\n     * Colors\n     * @type {string[]}\n     * @private\n     */\n    this._colors = this._group_names.map((name, i) => COLOR_PALETTE[i % COLOR_PALETTE.length])\n    /**\n     * The label for the y axis\n     * @type {string}\n     * @private\n     */\n    this._ylabel = ylabel\n    /**\n     * Boxplot metrics for each group name\n     * @type {{[group_name: string]: {\n     *  max: number,\n     *  upper_fence: number,\n     *  quartile3: number,\n     *  median: number,\n     *  mean: number,\n     *  iqr: number,\n     *  quartile1: number,\n     *  lower_fence: number,\n     *  min: number,\n     * }}}\n     * @private\n     */\n    this._metrics = Object.fromEntries(Object.entries(data).map(\n        ([name, values]) => [name, calc_metrics(values)]\n    ))\n    /**\n     * Outliers per group name\n     * @type {{[group_name: string]: number[]}}\n     * @private\n     */\n    this._outliers = Object.fromEntries(Object.entries(data).map(\n        ([name, values]) => [\n            name,\n            values.filter(\n                (v) => v < this._metrics[name].lower_fence || v > this._metrics[name].upper_fence\n            )\n        ]\n    ))\n    /**\n     * Maximum and minimum values of each group\n     * @type {Object.<string, [number, number]>}\n     */\n    this._data_extents = Object.fromEntries(Object.entries(data).map(\n        ([name, values]) => [name, d3.extent(values)]\n    ))\n    /**\n     * Maximum and minimum of the input data\n     * @type {[number, number]}\n     */\n    this._data_extent = d3.extent(Object.values(this._data_extents).flat())\n    /**\n     * Full width of svg\n     * @type {number}\n     */\n    this._full_width = 24.15625*Math.sqrt(Object.keys(data).length) + 135.84375 + YAXIS_PADDING\n    /**\n     * Full height of svg\n     * @type {number}\n     */\n    this._full_height = 420\n    /**\n     * Non-graphic components of the chart: setting, scales, etc.\n     * @private\n     */\n    this._chart = {}\n    this._chart.margin = { top: 15, right: 4, bottom: 23, left: YAXIS_PADDING }\n    this._chart.width = this._full_width - this._chart.margin.left - this._chart.margin.right\n    this._chart.height = this._full_height - this._chart.margin.top - this._chart.margin.bottom\n    this._chart.yscale = d3.scaleLinear()\n        .range([this._chart.height, 0])\n        .domain(this._data_extent)\n        .clamp(true)  // when input outside of domain, its output is clamped to range\n    this._chart.yaxis = d3.axisLeft(this._chart.yscale)\n    this._chart.violin_scale_default = 0.8\n    this._chart.violin_scale = this._chart.violin_scale_default\n    this._chart.box_scale_default = 0.3\n    this._chart.box_scale = this._chart.box_scale_default\n    this._chart.xscale = d3.scaleBand()\n        .domain(this._group_names)\n        .range([0, this._chart.width])\n        // .padding(1-this._chart.violin_scale)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n    this._chart.xaxis = d3.axisBottom(this._chart.xscale)\n    this._chart.n_bins_default = Object.fromEntries(Object.entries(data).map(\n        ([name, values]) => [name, compute_n_bins.sturges(values)]\n    ))\n    this._chart.n_bins = deepcopy(this._chart.n_bins_default)\n    this._chart.histogram = Object.fromEntries(Object.entries(this._data_extents).map(\n        ([name, extent]) => {\n            return [\n                name,\n                d3.bin().domain(extent).thresholds(\n                    linspace(extent[0], extent[1], this._chart.n_bins[name])\n                )\n            ]\n        }\n    ))\n    this._chart.bins = Object.fromEntries(Object.entries(data).map(\n        ([name, values]) => [name, this._chart.histogram[name](values)]\n    ))\n    this._chart.supported_curves = [\n        'Basis', 'Bump Y', 'Cardinal', 'Catmull-Rom', 'Linear',\n        'Monotone Y', 'Natural', 'Step'\n    ]\n    this._chart.violin_curve = CURVES[this._chart.supported_curves[0]]\n    /**\n     * Graphic components of the chart: d3 selection objects\n     * @private\n     * @type {{[name: string]: d3.selection | {[group: string]: d3.selection}}}\n     */\n    this._graphics = {\n        root_g: null,  // Root g tag (translated to account for the margins)\n        violins_g: null, // g tag grouping all violins\n        violins: {}, // individual g tag for each violin (mapped by group name)\n        boxes_g: null, // g tag grouping all boxes\n        outliers: {},  // per group: g tag grouping all outliers of the group\n    }\n    /**\n     * Control panel things\n     * @private\n     */\n    this._controls = {}\n    this._controls.max_bins_multiplier = 3\n}\n// Set prototype chain\nObject.setPrototypeOf(boxvio_chart_wrapper.prototype, d3_chart_wrapper.prototype)\n\n/**\n * Set the scale for the violins\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_violin_scale\n */\nboxvio_chart_wrapper.prototype.set_violin_scale = function (scale) {\n    this._chart.violin_scale = scale\n    // Remove the violin graphics, only leaving its root g tag (violins_g)\n    this._graphics.violins_g.selectAll('*').remove()\n    this._render_violins(true)\n}\n\n/**\n * Set the number of bins for a particular violin\n * \n * Updates the chart accordingly\n * @param {string} name name of the group \n * @param {number} n_bins number of bins\n * @name boxvio_chart_wrapper#set_n_bins\n */\nboxvio_chart_wrapper.prototype.set_n_bins = function (name, n_bins) {\n    const chart = this._chart\n    const extent = this._data_extents[name]\n    chart.n_bins[name] = n_bins\n    chart.histogram[name].thresholds(\n        linspace(extent[0], extent[1], n_bins)\n    )\n    chart.bins[name] = chart.histogram[name](this._data[name])\n    // Delete the oath of the existing violin and redraw\n    this._graphics.violins[name].selectAll('*').remove()\n    this._render_violin(name)\n}\n\n/**\n * Set the curve for the violins\n * \n * Updates the chart accordingly\n * @param {string} curve_name name of the curve \n * @name boxvio_chart_wrapper#set_violin_curve\n */\nboxvio_chart_wrapper.prototype.set_violin_curve = function (curve_name) {\n    this._chart.violin_curve = CURVES[curve_name]\n    // Remove the violin graphics, only leaving its root g tag (violins_g)\n    this._graphics.violins_g.selectAll('*').remove()\n    this._render_violins(true)\n}\n\n/**\n * Set the scale for the boxes\n * @function\n * @param {number} scale the scale [0, 1]\n * @name boxvio_chart_wrapper#set_box_scale\n */\nboxvio_chart_wrapper.prototype.set_box_scale = function (scale) {\n    this._chart.box_scale = scale\n    // Remove the box graphics, only leaving its root g tag (boxes_g)\n    this._graphics.boxes_g.selectAll('*').remove()\n    this._render_boxes(true)\n}\n\n/**\n * Render the chart and the control panel\n * @function\n * @name boxvio_chart_wrapper#render\n */\nboxvio_chart_wrapper.prototype.render = function () {\n    // Call super render method\n    d3_chart_wrapper.prototype.render.call(this)\n    this.svg.attr('width', null)\n    this.svg.attr('height', '500px')\n    // Render chart\n    this._render_chart()\n    // Render control panel\n    this._render_control_panel()\n}\n\n/**\n * Render the chart\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_chart\n */\nboxvio_chart_wrapper.prototype._render_chart = function () {\n\n    // Set viewBox of svg\n    this.svg.attr('viewBox', `0 0 ${this._full_width} ${this._full_height}`)\n\n    // Root g tag\n    this._graphics.root_g = this.svg.append('g')\n        .attr('transform', `translate(${this._chart.margin.left},${this._chart.margin.top})`)\n\n    this._render_axis()\n    this._render_violins()\n    this._render_boxes()\n\n}\n\n/**\n * Render the axis\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_axis\n */\nboxvio_chart_wrapper.prototype._render_axis = function () {\n    const g = this._graphics.root_g\n    // Render x axis\n    g.append('g')\n        .attr('transform', `translate(0,${this._chart.height})`)\n        .call(this._chart.xaxis)\n    // Render y axis\n    g.append('g')\n        .call(this._chart.yaxis)\n\n    // Render Y axis label\n    g.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', -this._chart.margin.left + 20)\n        .attr('x', -this._chart.height / 2)\n        .text(this._ylabel);\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violins = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Render\n    if (!is_g_ready) {\n        this._graphics.violins_g = g.append('g')\n    }\n    const violins_g = this._graphics.violins_g\n    for (const name of Object.keys(chart.bins)) {\n        this._graphics.violins[name] = violins_g.append('g')\n            .attr('transform', `translate(${chart.xscale(name)},0)`)\n        this._render_violin(name)\n    }\n\n}\n\n/**\n * Render the violins\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for violins is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_violins\n */\nboxvio_chart_wrapper.prototype._render_violin = function (name) {\n    const bins = this._chart.bins[name]\n    const violin_scale = this._chart.violin_scale\n    const bandwidth = this._chart.xscale.bandwidth()\n    const yscale = this._chart.yscale\n    const violin_curve = this._chart.violin_curve\n\n    // Get the largest count in a bin as it will be maximum width\n    const max_count = d3.max(bins, (bin) => bin.length)\n    // Make a linear scale to map bin counts to bandwidth\n    const x_num = d3.scaleLinear()\n        .range([0, bandwidth])\n        .domain([-max_count, max_count])\n\n    this._graphics.violins[name]\n        .append('path')\n        .datum(bins)\n            .style('stroke', 'gray')\n            .style('stroke-width', 0.4)\n            .style('fill', 'ghostwhite')\n            .attr('d', d3.area()\n                .x0((d) => x_num(-d.length*violin_scale))\n                .x1((d) => x_num(d.length*violin_scale))\n                .y((d) => yscale(d.x0))\n                .curve(violin_curve)\n            )\n}\n\n/**\n * Render the boxes (including whiskers and outliers)\n * @function\n * @private\n * @param {boolean} is_g_ready whether the g tag for boxes is\n *        set up (default: `false`)\n * @name boxvio_chart_wrapper#_render_boxes\n */\nboxvio_chart_wrapper.prototype._render_boxes = function (is_g_ready=false) {\n\n    const chart = this._chart\n    const g = this._graphics.root_g\n\n    // Draw\n    if (!is_g_ready) {\n        this._graphics.boxes_g = g.append('g')\n    }\n    const boxes = this._graphics.boxes_g\n    const bandwidth = chart.xscale.bandwidth()\n    const box_width = this._chart.box_scale * bandwidth\n\n    const whiskers_lw = 2\n    const median_lw = 3\n\n    // Iterate over the groups\n    for (const [i, name] of Object.entries(this._group_names)) {\n\n        const metrics = this._metrics[name]\n        const color = this._colors[i]\n\n        const group_box = boxes.append('g')\n            .attr('transform', `translate(${chart.xscale(name) + bandwidth / 2},0)`)\n\n        // Draw outliers\n        this._graphics.outliers[name] = group_box.append('g')\n        const outliers = this._graphics.outliers[name]\n        for (const outlier of this._outliers[name]) {\n            outliers.append('circle')\n                .attr('cx', 0)\n                .attr('cy', chart.yscale(outlier))\n                .attr('r', 4)\n                .style('fill', color)\n                .style('opacity', 0.7)\n        }\n\n        // Draw whiskers\n        const whiskers = group_box.append('g')\n        whiskers.append('line')  // vertical line\n            .attr('x1', 0)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', 0)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // lower horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.lower_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.lower_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n        whiskers.append('line') // upper horizontal\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.upper_fence))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.upper_fence))\n            .attr('stroke', color)\n            .attr('stroke-width', whiskers_lw)\n\n        // Draw IQR box\n        const iqr = group_box.append('g')\n        iqr.append('rect')  // iqr rect\n            .attr('x', -box_width / 2)\n            .attr('y', chart.yscale(metrics.quartile3))\n            .attr('width', box_width)\n            .attr('height', chart.yscale(metrics.quartile1) - chart.yscale(metrics.quartile3))\n            .attr('fill', color)\n        iqr.append('line')  // median line\n            .attr('x1', -box_width / 2)\n            .attr('y1', chart.yscale(metrics.median))\n            .attr('x2', box_width / 2)\n            .attr('y2', chart.yscale(metrics.median))\n            .attr('stroke', 'black')\n            .attr('stroke-width', median_lw)\n        iqr.append('circle')  // median dot\n            .attr('cx', 0)\n            .attr('cy', chart.yscale(metrics.median))\n            .attr('r', 4.5)\n            .style('fill', 'white')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 2)\n    }\n\n}\n\n/**\n * Render the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_control_panel\n */\nboxvio_chart_wrapper.prototype._render_control_panel = function () {\n\n    // Create controls container\n    const controls_container_id = `${this.id_string()}_controls`\n    this.controls_container = common.create_dom_element({\n        element_type: 'div',\n        id: controls_container_id,\n        class_name: 'o-green',\n        parent: this.div_wrapper,\n    })\n\n    this._render_violin_curve_selector()\n    this._render_checkboxes()\n    this._render_scale_sliders()\n    this._render_n_bins_control()\n\n}\n\n/**\n * Render the selector for the violin curve\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_violin_curve_selector\n */\nboxvio_chart_wrapper.prototype._render_violin_curve_selector = function () {\n    const curve_select_id = `${this.id_string()}_curve_select`\n    const curve_select = common.create_dom_element({\n        element_type: 'select',\n        id: curve_select_id,\n        parent: this.controls_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const curve_name of this._chart.supported_curves) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: curve_name,\n            text_content: curve_name,\n            parent: curve_select,\n        })\n    }\n    curve_select.addEventListener('change', () => {\n        this.set_violin_curve(curve_select.value)\n    })\n}\n\n/**\n * Render the checkboxes of the control panel\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_checkboxes\n */\nboxvio_chart_wrapper.prototype._render_checkboxes = function () {\n    const show_violins_checkbox_id = `${this.id_string()}_show_violins_checkbox`\n    /**\n     * Checkbox for showing violins\n     * @type {Element}\n     */\n    const show_violins_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_violins_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_violins_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_violins_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show violins',\n        parent: this.controls_container,\n    })\n    show_violins_label.setAttribute('for', show_violins_checkbox_id)\n    show_violins_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.violins_g)\n    })\n\n    const show_boxes_checkbox_id = `${this.id_string()}_show_boxes_checkbox`\n    /**\n     * Checkbox for showing boxes\n     * @type {Element}\n     */\n     const show_boxes_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_boxes_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_boxes_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_boxes_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show boxes',\n        parent: this.controls_container,\n    })\n    show_boxes_label.setAttribute('for', show_boxes_checkbox_id)\n    show_boxes_checkbox.addEventListener('change', () => {\n        toggle_visibility(this._graphics.boxes_g)\n        // (DISABLED) Disable the checkbox for outliers (defined below)\n        // show_outliers_checkbox.disabled = !show_boxes_checkbox.checked\n    })\n\n    const show_outliers_checkbox_id = `${this.id_string()}_show_outliers_checkbox`\n    /**\n     * Checkbox for showing outliers\n     * @type {Element}\n     */\n    const show_outliers_checkbox = common.create_dom_element({\n        element_type: 'input',\n        type: 'checkbox',\n        id: show_outliers_checkbox_id,\n        parent: this.controls_container,\n    })\n    show_outliers_checkbox.checked = true\n    /**\n     * Checkbox label for density plot\n     * @type {Element}\n     */\n    const show_outliers_label = common.create_dom_element({\n        element_type: 'label',\n        text_content: 'Show outliers',\n        parent: this.controls_container,\n    })\n    show_outliers_label.setAttribute('for', show_outliers_checkbox_id)\n    show_outliers_checkbox.addEventListener('change', () => {\n        for (const group of Object.values(this._graphics.outliers)) {\n            toggle_visibility(group)\n        }\n    })\n}\n\n/**\n * Render the sliders of the control panel that\n * control the scale of violins and boxes\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_scale_sliders\n */\nboxvio_chart_wrapper.prototype._render_scale_sliders = function () {\n    /**\n     * Slider for violin scale\n     * @type {Element}\n     */\n    const violin_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.violin_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    violin_scale_slider.setAttribute('min', 0)\n    violin_scale_slider.setAttribute('max', 1)\n    violin_scale_slider.setAttribute('step', 0.05)\n    violin_scale_slider.value = this._chart.violin_scale_default\n    violin_scale_slider.addEventListener('input', () => {\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n    /**\n     * Reset button for the violin_scale_slider\n     * @type {Element}\n     */\n    const violin_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    violin_scale_slider_reset.addEventListener('click', () => {\n        violin_scale_slider.value = this._chart.violin_scale_default\n        this.set_violin_scale(Number(violin_scale_slider.value))\n    })\n\n    /**\n     * Slider for box scale\n     * @type {Element}\n     */\n    const box_scale_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.box_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    box_scale_slider.setAttribute('min', 0)\n    box_scale_slider.setAttribute('max', 1)\n    box_scale_slider.setAttribute('step', 0.05)\n    box_scale_slider.value = this._chart.box_scale_default\n    box_scale_slider.addEventListener('input', () => {\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n    /**\n     * Reset button for the box_scale_slider\n     * @type {Element}\n     */\n    const box_scale_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    box_scale_slider_reset.addEventListener('click', () => {\n        box_scale_slider.value = this._chart.box_scale_default\n        this.set_box_scale(Number(box_scale_slider.value))\n    })\n}\n\n/**\n * Render the control elements to change the number of bins\n * @function\n * @private\n * @name boxvio_chart_wrapper#_render_n_bins_control\n */\nboxvio_chart_wrapper.prototype._render_n_bins_control = function () {\n    const group_select_id = `${this.id_string()}_group_select`\n    const group_select = common.create_dom_element({\n        element_type: 'select',\n        id: group_select_id,\n        parent: this.controls_container,\n        // TODO: add ARIA attributes?\n    })\n    for (const name of this._group_names) {\n        common.create_dom_element({\n            element_type: 'option',\n            value: name,\n            text_content: name,\n            parent: group_select,\n        })\n    }\n    group_select.addEventListener('change', () => {\n        const name = group_select.value\n        violin_n_bins_slider.setAttribute(\n            'max',\n            this._controls.max_bins_multiplier * this._chart.n_bins_default[name]\n        )\n        violin_n_bins_slider.value = this._chart.n_bins[name]\n    })\n\n    const violin_n_bins_slider = common.create_dom_element({\n        element_type: 'input',\n        type: 'range',\n        // value: this._chart.violin_scale_default,  // This does not work here?\n        parent: this.controls_container,\n    })\n    violin_n_bins_slider.setAttribute('min', 1)\n    violin_n_bins_slider.setAttribute(\n        'max',\n        this._controls.max_bins_multiplier * this._chart.n_bins_default[group_select.value]\n    )\n    violin_n_bins_slider.value = this._chart.n_bins[group_select.value]\n    violin_n_bins_slider.addEventListener('input', () => {\n        this.set_n_bins(group_select.value, Number(violin_n_bins_slider.value))\n    })\n\n    const violin_n_bins_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset',\n        parent: this.controls_container,\n    })\n    violin_n_bins_slider_reset.addEventListener('click', () => {\n        const name = group_select.value\n        violin_n_bins_slider.value = this._chart.n_bins_default[name]\n        this.set_n_bins(name, Number(violin_n_bins_slider.value))\n    })\n\n    const violin_all_n_bins_slider_reset = common.create_dom_element({\n        element_type: 'button',\n        type: 'button',\n        text_content: 'Reset all bins',\n        parent: this.controls_container,\n    })\n    violin_all_n_bins_slider_reset.addEventListener('click', () => {\n        const name = group_select.value\n        // Update the value of the slider\n        violin_n_bins_slider.value = this._chart.n_bins_default[name]\n        for (const [name, n_bins] of Object.entries(this._chart.n_bins_default)) {\n            this.set_n_bins(name, n_bins)\n        }\n    })\n}\n\n\n// HELPER FUNCTIONS\n\n/**\n * Compute (boxplot) metrics for the data\n * @param {number[]} values the data values\n * @returns {{\n *  max: number,\n *  upper_fence: number,\n *  quartile3: number,\n *  median: number,\n *  mean: number,\n *  iqr: number,\n *  quartile1: number,\n *  lower_fence: number,\n *  min: number,\n * }}\n */\nfunction calc_metrics(values) {\n    const metrics = {\n        max: null,\n        upper_fence: null,\n        quartile3: null,\n        median: null,\n        mean: null,\n        iqr: null,\n        quartile1: null,\n        lower_fence: null,\n        min: null,\n    }\n\n    metrics.min = d3.min(values)\n    metrics.quartile1 = d3.quantile(values, 0.25)\n    metrics.median = d3.median(values)\n    metrics.mean = d3.mean(values)\n    metrics.quartile3 = d3.quantile(values, 0.75)\n    metrics.max = d3.max(values)\n    metrics.iqr = metrics.quartile3 - metrics.quartile1\n    metrics.lower_fence = metrics.quartile1 - 1.5 * metrics.iqr\n    metrics.upper_fence = metrics.quartile3 + 1.5 * metrics.iqr\n\n    return metrics\n}","/**\n * Get a deep copy of an object\n * @param {Object} obj the object\n * @returns a deep copy of the object\n */\nexport function deepcopy(obj) {\n\treturn JSON.parse(JSON.stringify(obj))\n}","/*global tstring, page_globals, Promise, data_manager, common */\n/*eslint no-undef: \"error\"*/\n\n\"use strict\";\n\n\nimport { chart_wrapper } from \"../../lib/charts/chart-wrapper.js\";\nimport { boxvio_chart_wrapper } from \"../../lib/charts/d3/boxvio-chart-wrapper.js\";\n\n\nexport const analysis =  {\n\n\t// Form factory instance\n\tform: null,\n\n\tarea_name\t\t\t\t: null,\n\trow\t\t\t\t\t\t: null,\n\n\t// DOM containers\n\texport_data_container\t\t: null,\n\tform_items_container\t\t: null,\n\tdiameter_chart_container\t: null,\n\tweight_chart_container\t\t: null,\n\n\t/**\n\t * Chart wrapper instance for diameter\n\t * @type {chart_wrapper}\n\t */\n\tdiameter_chart_wrapper: null,\n\t/**\n\t * Chart wrapper instance for weight\n\t * @type {chart_wrapper}\n\t */\n\tweight_chart_wrapper: null,\n\n\n\tset_up : function(options) {\n\n\t\tconst self = this\n\n\t\t// options\n\t\t\tself.area_name\t\t\t\t\t= options.area_name\n\t\t\tself.export_data_container\t\t= options.export_data_container\n\t\t\tself.row\t\t\t\t\t\t= options.row\n\t\t\tself.form_items_container\t\t= options.form_items_container\n\t\t\tself.diameter_chart_container\t= options.diameter_chart_container\n\t\t\tself.weight_chart_container\t\t= options.weight_chart_container\n\n\t\t// form\n\t\tconst form_node = self.render_form()\n\t\tself.form_items_container.appendChild(form_node)\n\n\t\treturn true\n\t},//end set_up\n\n\t/**\n\t * RENDER FORM\n\t */\n\trender_form : function() {\n\n\t\tconst self = this\n\n\t\t// DocumentFragment is like a virtual DOM\n\t\tconst fragment = new DocumentFragment()\n\n\t\t// form_factory instance\n\t\t\tself.form = self.form || new form_factory()\n\n\t\tconst form_row = common.create_dom_element({\n\t\t\telement_type\t: \"div\",\n\t\t\tclass_name\t\t: \"form-row fields\",\n\t\t\tparent\t\t\t: fragment\n\t\t})\n\n\t\t// mint\n\t\t\tself.form.item_factory({\n\t\t\t\tid\t\t\t\t: \"mint\",\n\t\t\t\tname\t\t\t: \"mint\",\n\t\t\t\tlabel\t\t\t: tstring.mint || \"mint\",\n\t\t\t\tq_column\t\t: \"p_mint\",\n\t\t\t\tvalue_wrapper\t: ['[\"', '\"]'], // to obtain [\"value\"] in selected value only\n\t\t\t\teq\t\t\t\t: \"LIKE\",\n\t\t\t\teq_in\t\t\t: \"%\",\n\t\t\t\teq_out\t\t\t: \"%\",\n\t\t\t\tis_term\t\t\t: true,\n\t\t\t\tparent\t\t\t: form_row,\n\t\t\t\tcallback\t\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// number\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"number\",\n\t\t\t\tname \t\t: \"number\",\n\t\t\t\tq_column \t: \"term\",\n\t\t\t\tq_table \t: \"types\",\n\t\t\t\tlabel\t\t: tstring.number_key || \"Number & Key\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tgroup_op \t: '$or',\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t\t// denomination\n\t\t\tself.form.item_factory({\n\t\t\t\tid \t\t\t: \"denomination\",\n\t\t\t\tname \t\t: \"denomination\",\n\t\t\t\tq_column \t: \"ref_type_denomination\",\n\t\t\t\tq_table \t: \"any\",\n\t\t\t\tlabel\t\t: tstring.denomination || \"denomination\",\n\t\t\t\tis_term \t: false,\n\t\t\t\tparent\t\t: form_row,\n\t\t\t\tcallback\t: function(form_item) {\n\t\t\t\t\tself.form.activate_autocomplete({\n\t\t\t\t\t\tform_item\t: form_item,\n\t\t\t\t\t\ttable\t\t: 'catalog'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\t\t// submit button\n\t\t\tconst submit_group = common.create_dom_element({\n\t\t\t\telement_type\t: \"div\",\n\t\t\t\tclass_name\t\t: \"form-group field button_submit\",\n\t\t\t\tparent\t\t\t: fragment\n\t\t\t})\n\t\t\tconst submit_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"submit\",\n\t\t\t\tid\t\t\t\t: \"submit\",\n\t\t\t\tvalue\t\t\t: tstring.search || \"Search\",\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block primary\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\tsubmit_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\tself.form_submit(form)\n\t\t\t})\n\n\t\t// reset button\n\t\t\tconst reset_button = common.create_dom_element({\n\t\t\t\telement_type\t: \"input\",\n\t\t\t\ttype\t\t\t: \"button\",\n\t\t\t\tid\t\t\t\t: \"button_reset\",\n\t\t\t\tvalue\t\t\t: tstring.reset || 'Reset',\n\t\t\t\tclass_name\t\t: \"btn btn-light btn-block secondary button_reset\",\n\t\t\t\tparent\t\t\t: submit_group\n\t\t\t})\n\t\t\treset_button.addEventListener(\"click\", function (e) {\n\t\t\t\te.preventDefault()\n\t\t\t\twindow.location.replace(window.location.pathname);\n\t\t\t})\n\n\t\t// operators\n\t\t\t// fragment.appendChild( forms.build_operators_node() )\n\t\t\tconst operators_node = self.form.build_operators_node()\n\t\t\tfragment.appendChild( operators_node )\n\n\t\t// the form element itself!\n\t\t\tconst form = common.create_dom_element({\n\t\t\t\telement_type\t: \"form\",\n\t\t\t\tid\t\t\t\t: \"search_form\",\n\t\t\t\tclass_name\t\t: \"form-inline\"\n\t\t\t})\n\t\t\tform.appendChild(fragment)\n\n\n\t\treturn form\n\t},//end render_form\n\n\t/**\n\t * FORM SUBMIT\n\t * Form submit launch search\n\t */\n\tform_submit : function(form_obj, options={}) {\n\t\t\n\t\tconst self = this\n\n\t\t// options\n\t\t\tconst scroll_result\t= typeof options.scroll_result===\"boolean\" ? options.scroll_result : true\n\t\t\tconst form_items\t= options.form_items || self.form.form_items\n\n\t\t// build filter\n\t\t\tconst filter = self.form.build_filter({\n\t\t\t\tform_items: form_items\n\t\t\t})\n\t\t\n\t\t// empty filter case\n\t\t\tif (!filter || filter.length<1) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t// scroll to head result\n\t\t\tif (scroll_result) {\n\t\t\t\tthis.diameter_chart_container.scrollIntoView(\n\t\t\t\t\t{behavior: \"smooth\", block: \"start\", inline: \"nearest\"}\n\t\t\t\t);\n\t\t\t}\n\n\t\t// search rows exec against API\n\t\t\tconst js_promise = self.search_rows({\n\t\t\t\tfilter\t\t\t: filter,\n\t\t\t\tlimit\t\t\t: 0,\n\t\t\t\tprocess_result\t: {\n\t\t\t\t\tfn\t\t: 'process_result::add_parents_and_children_recursive',\n\t\t\t\t\tcolumns\t: [{name : \"parents\"}]\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((parsed_data)=>{\n\n\t\t\t\tevent_manager.publish('form_submit', parsed_data)\n\n\t\t\t\tconsole.log(parsed_data)\n\n\t\t\t\t// const diameters = parsed_data\n\t\t\t\t// \t.map((ele) => ele.full_coins_reference_diameter_max)\n\t\t\t\t// \t.flat()\n\t\t\t\t// \t.filter((v) => v)\n\t\t\t\t// console.log(diameters)\n\n\t\t\t\t// this.chart_wrapper = new histogram_wrapper(\n\t\t\t\t// \tthis.chart_wrapper_container,\n\t\t\t\t// \tdiameters,\n\t\t\t\t// \t'Diameter'\n\t\t\t\t// )\n\t\t\t\t// this.chart_wrapper.render()\n\n\t\t\t\tconst data = {}\n\t\t\t\tfor (const ele of parsed_data) {\n\t\t\t\t\tconst name = ele.ref_type_number\n\t\t\t\t\t// if (!['12', '59', '62', '18','11a','14'].includes(name)) continue\n\t\t\t\t\t// if (!['59', '62'].includes(name)) continue\n\t\t\t\t\tconst tmpData = {}\n\t\t\t\t\tconst calculable = ele.full_coins_reference_calculable\n\t\t\t\t\tconst diameter_max = ele.full_coins_reference_diameter_max\n\t\t\t\t\tconst diameter_min = ele.full_coins_reference_diameter_min\n\t\t\t\t\tconst weight = ele.full_coins_reference_weight\n\t\t\t\t\tif (diameter_max && diameter_max.length) {\n\t\t\t\t\t\ttmpData.diameter_max = diameter_max.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (diameter_min && diameter_min.length) {\n\t\t\t\t\t\ttmpData.diameter_min = diameter_min.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (weight && weight.length) {\n\t\t\t\t\t\ttmpData.weight = weight.filter((v, i) => v && calculable[i])\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(tmpData).length) {\n\t\t\t\t\t\tdata[name] = tmpData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(data)\n\n\t\t\t\t// Diameters\n\t\t\t\tconst diameters = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tdiameters[name] = props.diameter_max\n\t\t\t\t}\n\t\t\t\tthis.diameter_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.diameter_chart_container,\n\t\t\t\t\tdiameters,\n\t\t\t\t\ttrue,\n\t\t\t\t\t'Diameter'\n\t\t\t\t)\n\t\t\t\tthis.diameter_chart_wrapper.render()\n\n\t\t\t\t// Diameters\n\t\t\t\tconst weights = {}\n\t\t\t\tfor (const [name, props] of Object.entries(data)) {\n\t\t\t\t\tweights[name] = props.weight\n\t\t\t\t}\n\t\t\t\tthis.weight_chart_wrapper = new boxvio_chart_wrapper(\n\t\t\t\t\tthis.weight_chart_container,\n\t\t\t\t\tweights,\n\t\t\t\t\ttrue,\n\t\t\t\t\t'Weight'\n\t\t\t\t)\n\t\t\t\tthis.weight_chart_wrapper.render()\n\n\t\t\t})\n\n\t},\n\n\t/**\n\t * SEARCH_ROWS\n\t * Call to API and load json data results of search\n\t */\n\tsearch_rows : function(options) {\n\n\t\tconst self = this\n\n\t\t// sort vars\n\t\t\tconst filter\t\t\t= options.filter || null\n\t\t\tconst ar_fields\t\t\t= options.ar_fields || [\"*\"]\n\t\t\tconst order\t\t\t\t= options.order || \"norder ASC\"\n\t\t\tconst lang\t\t\t\t= page_globals.WEB_CURRENT_LANG_CODE\n\t\t\tconst process_result\t= options.process_result || null\n\t\t\tconst limit\t\t\t\t= options.limit != undefined\n\t\t\t\t\t\t\t\t\t\t? options.limit\n\t\t\t\t\t\t\t\t\t\t: 30\n\t\t\n\t\treturn new Promise(function(resolve){\n\t\t\t// parse_sql_filter\n\t\t\t\tconst group = []\n\t\t\t// parsed filters\n\t\t\t\tconst sql_filter = self.form.parse_sql_filter(filter)\n\t\t\t// request\n\t\t\t\tconst request_body = {\n\t\t\t\t\tdedalo_get\t\t: 'records',\n\t\t\t\t\ttable\t\t\t: 'catalog',\n\t\t\t\t\tar_fields\t\t: ar_fields,\n\t\t\t\t\tlang\t\t\t: lang,\n\t\t\t\t\tsql_filter\t\t: sql_filter,\n\t\t\t\t\tlimit\t\t\t: limit,\n\t\t\t\t\tgroup\t\t\t: (group.length>0) ? group.join(\",\") : null,\n\t\t\t\t\tcount\t\t\t: false,\n\t\t\t\t\torder\t\t\t: order,\n\t\t\t\t\tprocess_result\t: process_result\n\t\t\t\t}\n\t\t\t\tdata_manager.request({\n\t\t\t\t\tbody : request_body\n\t\t\t\t})\n\t\t\t\t.then((response)=>{\n\t\t\t\t\t// data parsed\n\t\t\t\t\tconst data = page.parse_catalog_data(response.result)\n\n\t\t\t\t\tresolve(data)\n\t\t\t\t})\n\t\t})\n\n\t},\n\n}//end analysis\n\n"],"mappings":"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"}