"use strict";var mint={section_id:null,export_data_container:null,set_up:function(e){const t=this;t.export_data_container=e.export_data_container,t.section_id=e.section_id;const a=page.render_export_data_buttons();return t.export_data_container.appendChild(a),t.export_data_container.classList.add("hide"),t.section_id&&t.get_row_data({section_id:t.section_id}).then((function(e){console.log("--\x3e set_up get_row_data API response:",e.result);const a=e.result.find(e=>"mint"===e.id);if(t.draw_row({target:document.getElementById("row_detail"),ar_rows:a.result}),void 0!==a.result[0]){const e=page.parse_mint_data(a.result[0]);e.georef_geojson&&t.draw_map({mint_map_data:e.georef_geojson,mint_popup_data:{section_id:e.section_id,title:e.name,description:e.history.trim()},place_data:e.place_data})}const n=e.result.find(e=>"mint_catalog"===e.id);if(n.result){const e=n.result.find(e=>"mints"===e.term_table);t.get_types_data2({section_id:e.section_id}).then((function(a){const n=t.draw_types2({ar_rows:a,mint_section_id:e.section_id});if(n){const e=document.getElementById("types");e.appendChild(n),page.activate_images_gallery(e)}}))}event_manager.publish("data_request_done",{request_body:null,result:{mint:a.result,mint_catalog:n.result},export_data_parser:page.export_parse_mint_data}),t.export_data_container.classList.remove("hide")})),!0},get_row_data:function(e){const t=e.section_id,a=[];a.push({id:"mint",options:{dedalo_get:"records",table:"mints",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["section_id","lang","name","place_data","place","history","bibliography_data","map","georef_geojson"],sql_filter:"section_id = "+parseInt(t),count:!1,resolve_portals_custom:{bibliography_data:"bibliographic_references"}}}),a.push({id:"mint_catalog",options:{dedalo_get:"records",table:"catalog",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["section_id","term","term_table"],count:!1,limit:0,sql_filter:"term_data='[\""+parseInt(t)+"\"]'"}});return data_manager.request({body:{dedalo_get:"combi",ar_calls:a}})},get_types_data2:function(e){const t=e.section_id;return new Promise((function(e){const a={dedalo_get:"records",table:"catalog",ar_fields:["*"],lang:page_globals.WEB_CURRENT_LANG_CODE,sql_filter:"section_id = "+parseInt(t),limit:0,group:null,count:!1,order:"norder ASC",process_result:{fn:"process_result::add_parents_and_children_recursive",columns:[{name:"parents"}]}};data_manager.request({body:a}).then((function(t){const a=t.result?page.parse_catalog_data(t.result):null;e(a)}))}))},draw_types2:function(e){const t=e.ar_rows,a=e.mint_section_id,n=new DocumentFragment,o=[];for(let e=0;e<t.length;e++){const r=t[e];if(r.section_id==a)continue;if(!(!!r.parents&&r.parents.find(e=>e===a))){console.log("Excluded row:",r);continue}const s=mint_row.draw_type_item(r);s&&(o.push(s),n.appendChild(s))}for(let e=0;e<o.length;e++){const t=o[e];if(t.parent){const e=o.find((function(e){return e.section_id==t.parent}));e&&e.container&&e.container.appendChild(t)}else console.log("node without parent:",t)}return n},draw_row:function(e){const t=void 0!==e.ar_rows[0]?e.ar_rows[0]:null,a=e.target;if(!t)return console.warn("Warning! draw_row row_object no found in options"),null;for(self.row_object=t,!0===SHOW_DEBUG&&console.log("Mint row_object:",t);a.hasChildNodes();)a.removeChild(a.lastChild);const n=new DocumentFragment,o=common.create_dom_element({element_type:"div",class_name:"",parent:n});if(!0===dedalo_logged){common.create_dom_element({element_type:"a",class_name:"section_id go_to_dedalo",text_content:t.section_id,href:"/dedalo/lib/dedalo/main/?t=numisdata6&id="+t.section_id,parent:o}).setAttribute("target","_blank")}if(t.name&&t.name.length>0){const e=common.create_dom_element({element_type:"div",class_name:"line-tittle-wrap",parent:o});let a=t.name;if(common.create_dom_element({element_type:"div",class_name:"line-tittle golden-color",text_content:a,parent:e}),t.place&&t.place.length>0){const a="| "+t.place;common.create_dom_element({element_type:"div",class_name:"info_value",text_content:a,parent:e})}}const r=common.create_dom_element({element_type:"div",class_name:"block-expandable",parent:o});let s=0;if(t.history&&t.history.length>0){const e=t.history;s+=e.length;common.create_dom_element({element_type:"div",class_name:"info_text_block",inner_html:e,parent:r})}if(s>220&&i(r,o),t.bibliography_data&&t.bibliography_data.length>0){const e=common.create_dom_element({element_type:"div",class_name:"info_line separator",parent:o});common.create_dom_element({element_type:"label",class_name:"big_label",text_content:tstring.bibliographic_references||"Bibliographic references",parent:e});const a=t.bibliography_data,n=a.length,r=biblio_row_fields,s=common.create_dom_element({element_type:"div",class_name:"info_text_block",parent:o});for(var _=0;_<n;_++){const e=common.create_dom_element({element_type:"div",class_name:"bibliographic_reference",parent:s}),t=a[_];r.biblio_object=t;const n=r.row_bibliography();e.appendChild(n)}i(s,o)}return a.appendChild(n),a;function i(e,t){e.classList.add("contracted-block");const a=common.create_dom_element({element_type:"div",class_name:"text-block-separator",parent:t}),n=common.create_dom_element({element_type:"div",class_name:"separator-arrow",parent:a});a.addEventListener("click",(function(){e.classList.contains("contracted-block")?(e.classList.remove("contracted-block"),n.style.transform="rotate(-90deg)"):(e.classList.add("contracted-block"),n.style.transform="rotate(90deg)")}))}},draw_map:function(e){const t=this,a=e.mint_map_data,n=e.mint_popup_data,o=e.place_data;function r(e){return{section_id:e.section_id,title:e.name,description:""}}return t.get_place_data({place_data:o}).then((function(e){const o=document.getElementById("map_container");t.map=t.map||new map_factory,t.map.init({map_container:o,map_position:null,popup_builder:page.map_popup_builder,popup_options:page.maps_config.popup_options,source_maps:page.maps_config.source_maps,legend:page.render_map_legend});const s=t.map_data(a,n),_=e.result[0].result;if(_&&_.length>0)for(let e=0;e<_.length;e++){const a=JSON.parse(_[e].georef_geojson),n=r(_[e]);n.type={},n.type="findspot";const o=t.map_data(a,n);console.log("--findspot_popup_data",n),s.push(o[0])}const i=e.result[1].result;if(i&&i.length>0)for(let e=0;e<i.length;e++){const a=JSON.parse(i[e].georef_geojson)||"",n=r(i[e]);n.type={},n.type="hoard";const o=t.map_data(a,n);console.log("--hoard_map_data_poitns",o),s.push(o[0])}console.log("map_data_poitns:",s),t.map.parse_data_to_map(s,null).then((function(){o.classList.remove("hide_opacity")}))})),!0},get_place_data:function(e){const t="place_data='"+JSON.stringify(e.place_data)+"'",a=[];a.push({id:"findspots",options:{dedalo_get:"records",table:"findspots",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["*"],count:!1,sql_filter:t}}),a.push({id:"hoards",options:{dedalo_get:"records",table:"hoards",db_name:page_globals.WEB_DB,lang:page_globals.WEB_CURRENT_LANG_CODE,ar_fields:["*"],count:!1,sql_filter:t}});return data_manager.request({body:{dedalo_get:"combi",ar_calls:a}})},map_data:function(e,t){const a=function(){switch(t.type){case"findspot":return page.maps_config.markers.findspot;case"hoard":return page.maps_config.markers.hoard;default:return page.maps_config.markers.mint}}(),n=Array.isArray(e)?e:[e],o=[];for(let e=0;e<n.length;e++){const r={lat:null,lon:null,geojson:[n[e]],marker_icon:a,data:t};o.push(r)}return o}};