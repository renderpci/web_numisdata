---
swagger: "2.0"
info:
  description: "Builds Public Dédalo data for publication. <br>Use this online tool\
    \ to test your data and remember always write your <i>Auth code</i> when executes\
    \ a try call.<br> <strong>This API is focused to Oral History archives and is\
    \ for general pourposes.<br>If you need special features or custom results, you\
    \ are wellcome to join API develop team contacting with the source developers\
    \ (aka Alex&Paco)</strong> in webmaster@render.es"
  version: "1.0.3"
  title: "Dédalo Web REST API"
  contact:
    name: "Aditional Dédalo publication info"
    url: "https://dedalo.render.es/dedalo/lib/dedalo/publication/server_api/v1/docu/API_docu_v1.pdf"
  license:
    name: "Apache 2.0 license"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "dedalo4.antropolis.net"
basePath: "/dedalo/lib/dedalo/publication/server_api/v1/json"
tags:
- name: "Info"
  description: "Informative calls"
- name: "Records"
  description: "Generic data get functions"
- name: "Thesaurus"
  description: "Specific hierarchy and thesaurus functions"
- name: "Free"
  description: "Search functions in transcription text"
- name: "Video view"
  description: "Utils for get video player general data"
schemes:
- "http"
- "https"
produces:
- "application/json"
paths:
  /tables_info:
    get:
      tags:
      - "Info"
      summary: "Info about tables schema"
      description: "Get complete info about current disposable tables and columns."
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/table_list"
  /records:
    post:
      tags:
      - "Records"
      summary: "Get records from DDBB"
      description: "Search records with current params in requested table."
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "table"
        in: "query"
        required: false
        type: "string"
        default: "interview"
      - name: "ar_fields"
        in: "query"
        description: "Comma separated list of required columns in table"
        required: false
        type: "string"
      - name: "section_id"
        in: "query"
        description: "Filter by specific section_id. Like 1"
        required: false
        type: "number"
        format: "integer"
      - name: "sql_fullselect"
        in: "query"
        description: "Custom sql select for builds query. Replaces any other columns\
          \ selection option"
        required: false
        type: "string"
      - name: "sql_filter"
        in: "query"
        description: "Custom query added to standar filter"
        required: false
        type: "string"
        format: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "order"
        in: "query"
        description: "Custom order for result.Set null for no sort"
        required: false
        type: "string"
        format: "string"
      - name: "limit"
        in: "query"
        description: "Maximun records returned in query. 0 for no limit"
        required: false
        type: "number"
        default: 10
        format: "int"
      - name: "group"
        in: "query"
        description: "Custom group query for sql like 'lang'"
        required: false
        type: "string"
        format: "string"
      - name: "offset"
        in: "query"
        description: "Custom records offset for query"
        required: false
        type: "number"
        format: "int"
      - name: "count"
        in: "query"
        description: "Activates total records counter for pagination"
        required: false
        type: "boolean"
        format: "bool"
      - name: "resolve_portal"
        in: "query"
        description: "Activates automatic resolution of portals option. Default is\
          \ false"
        required: false
        type: "boolean"
        format: "bool"
      - name: "resolve_portals_custom"
        in: "query"
        description: "Resolve requested portals only. Use json map object like '{\"\
          audiovisual\":\"audiovisual\",\"informant\":\"informant\"}' where key is\
          \ column name and value is target table"
        required: false
        type: "string"
        format: "string"
      - name: "map"
        in: "query"
        description: "json representation of array ob objects like [{\"table\": \"\
          informant\",\"field\":birthplace_id\",\"function\":\"resolve_geolocation\"\
          ,\"output_field\":\"birthplace_obj\"}] Default is false"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/result"
        500:
          description: "Server error"
  /reel_terms:
    post:
      tags:
      - "Thesaurus"
      summary: "Get reel indexed terms"
      description: "Resolve all terms used in the indexation of the given reel transcription\
        \ (audiovisual record)."
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "av_section_id"
        in: "query"
        description: "audiovisual section id (one or various separated by comma)"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/result"
  /fragment_from_index_locator:
    post:
      tags:
      - "Thesaurus"
      summary: "Build fragment of text and video from a index locator"
      description: "Calculate all fragments indexed with this locator."
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "index_locator"
        in: "query"
        description: "locator object encoded as json like {\"section_tipo\":\"rsc167\"\
          ,\"section_id\":\"1\",\"tag_id\":\"1\"}"
        required: true
        type: "string"
        default: "{\"section_tipo\":\"rsc167\",\"section_id\":\"1\",\"tag_id\":\"\
          1\"}"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/result"
  /thesaurus_root_list:
    post:
      tags:
      - "Thesaurus"
      summary: "Get first level of terms from thesaurus"
      description: "Return a array of 'ts_term' objects with resolved data. You can\
        \ use only the data or (in PHP) manage 'ts_term' objects to build custom html."
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "table"
        in: "query"
        description: "Optional comma separated names of thesaurus tables. If undefined,\
          \ server config thesaurus tables are used"
        required: false
        type: "string"
        format: "string"
      - name: "parents"
        in: "query"
        description: "Optional comma separated parents used as roots like 'hierarchy1_245,hierarchy1_253'.\
          \ If defined, override default behaviour (from first elements of table like\
          \ 'ts1_1)"
        required: false
        type: "string"
        format: "string"
      - name: "exclude_tld"
        in: "query"
        description: "Optional comma separated list of tld to exclude like 'xx,rt'"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            title: "Array of records"
            items:
              $ref: "#/definitions/Records info"
  /thesaurus_random_term:
    post:
      tags:
      - "Thesaurus"
      summary: "A random thesaurus term name"
      description: "Return a random term from thesaurus tables"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "table"
        in: "query"
        description: "Optional comma separated names of thesaurus tables. If undefined,\
          \ server config thesaurus tables are used"
        required: false
        type: "string"
        format: "string"
      - name: "exclude_tld"
        in: "query"
        description: "Optional comma separated list of tld to exclude like 'xx,rt'"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            title: "Array of records"
            items:
              $ref: "#/definitions/Records info"
  /thesaurus_search:
    post:
      tags:
      - "Thesaurus"
      summary: "Search into thesaurus term"
      description: "Execute a search against thesaurus tables"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "table"
        in: "query"
        description: "Optional comma separated names of thesaurus tables. If undefined,\
          \ server config thesaurus tables are used"
        required: false
        type: "string"
        format: "string"
      - name: "exclude_tld"
        in: "query"
        description: "Optional comma separated list of tld to exclude like 'xx,rt'"
        required: false
        type: "string"
        format: "string"
      - name: "q"
        in: "query"
        description: "string to search in database. Minimun 3 chars for full text\
          \ search"
        required: true
        type: "string"
        default: "term"
      - name: "rows_per_page"
        in: "query"
        description: "Pagination preference. One row per page is the default value"
        required: false
        type: "integer"
        format: "int"
      - name: "page_number"
        in: "query"
        description: "Pagination preference. Current page number. One is default"
        required: false
        type: "integer"
        format: "int"
      - name: "tree_root"
        in: "query"
        description: "Defines first element from build the hierarchy tree when show\
          \ the reults. Accepted values first_parent | last_parent . Default is last_parent"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            title: "Array of records"
            items:
              $ref: "#/definitions/Records info"
  /thesaurus_autocomplete:
    post:
      tags:
      - "Thesaurus"
      summary: "Predictive autocomplete search"
      description: "Search string in database (begings with $q) and get array of max\
        \ 25 records"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "table"
        in: "query"
        description: "Optional comma separated names of thesaurus tables. If undefined,\
          \ server config thesaurus tables are used"
        required: false
        type: "string"
        format: "string"
      - name: "q"
        in: "query"
        description: "string to search in database. Minimun 3 chars for full text\
          \ search"
        required: true
        type: "string"
        default: "term"
      - name: "limit"
        in: "query"
        description: "Max number of records returned. Undefined uses default of 25"
        required: false
        type: "integer"
        format: "int"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            title: "Array of records"
            items:
              $ref: "#/definitions/Records info"
  /thesaurus_term:
    post:
      tags:
      - "Thesaurus"
      summary: "Get thesaurus term objects (one or various)"
      description: "Resolve one or more ts_term from ar_term_id"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "ar_term_id"
        in: "query"
        description: "Comma separated list of one or various term_id like 'ts1_1,ts1_2'"
        required: true
        type: "string"
        default: "ts1_1"
      - name: "combine"
        in: "query"
        description: "Optional combined result mode. Options: false | combined | cumulative.\
          \ Default is false. When is set to combine, only indexations with intersections\
          \ are returned"
        required: false
        type: "string"
        default: "false"
      responses:
        200:
          description: "OK"
  /thesaurus_indexation_node:
    post:
      tags:
      - "Thesaurus"
      summary: "Indexation object with all required info"
      description: "Builds a indexation_node data object"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "term_id"
        in: "query"
        description: "Term id like 'ts1_1'"
        required: true
        type: "string"
        default: "ts1_1"
      - name: "ar_locators"
        in: "query"
        description: "json encoded array of locators like [{locator1},{locator2}]"
        required: true
        type: "string"
        default: "[{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"1\",\"section_tipo\"\
          :\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\"\
          :\"oh1\",\"from_component_tipo\":\"hierarchy40\"},{\"type\":\"dd96\",\"\
          tag_id\":\"1\",\"section_id\":\"4\",\"section_tipo\":\"rsc167\",\"component_tipo\"\
          :\"rsc36\",\"section_top_id\":\"3\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\"\
          :\"hierarchy40\"}]"
      - name: "image_type"
        in: "query"
        description: "Selects type of image to use. Values are 'identify_image', 'posterframe'.\
          \ Default is posterframe"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
  /thesaurus_video_view_data:
    post:
      tags:
      - "Thesaurus"
      summary: "Video player data"
      description: "Gets data ued to view video fragment"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "term_id"
        in: "query"
        description: "Term id to get data like ts1_1"
        required: true
        type: "string"
        default: "ts1_1"
      - name: "ar_locators"
        in: "query"
        description: "JSON ecoded array of locator objects like [{\"type\":\"dd96\"\
          ,\"tag_id\":\"2\",\"section_id\":\"1\",\"section_tipo\":\"rsc167\",\"component_tipo\"\
          :\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\"\
          :\"hierarchy40\"},{\"type\":\"dd96\",\"tag_id\":\"6\",\"section_id\":\"\
          1\",\"section_tipo\":\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\"\
          :\"1\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\":\"hierarchy40\"\
          }]"
        required: true
        type: "string"
        default: "[{\"type\":\"dd96\",\"tag_id\":\"1\",\"section_id\":\"1\",\"section_tipo\"\
          :\"rsc167\",\"component_tipo\":\"rsc36\",\"section_top_id\":\"1\",\"section_top_tipo\"\
          :\"oh1\",\"from_component_tipo\":\"hierarchy40\"},{\"type\":\"dd96\",\"\
          tag_id\":\"1\",\"section_id\":\"4\",\"section_tipo\":\"rsc167\",\"component_tipo\"\
          :\"rsc36\",\"section_top_id\":\"3\",\"section_top_tipo\":\"oh1\",\"from_component_tipo\"\
          :\"hierarchy40\"}]"
      - name: "ar_locators_key"
        in: "query"
        description: "current array key selector. Default is '0'"
        required: false
        type: "integer"
      responses:
        200:
          description: "OK"
  /thesaurus_childrens:
    post:
      tags:
      - "Thesaurus"
      summary: "Search all childrens of current term"
      description: "Exec a records query in current term table to find records with\
        \ data parent equal to current term_id"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "ar_fields"
        in: "query"
        description: "Comma separated list of required columns in table"
        required: false
        type: "string"
      - name: "term_id"
        in: "query"
        description: "Term id to get data like ts1_1"
        required: false
        type: "string"
      - name: "recursive"
        in: "query"
        description: "set deep hierarchy search on true"
        required: false
        type: "boolean"
        default: false
      responses:
        200:
          description: "OK"
  /thesaurus_parents:
    post:
      tags:
      - "Thesaurus"
      summary: "Search all parents of current term"
      description: "Exec a records query in current term table to find records with\
        \ data children equal to current term_id"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "ar_fields"
        in: "query"
        description: "Comma separated list of required columns in table"
        required: false
        type: "string"
      - name: "term_id"
        in: "query"
        description: "Term id to get data like ts1_2"
        required: false
        type: "string"
      - name: "recursive"
        in: "query"
        description: "set deep hierarchy search on true"
        required: false
        type: "boolean"
        default: false
      responses:
        200:
          description: "OK"
  /free_search:
    post:
      tags:
      - "Free"
      summary: "Find word/s in DDBB"
      description: "Exec a search against transcription column in audiovisual table"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "q"
        in: "query"
        description: "String to search"
        required: true
        type: "string"
        default: "house"
      - name: "search_mode"
        in: "query"
        description: "SQL type of search. Default is 'full_text_search'"
        required: false
        type: "string"
      - name: "rows_per_page"
        in: "query"
        description: "Number of records returned by page. Default is 10"
        required: false
        type: "integer"
        format: "int"
      - name: "page_number"
        in: "query"
        description: "Current page number (pagination params)"
        required: false
        type: "integer"
        format: "int"
      - name: "offset"
        in: "query"
        description: "Offset used to paginate results. Default is 0"
        required: false
        type: "integer"
        format: "int"
      - name: "apperances_limit"
        in: "query"
        description: "Max number of apperances (matches) calculated. Default is 1"
        required: false
        type: "integer"
        format: "int"
      - name: "match_select"
        in: "query"
        description: "Selects specific match inside results. Default = false . Optional"
        required: false
        type: "boolean"
      - name: "count"
        in: "query"
        description: "Exec total records count. Default is true"
        required: false
        type: "boolean"
      - name: "image_type"
        in: "query"
        description: "Type of image returned. Options are posterframe | identify_image.\
          \  Default is posterframe"
        required: false
        type: "string"
      - name: "list_fragment"
        in: "query"
        description: "Resolve text fragment to show in list mode (small text, without\
          \ video cut). Default is true"
        required: false
        type: "boolean"
      - name: "video_fragment"
        in: "query"
        description: "Activates video fragment resolution (with extended transcription\
          \ fragment and video cut). Default is false"
        required: false
        type: "boolean"
      - name: "fragment_terms"
        in: "query"
        description: "Calculates terms (indexations) for current fragment of transcription.\
          \ Default is false"
        required: false
        type: "boolean"
      - name: "filter"
        in: "query"
        description: "Apply a filter to result like 'section_tipo = 1'"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
  /full_reel:
    post:
      tags:
      - "Video view"
      summary: "Full transcriptions data"
      description: "Get full reel data. Complete transcription without tc cut. Used\
        \ when you need show full interview (mode full)"
      parameters:
      - name: "code"
        in: "query"
        description: "Auth code (mandatory)"
        required: true
        type: "string"
      - name: "lang"
        in: "query"
        description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
          \ If undefined, API server settings default lang is used"
        required: false
        type: "string"
        default: "lg-eng"
      - name: "av_section_id"
        in: "query"
        description: "Section id number to filter records"
        required: true
        type: "integer"
        default: 1
        format: "int"
      - name: "image_type"
        in: "query"
        description: "Type of image returned. Options are posterframe | identify_image.\
          \  Default is posterframe"
        required: false
        type: "string"
      - name: "terms"
        in: "query"
        description: "Resolves current transcription indexed terms. Default is false"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/inline_response_200"
definitions:
  table_list:
    type: "object"
    required:
    - "table_name"
    properties:
      table_name:
        type: "array"
        items:
          $ref: "#/definitions/field_item"
  field_item:
    type: "string"
    example: "\"section_id\""
  result:
    type: "array"
    items:
      $ref: "#/definitions/row"
  row:
    type: "object"
    required:
    - "table"
    properties:
      table:
        type: "string"
        example: "interview"
  Records info:
    properties:
      name:
        type: "string"
      single:
        type: "boolean"
  inline_response_200:
    properties:
      result:
        type: "object"
        properties: {}
      msg:
        type: "string"
parameters:
  code:
    name: "code"
    in: "query"
    description: "Auth code (mandatory)"
    required: true
    type: "string"
  lang:
    name: "lang"
    in: "query"
    description: "Query lang filter. Use Dédalo lang format like lg-eng for english.\
      \ If undefined, API server settings default lang is used"
    required: false
    type: "string"
    default: "lg-eng"
  ar_fields:
    name: "ar_fields"
    in: "query"
    description: "Comma separated list of required columns in table"
    required: false
    type: "string"
  rows_per_page:
    name: "rows_per_page"
    in: "query"
    description: "Number of records in each page"
    required: false
    type: "integer"
    format: "int"
